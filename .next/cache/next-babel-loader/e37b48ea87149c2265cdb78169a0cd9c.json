{"ast":null,"code":"require('isomorphic-fetch');\n\nconst dotenv = require('dotenv');\n\ndotenv.config();\n\nconst Koa = require('koa');\n\nconst next = require('next');\n\nconst {\n  default: createShopifyAuth\n} = require('@shopify/koa-shopify-auth');\n\nconst {\n  verifyRequest\n} = require('@shopify/koa-shopify-auth');\n\nconst session = require('koa-session');\n\nconst {\n  default: graphQLProxy\n} = require('@shopify/koa-shopify-graphql-proxy');\n\nconst {\n  ApiVersion\n} = require('@shopify/koa-shopify-graphql-proxy');\n\nconst Router = require('koa-router');\n\nconst {\n  receiveWebhook,\n  registerWebhook\n} = require('@shopify/koa-shopify-webhooks');\n\nconst getSubscriptionUrl = require('./server/getSubscriptionUrl');\n\nconst port = parseInt(process.env.PORT, 10) || 3000;\nconst dev = true;\nconst app = next({\n  dev\n});\nconst handle = app.getRequestHandler();\nconst {\n  SHOPIFY_API_SECRET_KEY,\n  SHOPIFY_API_KEY,\n  HOST\n} = process.env;\napp.prepare().then(() => {\n  const server = new Koa();\n  const router = new Router();\n  server.use(session({\n    sameSite: 'none',\n    secure: true\n  }, server));\n  server.keys = [SHOPIFY_API_SECRET_KEY];\n  server.use(createShopifyAuth({\n    apiKey: SHOPIFY_API_KEY,\n    secret: SHOPIFY_API_SECRET_KEY,\n    scopes: ['read_products', 'write_products'],\n\n    async afterAuth(ctx) {\n      const {\n        shop,\n        accessToken\n      } = ctx.session;\n      ctx.cookies.set(\"shopOrigin\", shop, {\n        httpOnly: false,\n        secure: true,\n        sameSite: 'none'\n      });\n      const registration = await registerWebhook({\n        address: `${HOST}/webhooks/products/create`,\n        topic: 'PRODUCTS_CREATE',\n        accessToken,\n        shop,\n        apiVersion: ApiVersion.October19\n      });\n\n      if (registration.success) {\n        console.log('Successfully registered webhook!');\n      } else {\n        console.log('Failed to register webhook', registration.result);\n      }\n\n      await getSubscriptionUrl(ctx, accessToken, shop);\n    }\n\n  }));\n  const webhook = receiveWebhook({\n    secret: SHOPIFY_API_SECRET_KEY\n  });\n  router.post('/webhooks/products/create', webhook, ctx => {\n    console.log('received webhook: ', ctx.state.webhook);\n  });\n  server.use(graphQLProxy({\n    version: ApiVersion.April19\n  }));\n  router.get('*', verifyRequest(), async ctx => {\n    await handle(ctx.req, ctx.res);\n    ctx.respond = false;\n    ctx.res.statusCode = 200;\n  });\n  server.use(router.allowedMethods());\n  server.use(router.routes());\n  server.listen(port, () => {\n    console.log(`> Ready on http://localhost:${port}`);\n  });\n});","map":{"version":3,"sources":["C:/Users/kuldeep/Downloads/aladdin-dropshiper-local/pages/index.js"],"names":["require","dotenv","config","Koa","next","default","createShopifyAuth","verifyRequest","session","graphQLProxy","ApiVersion","Router","receiveWebhook","registerWebhook","getSubscriptionUrl","port","parseInt","process","env","PORT","dev","app","handle","getRequestHandler","SHOPIFY_API_SECRET_KEY","SHOPIFY_API_KEY","HOST","prepare","then","server","router","use","sameSite","secure","keys","apiKey","secret","scopes","afterAuth","ctx","shop","accessToken","cookies","set","httpOnly","registration","address","topic","apiVersion","October19","success","console","log","result","webhook","post","state","version","April19","get","req","res","respond","statusCode","allowedMethods","routes","listen"],"mappings":"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","sourcesContent":["require('isomorphic-fetch');\nconst dotenv = require('dotenv');\ndotenv.config();\nconst Koa = require('koa');\nconst next = require('next');\nconst { default: createShopifyAuth } = require('@shopify/koa-shopify-auth');\nconst { verifyRequest } = require('@shopify/koa-shopify-auth');\nconst session = require('koa-session');\nconst { default: graphQLProxy } = require('@shopify/koa-shopify-graphql-proxy');\nconst { ApiVersion } = require('@shopify/koa-shopify-graphql-proxy');\nconst Router = require('koa-router');\nconst { receiveWebhook, registerWebhook } = require('@shopify/koa-shopify-webhooks');\nconst getSubscriptionUrl = require('./server/getSubscriptionUrl');\n\nconst port = parseInt(process.env.PORT, 10) || 3000;\nconst dev = process.env.NODE_ENV !== 'production';\nconst app = next({ dev });\nconst handle = app.getRequestHandler();\n\nconst {\n  SHOPIFY_API_SECRET_KEY,\n  SHOPIFY_API_KEY,\n  HOST,\n} = process.env;\n\napp.prepare().then(() => {\n  const server = new Koa();\n  const router = new Router();\n  server.use(session({ sameSite: 'none', secure: true }, server));\n  server.keys = [SHOPIFY_API_SECRET_KEY];\n\n  server.use(\n    createShopifyAuth({\n      apiKey: SHOPIFY_API_KEY,\n      secret: SHOPIFY_API_SECRET_KEY,\n      scopes: ['read_products', 'write_products'],\n      async afterAuth(ctx) {\n        const { shop, accessToken } = ctx.session;\n        ctx.cookies.set(\"shopOrigin\", shop, {\n          httpOnly: false,\n          secure: true,\n          sameSite: 'none'\n        });\n        const registration = await registerWebhook({\n          address: `${HOST}/webhooks/products/create`,\n          topic: 'PRODUCTS_CREATE',\n          accessToken,\n          shop,\n          apiVersion: ApiVersion.October19\n        });\n\n        if (registration.success) {\n          console.log('Successfully registered webhook!');\n        } else {\n          console.log('Failed to register webhook', registration.result);\n        }\n        await getSubscriptionUrl(ctx, accessToken, shop);\n      }\n    })\n  );\n\n  const webhook = receiveWebhook({ secret: SHOPIFY_API_SECRET_KEY });\n\n  router.post('/webhooks/products/create', webhook, (ctx) => {\n    console.log('received webhook: ', ctx.state.webhook);\n  });\n\n  server.use(graphQLProxy({ version: ApiVersion.April19 }));\n\n  router.get('*', verifyRequest(), async (ctx) => {\n    await handle(ctx.req, ctx.res);\n    ctx.respond = false;\n    ctx.res.statusCode = 200;\n  });\n\n  server.use(router.allowedMethods());\n  server.use(router.routes());\n\n  server.listen(port, () => {\n    console.log(`> Ready on http://localhost:${port}`);\n  });\n});\n"]},"metadata":{},"sourceType":"script"}