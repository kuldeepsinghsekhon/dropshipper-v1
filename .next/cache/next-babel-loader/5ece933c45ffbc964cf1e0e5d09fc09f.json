{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { Page, FormLayout, Form, Link, Button, InlineError, Select, TextStyle, TextField, Layout, Thumbnail } from '@shopify/polaris';\nimport { CirclePlusMinor } from '@shopify/polaris-icons';\nimport { loadStripe } from '@stripe/stripe-js';\nimport CardForm from '../components/CardForm';\nexport default class Singup extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      firstName: '',\n      lastName: '',\n      email: '',\n      password: '',\n      roleselected: '',\n      emailisInvalid: false,\n      firstNameisInvalid: false,\n      lastNameisInvalid: false,\n      isInvalidPassword: false,\n      role: 'dropshipper',\n      errorMessage: '',\n      errorMessagefirstName: '',\n      errorMessagelastName: '',\n      errorMessageEmail: '',\n      errorMessagePassword: '',\n      errorMessageRole: '',\n      successMessageactive: false\n    });\n  }\n\n  toggleSuccessActive() {\n    this.setState({\n      successMessageactive: !successMessageactive\n    });\n  }\n\n  handleSubmit() {\n    const {\n      firstName,\n      lastName,\n      email,\n      password,\n      roleselected\n    } = this.state;\n    const user = {\n      firstName: firstName,\n      lastName: lastName,\n      email: email,\n      password: password,\n      role: roleselected,\n      password2: password\n    };\n    console.log(user);\n    fetch(\"https://aladdin-dropshipper-server.herokuapp.com/signup\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(user)\n    }).then(res => res.json()).then(json => {\n      console.log(json);\n      this.setState({\n        firstName: '',\n        lastName: '',\n        email: '',\n        password: ''\n      });\n      this.toggleSuccessActive();\n    });\n  }\n\n  handleChoiceChange(value) {\n    console.log(value);\n    this.setState({\n      dropshipper: value\n    });\n  }\n\n  handlePasswordChange(value) {\n    if (value.length < 3) {\n      this.setState({\n        passwordisInvalid: true\n      });\n    }\n\n    if (value.length > 3) {\n      this.setState({\n        passwordisInvalid: false\n      });\n    }\n\n    let errorMessage = this.state.passwordisInvalid ? 'Enter 3 or more characters' : '';\n    console.log(value);\n    this.setState({\n      password: value,\n      errorMessagePassword: errorMessage\n    });\n  }\n\n  handleEmailChange(value) {\n    if (value.length < 3) {\n      this.setState({\n        emailisInvalid: true\n      });\n    }\n\n    if (value.length > 3) {\n      this.setState({\n        emailisInvalid: false\n      });\n    }\n\n    let errorMessage = this.state.emailisInvalid ? 'Enter 3 or more characters ' : '';\n    console.log(value);\n    this.setState({\n      email: value,\n      errorMessageEmail: errorMessage\n    });\n  }\n\n  handlefirstNameChange(value) {\n    if (value.length < 3) {\n      this.setState({\n        firstNameisInvalid: true\n      });\n    }\n\n    if (value.length > 3) {\n      this.setState({\n        firstNameisInvalid: false\n      });\n    }\n\n    let errorMessage = this.state.firstNameisInvalid ? 'Enter 3 or more characters ' : '';\n    console.log(value);\n    this.setState({\n      firstName: value,\n      errorMessagefirstName: errorMessage\n    });\n  }\n\n  handlelastNameChange(value) {\n    if (value.length < 3) {\n      this.setState({\n        lastNameisInvalid: true\n      });\n    }\n\n    if (value.length > 3) {\n      this.setState({\n        lastNameisInvalid: false\n      });\n    }\n\n    let errorMessage = this.state.lastNameisInvalid ? 'Enter 3 or more characters ' : '';\n    console.log(value);\n    this.setState({\n      lastName: value,\n      errorMessagefirstName: errorMessage\n    });\n  }\n\n  handleRoleChange(value) {\n    console.log(value);\n    this.setState({\n      roleselected: value\n    });\n  }\n\n  render() {\n    const {\n      firstName,\n      lastName,\n      email,\n      password,\n      roleselected,\n      errorMessagefirstName,\n      errorMessagelastName,\n      errorMessageEmail,\n      errorMessagePassword,\n      errorMessageRole,\n      firstNameisInvalid,\n      lastNameisInvalid,\n      isInvalidPassword,\n      emailisInvalid\n    } = this.state;\n    const toastMarkup = successMessageactive ? __jsx(Toast, {\n      content: \"Registered Successfully\",\n      onDismiss: () => this.toggleSuccessActive()\n    }) : null;\n    return __jsx(Page, {\n      title: \"Signup\",\n      separator: true\n    }, toastMarkup, __jsx(Form, {\n      onSubmit: () => this.handleSubmit()\n    }, __jsx(FormLayout, null, __jsx(TextField, {\n      value: firstName,\n      onChange: value => this.handlefirstNameChange(value),\n      label: \"FirstName\",\n      type: \"text\",\n      error: firstNameisInvalid,\n      id: \"firstname\",\n      helpText: __jsx(\"span\", null, \"Enter your First Name.\")\n    }), __jsx(\"div\", {\n      style: {\n        marginTop: '4px'\n      }\n    }, __jsx(InlineError, {\n      message: errorMessagefirstName,\n      fieldID: 'firstname'\n    })), __jsx(TextField, {\n      value: lastName,\n      onChange: value => this.handlelastNameChange(value),\n      label: \"FirstName\",\n      type: \"text\",\n      error: lastNameisInvalid,\n      id: \"lasttname\",\n      helpText: __jsx(\"span\", null, \"Enter your Last Name.\")\n    }), __jsx(\"div\", {\n      style: {\n        marginTop: '4px'\n      }\n    }, __jsx(InlineError, {\n      message: errorMessagelastName,\n      fieldID: 'lasttname'\n    })), __jsx(TextField, {\n      value: email,\n      onChange: value => this.handleEmailChange(value),\n      label: \"Email\",\n      type: \"email\",\n      error: emailisInvalid,\n      id: \"email\",\n      helpText: __jsx(\"span\", null, \"Enter your email Address.\")\n    }), __jsx(\"div\", {\n      style: {\n        marginTop: '4px'\n      }\n    }, __jsx(InlineError, {\n      message: errorMessageEmail,\n      fieldID: 'email'\n    })), __jsx(TextField, {\n      value: password,\n      onChange: value => this.handlePasswordChange(value),\n      label: \"Password\",\n      type: \"password\",\n      error: isInvalidPassword,\n      id: \"password\",\n      helpText: __jsx(\"span\", null, \"Enter your Password.\")\n    }), __jsx(\"div\", {\n      style: {\n        marginTop: '4px'\n      }\n    }, __jsx(InlineError, {\n      message: errorMessagePassword,\n      fieldID: 'password'\n    })), __jsx(Select, {\n      label: \"Select Role\",\n      options: [{\n        label: 'Seller',\n        value: 'seller'\n      }, {\n        label: 'DropShipper',\n        value: 'dropShipper'\n      }],\n      id: \"role\",\n      selected: roleselected,\n      onChange: value => this.handleRoleChange(value)\n    }), __jsx(\"div\", {\n      style: {\n        marginTop: '4px'\n      }\n    }, __jsx(InlineError, {\n      message: errorMessageRole,\n      fieldID: 'role'\n    })), __jsx(Button, {\n      submit: true\n    }, \"Sign In\"), __jsx(Link, {\n      url: \"/index\"\n    }, \"Already Resgistered?\"))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/kuldeep/Downloads/aladdin-dropshiper-local/pages/signup.js"],"names":["React","Page","FormLayout","Form","Link","Button","InlineError","Select","TextStyle","TextField","Layout","Thumbnail","CirclePlusMinor","loadStripe","CardForm","Singup","Component","firstName","lastName","email","password","roleselected","emailisInvalid","firstNameisInvalid","lastNameisInvalid","isInvalidPassword","role","errorMessage","errorMessagefirstName","errorMessagelastName","errorMessageEmail","errorMessagePassword","errorMessageRole","successMessageactive","toggleSuccessActive","setState","handleSubmit","state","user","password2","console","log","fetch","method","headers","body","JSON","stringify","then","res","json","handleChoiceChange","value","dropshipper","handlePasswordChange","length","passwordisInvalid","handleEmailChange","handlefirstNameChange","handlelastNameChange","handleRoleChange","render","toastMarkup","marginTop","label"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {Page,FormLayout,Form, Link,Button, InlineError ,Select, TextStyle, TextField, Layout,Thumbnail} from '@shopify/polaris';\r\nimport {CirclePlusMinor} from '@shopify/polaris-icons';\r\nimport {loadStripe} from '@stripe/stripe-js';\r\nimport CardForm from '../components/CardForm';\r\n\r\nexport default class Singup extends React.Component {\r\n    state = {\r\n      firstName:'',\r\n      lastName:'',\r\n        email:'',\r\n        password:'',\r\n        roleselected:'',\r\n        emailisInvalid:false,\r\n        firstNameisInvalid:false,\r\n        lastNameisInvalid:false,\r\n        isInvalidPassword:false,\r\n        role:'dropshipper',\r\n        errorMessage :'',\r\n        errorMessagefirstName:'',\r\n        errorMessagelastName:'',\r\n        errorMessageEmail:'',\r\n        errorMessagePassword:'',\r\n        errorMessageRole:'',\r\n        successMessageactive:false\r\n      };\r\n   toggleSuccessActive(){\r\n      this.setState({successMessageactive:!successMessageactive})\r\n   }\r\n      handleSubmit(){\r\n        \r\n        const{firstName,lastName,email,password,roleselected}=this.state;\r\n        const user={firstName:firstName,lastName:lastName,email:email,password:password,role:roleselected,password2:password};\r\n        console.log(user)\r\n     fetch(\"https://aladdin-dropshipper-server.herokuapp.com/signup\", {\r\n       method: \"POST\",\r\n       headers: {\r\n         \"Content-Type\": \"application/json\",\r\n       },\r\n       body: JSON.stringify(user)\r\n     }).then(res=>res.json())\r\n     .then(\r\n            (json) =>{ console.log(json)\r\n                  this.setState({firstName:'',lastName:'',email:'',  password:'' })\r\n                  this.toggleSuccessActive();\r\n                 }\r\n          )\r\n         \r\n          \r\n      }\r\n      \r\n      handleChoiceChange(value){\r\n        console.log(value)\r\n        this.setState({dropshipper:value})\r\n      }\r\n      handlePasswordChange(value){\r\n        if(value.length < 3){\r\n          this.setState({passwordisInvalid:true})\r\n        }\r\n        if(value.length > 3){\r\n          this.setState({passwordisInvalid:false})\r\n        }\r\n       let errorMessage = this.state.passwordisInvalid\r\n    ? 'Enter 3 or more characters'\r\n    : '';\r\n \r\n        console.log(value)\r\n        this.setState({password:value,errorMessagePassword:errorMessage})\r\n      }\r\n      handleEmailChange(value){\r\n        if(value.length < 3){\r\n          this.setState({emailisInvalid:true})\r\n        }\r\n        if(value.length > 3){\r\n          this.setState({emailisInvalid:false})\r\n        }\r\n       let errorMessage = this.state.emailisInvalid\r\n    ? 'Enter 3 or more characters '\r\n    : '';\r\n \r\n        console.log(value)\r\n        this.setState({email:value,errorMessageEmail:errorMessage})\r\n    }\r\n    handlefirstNameChange(value){\r\n      if(value.length < 3){\r\n        this.setState({firstNameisInvalid:true})\r\n      }\r\n      if(value.length > 3){\r\n        this.setState({firstNameisInvalid:false})\r\n      }\r\n     let errorMessage = this.state.firstNameisInvalid\r\n  ? 'Enter 3 or more characters '\r\n  : '';\r\n\r\n      console.log(value)\r\n      this.setState({firstName:value,errorMessagefirstName:errorMessage})\r\n  }\r\n  handlelastNameChange(value){\r\n    if(value.length < 3){\r\n      this.setState({lastNameisInvalid:true})\r\n    }\r\n    if(value.length > 3){\r\n      this.setState({lastNameisInvalid:false})\r\n    }\r\n   let errorMessage = this.state.lastNameisInvalid\r\n? 'Enter 3 or more characters '\r\n: '';\r\n\r\n    console.log(value)\r\n    this.setState({lastName:value,errorMessagefirstName:errorMessage})\r\n}\r\n    handleRoleChange(value){\r\n      console.log(value)\r\n      this.setState({roleselected:value})\r\n    }\r\n       \r\n    render() {\r\n        const{firstName,lastName,email,password,roleselected,errorMessagefirstName,errorMessagelastName,errorMessageEmail,errorMessagePassword,errorMessageRole,firstNameisInvalid,lastNameisInvalid,isInvalidPassword,emailisInvalid}=this.state;\r\n        const toastMarkup = successMessageactive ? (\r\n          <Toast content=\"Registered Successfully\" onDismiss={()=>this.toggleSuccessActive()} />\r\n        ) : null;\r\n       \r\n    return (\r\n        <Page title=\"Signup\" separator>  \r\n        {toastMarkup}   \r\n <Form onSubmit={()=>this.handleSubmit()}>\r\n      <FormLayout>\r\n      <TextField\r\n          value={firstName}\r\n          onChange={(value) => this.handlefirstNameChange(value)}\r\n          label=\"FirstName\"\r\n          type=\"text\"\r\n          error={firstNameisInvalid}\r\n          id=\"firstname\"\r\n          helpText={\r\n            <span>\r\n              Enter your First Name.\r\n            </span>\r\n          }\r\n        />\r\n         <div style={{marginTop: '4px'}}>\r\n          <InlineError message={errorMessagefirstName} fieldID={'firstname'} />\r\n        </div>\r\n        <TextField\r\n          value={lastName}\r\n          onChange={(value) => this.handlelastNameChange(value)}\r\n          label=\"FirstName\"\r\n          type=\"text\"\r\n          error={lastNameisInvalid}\r\n          id=\"lasttname\"\r\n          helpText={\r\n            <span>\r\n              Enter your Last Name.\r\n            </span>\r\n          }\r\n        />\r\n          <div style={{marginTop: '4px'}}>\r\n          <InlineError message={errorMessagelastName} fieldID={'lasttname'} />\r\n        </div>\r\n     \r\n        <TextField\r\n          value={email}\r\n          onChange={(value) => this.handleEmailChange(value)}\r\n          label=\"Email\"\r\n          type=\"email\"\r\n          error={emailisInvalid}\r\n          id=\"email\"\r\n          helpText={\r\n            <span>\r\n              Enter your email Address.\r\n            </span>\r\n          }\r\n        />\r\n          <div style={{marginTop: '4px'}}>\r\n          <InlineError message={errorMessageEmail} fieldID={'email'} />\r\n        </div>\r\n             <TextField\r\n          value={password}\r\n          onChange={(value) => this.handlePasswordChange(value)}\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          error={isInvalidPassword}\r\n          id=\"password\"\r\n          helpText={\r\n            <span>\r\n              Enter your Password.\r\n            </span>\r\n          }\r\n        />\r\n         <div style={{marginTop: '4px'}}>\r\n          <InlineError message={errorMessagePassword} fieldID={'password'} />\r\n        </div>\r\n        <Select\r\n        label=\"Select Role\"\r\n        options={[\r\n          {label: 'Seller', value: 'seller'},\r\n          {label: 'DropShipper', value: 'dropShipper'},\r\n        ]}\r\n        id=\"role\"\r\n        selected={roleselected}\r\n        onChange={(value)=>this.handleRoleChange(value)}\r\n      />\r\n          <div style={{marginTop: '4px'}}>\r\n          <InlineError message={errorMessageRole} fieldID={'role'} />\r\n        </div>\r\n\r\n        <Button submit>Sign In</Button>\r\n        <Link url=\"/index\">Already Resgistered?</Link>\r\n           </FormLayout>\r\n    </Form>\r\n        </Page>\r\n\r\n    );\r\n\r\n    }\r\n    \r\n}"]},"metadata":{},"sourceType":"module"}