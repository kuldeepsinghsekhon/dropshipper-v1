{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport App from 'next/app';\nimport Head from 'next/head';\nimport { AppProvider, Frame, FooterHelp, Link, TopBar } from '@shopify/polaris';\nimport { ArrowLeftMinor, ConversationMinor, HomeMajorMonotone, OrdersMajorTwotone } from '@shopify/polaris-icons';\nimport translations from '@shopify/polaris/locales/en.json';\nimport '@shopify/polaris/styles.css';\nimport { Provider } from '@shopify/app-bridge-react';\nimport Cookies from 'js-cookie';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\nconst client = new ApolloClient({\n  fetchOptions: {\n    credentials: 'include'\n  }\n});\n\nclass MyApp extends App {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      isUserMenuOpen: false,\n      toggleIsUserMenuOpen: false\n    });\n  }\n\n  handleNavigationToggle() {\n    console.log('toggle navigation visibility');\n  }\n\n  toggleIsUserMenuOpen() {\n    this.setState({\n      isUserMenuOpen: !this.state.isUserMenuOpen\n    });\n    console.log(this.state.isUserMenuOpen);\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps\n    } = this.props;\n    const {\n      isUserMenuOpen\n    } = this.state;\n\n    const userMenuMarkup = __jsx(TopBar.UserMenu, {\n      actions: [{\n        items: [{\n          content: 'Back to Shopify',\n          icon: ArrowLeftMinor\n        }]\n      }, {\n        items: [{\n          content: 'Community forums'\n        }]\n      }],\n      name: \"Kuldeep\",\n      detail: \"Kuldeep Singh\",\n      initials: \"K\",\n      open: isUserMenuOpen,\n      onToggle: () => this.toggleIsUserMenuOpen()\n    });\n\n    const navigationMarkup = __jsx(Navigation, {\n      location: \"/\"\n    }, __jsx(Navigation.Section, {\n      items: [{\n        label: 'Back to Shopify',\n        icon: ArrowLeftMinor\n      }]\n    }), __jsx(Navigation.Section, {\n      separator: true,\n      title: \"Jaded Pixel App\",\n      items: [{\n        label: 'Dashboard',\n        icon: HomeMajorMonotone,\n        onClick: toggleIsLoading\n      }, {\n        label: 'Jaded Pixel Orders',\n        icon: OrdersMajorTwotone,\n        onClick: toggleIsLoading\n      }],\n      action: {\n        icon: ConversationMinor,\n        accessibilityLabel: 'Contact support',\n        onClick: () => {}\n      }\n    }));\n\n    const topBarMarkup = __jsx(TopBar, {\n      showNavigationToggle: true,\n      userMenu: userMenuMarkup,\n      onNavigationToggle: () => this.handleNavigationToggle()\n    });\n\n    const config = {\n      apiKey: API_KEY,\n      shopOrigin: Cookies.get(\"shopOrigin\"),\n      forceRedirect: true\n    };\n    return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"Sample App\"), __jsx(\"meta\", {\n      charSet: \"utf-8\"\n    })), __jsx(Provider, {\n      config: config\n    }, __jsx(AppProvider, {\n      i18n: translations\n    }, __jsx(Frame, {\n      topBar: topBarMarkup,\n      navigation: navigationMarkup\n    }, __jsx(ApolloProvider, {\n      client: client\n    }, __jsx(Component, pageProps), __jsx(FooterHelp, null, \"Learn more about\", ' ', __jsx(Link, {\n      url: \"https://help.shopify.com/manual/orders/fulfill-orders\"\n    }, \"fulfilling orders\")))))));\n  }\n\n}\n\nexport default MyApp;","map":{"version":3,"sources":["C:/Users/kuldeep/Downloads/aladdin-dropshiper-local/pages/_app.js"],"names":["App","Head","AppProvider","Frame","FooterHelp","Link","TopBar","ArrowLeftMinor","ConversationMinor","HomeMajorMonotone","OrdersMajorTwotone","translations","Provider","Cookies","ApolloClient","ApolloProvider","client","fetchOptions","credentials","MyApp","isUserMenuOpen","toggleIsUserMenuOpen","handleNavigationToggle","console","log","setState","state","render","Component","pageProps","props","userMenuMarkup","items","content","icon","navigationMarkup","label","onClick","toggleIsLoading","accessibilityLabel","topBarMarkup","config","apiKey","API_KEY","shopOrigin","get","forceRedirect"],"mappings":"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","sourcesContent":["import App from 'next/app';\nimport Head from 'next/head';\nimport { AppProvider,Frame,FooterHelp,Link,TopBar} from '@shopify/polaris';\nimport {ArrowLeftMinor, ConversationMinor, HomeMajorMonotone, OrdersMajorTwotone} from '@shopify/polaris-icons';\nimport translations from '@shopify/polaris/locales/en.json';\nimport '@shopify/polaris/styles.css';\nimport { Provider } from '@shopify/app-bridge-react';\nimport Cookies from 'js-cookie';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\nconst client = new ApolloClient({\n  fetchOptions: {\n    credentials: 'include'\n  },\n});\nclass MyApp extends App {  \n  state={\n    isUserMenuOpen:false,\n    toggleIsUserMenuOpen:false\n  };\n  handleNavigationToggle(){\n    console.log('toggle navigation visibility');\n  }\n  toggleIsUserMenuOpen(){\n    \n    this.setState({isUserMenuOpen:!this.state.isUserMenuOpen})\n    console.log(this.state.isUserMenuOpen)\n  }\n  render() {\n    const { Component, pageProps } = this.props;\n    const{isUserMenuOpen}=this.state;\n    const userMenuMarkup = (\n      <TopBar.UserMenu\n        actions={[\n          {\n            items: [{content: 'Back to Shopify', icon: ArrowLeftMinor}],\n          },\n          {\n            items: [{content: 'Community forums'}],\n          },\n        ]}\n        name=\"Kuldeep\"\n        detail=\"Kuldeep Singh\"\n        initials=\"K\"\n        open={isUserMenuOpen}\n        onToggle={()=>this.toggleIsUserMenuOpen()}\n      />\n    );\n    const navigationMarkup = (\n      <Navigation location=\"/\">\n        <Navigation.Section\n          items={[\n            {\n              label: 'Back to Shopify',\n              icon: ArrowLeftMinor,\n            },\n          ]}\n        />\n        <Navigation.Section\n          separator\n          title=\"Jaded Pixel App\"\n          items={[\n            {\n              label: 'Dashboard',\n              icon: HomeMajorMonotone,\n              onClick: toggleIsLoading,\n            },\n            {\n              label: 'Jaded Pixel Orders',\n              icon: OrdersMajorTwotone,\n              onClick: toggleIsLoading,\n            },\n          ]}\n          action={{\n            icon: ConversationMinor,\n            accessibilityLabel: 'Contact support',\n            onClick: ()=>{},\n          }}\n        />\n      </Navigation>\n    );\n  \n    const topBarMarkup = (\n      <TopBar\n        showNavigationToggle\n        userMenu={userMenuMarkup}\n        onNavigationToggle={()=>this.handleNavigationToggle()}\n      />\n    );\n    const config = { apiKey: API_KEY, shopOrigin: Cookies.get(\"shopOrigin\"), forceRedirect: true };\n    return (\n      <React.Fragment>\n        <Head>\n          <title>Sample App</title>\n          <meta charSet=\"utf-8\" />\n        </Head> \n        <Provider config={config}>     \n        <AppProvider  i18n={translations}>\n        <Frame topBar={topBarMarkup} \n        navigation={navigationMarkup}>\n        <ApolloProvider client={client}>\n            <Component {...pageProps} />\n            <FooterHelp>\n  Learn more about{' '}\n  <Link url=\"https://help.shopify.com/manual/orders/fulfill-orders\">\n    fulfilling orders\n  </Link>\n</FooterHelp>\n          </ApolloProvider>\n         </Frame>\n          </AppProvider> \n          </Provider>       \n      </React.Fragment>\n    );\n  }\n}\nexport default MyApp;"]},"metadata":{},"sourceType":"module"}