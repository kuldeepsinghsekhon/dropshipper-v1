{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { Page, FormLayout, Form, Link, Button, InlineError, Select, Toast, TextField, Layout, Thumbnail } from '@shopify/polaris';\nimport { CirclePlusMinor } from '@shopify/polaris-icons';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport { Context } from '@shopify/app-bridge-react';\nimport store from 'store-js';\n\nvar axios = require('axios');\n\nvar Singup = /*#__PURE__*/function (_React$Component) {\n  _inherits(Singup, _React$Component);\n\n  var _super = _createSuper(Singup);\n\n  function Singup() {\n    var _this;\n\n    _classCallCheck(this, Singup);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      firstName: '',\n      lastName: '',\n      email: '',\n      password: '',\n      roleselected: '',\n      emailisInvalid: false,\n      firstNameisInvalid: false,\n      lastNameisInvalid: false,\n      isInvalidPassword: false,\n      role: 'dropshipper',\n      errorMessage: '',\n      errorMessagefirstName: '',\n      errorMessagelastName: '',\n      errorMessageEmail: '',\n      errorMessagePassword: '',\n      errorMessageRole: '',\n      successMessageactive: false\n    });\n\n    return _this;\n  }\n\n  _createClass(Singup, [{\n    key: \"toggleSuccessActive\",\n    value: function toggleSuccessActive() {\n      this.setState({\n        successMessageactive: !this.state.successMessageactive\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit() {\n      var _this2 = this;\n\n      var redirect = Redirect.create(this.context);\n      var options = {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      };\n      var url = \"https://aladdin-dropshipper-server.herokuapp.com/signup\";\n      var _this$state = this.state,\n          firstName = _this$state.firstName,\n          lastName = _this$state.lastName,\n          email = _this$state.email,\n          password = _this$state.password,\n          roleselected = _this$state.roleselected;\n      var user = {\n        \"firstName\": firstName,\n        \"lastName\": lastName,\n        \"email\": email,\n        \"password\": password,\n        \"role\": roleselected,\n        \"password2\": password\n      }; //console.log(user)\n\n      axios.post(url, user).then(function (response) {\n        console.log(response.data);\n        store.set('user', response.data);\n\n        _this2.setState({\n          firstName: '',\n          lastName: '',\n          email: '',\n          password: ''\n        });\n\n        _this2.toggleSuccessActive();\n\n        redirect.dispatch(Redirect.Action.APP, '/');\n      })[\"catch\"](function (error) {//console.log(error);\n      }); //  fetch(url, {\n      //    method: \"POST\",\n      //    headers: {\n      //      \"Content-Type\": \"application/json\",\n      //    },\n      //    body: JSON.stringify(user)\n      //  }).then(res=>res.json())\n      //  .then(\n      //         (json) =>{ console.log(json)\n      //               this.setState({firstName:'',lastName:'',email:'',  password:'' })\n      //               this.toggleSuccessActive();\n      //              }\n      //       )\n    }\n  }, {\n    key: \"handleChoiceChange\",\n    value: function handleChoiceChange(value) {\n      console.log(value);\n      this.setState({\n        dropshipper: value\n      });\n    }\n  }, {\n    key: \"handlePasswordChange\",\n    value: function handlePasswordChange(value) {\n      if (value.length < 3) {\n        this.setState({\n          passwordisInvalid: true\n        });\n      }\n\n      if (value.length > 3) {\n        this.setState({\n          passwordisInvalid: false\n        });\n      }\n\n      var errorMessage = this.state.passwordisInvalid ? 'Enter 3 or more characters' : '';\n      console.log(value);\n      this.setState({\n        password: value,\n        errorMessagePassword: errorMessage\n      });\n    }\n  }, {\n    key: \"handleEmailChange\",\n    value: function handleEmailChange(value) {\n      if (value.length < 3) {\n        this.setState({\n          emailisInvalid: true\n        });\n      }\n\n      if (value.length > 3) {\n        this.setState({\n          emailisInvalid: false\n        });\n      }\n\n      var errorMessage = this.state.emailisInvalid ? 'Enter 3 or more characters ' : '';\n      console.log(value);\n      this.setState({\n        email: value,\n        errorMessageEmail: errorMessage\n      });\n    }\n  }, {\n    key: \"handlefirstNameChange\",\n    value: function handlefirstNameChange(value) {\n      if (value.length < 3) {\n        this.setState({\n          firstNameisInvalid: true\n        });\n      }\n\n      if (value.length > 3) {\n        this.setState({\n          firstNameisInvalid: false\n        });\n      }\n\n      var errorMessage = this.state.firstNameisInvalid ? 'Enter 3 or more characters ' : '';\n      console.log(value);\n      this.setState({\n        firstName: value,\n        errorMessagefirstName: errorMessage\n      });\n    }\n  }, {\n    key: \"handlelastNameChange\",\n    value: function handlelastNameChange(value) {\n      if (value.length < 3) {\n        this.setState({\n          lastNameisInvalid: true\n        });\n      }\n\n      if (value.length > 3) {\n        this.setState({\n          lastNameisInvalid: false\n        });\n      }\n\n      var errorMessage = this.state.lastNameisInvalid ? 'Enter 3 or more characters ' : '';\n      console.log(value);\n      this.setState({\n        lastName: value,\n        errorMessagefirstName: errorMessage\n      });\n    }\n  }, {\n    key: \"handleRoleChange\",\n    value: function handleRoleChange(value) {\n      console.log(value);\n      this.setState({\n        roleselected: value\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state2 = this.state,\n          firstName = _this$state2.firstName,\n          lastName = _this$state2.lastName,\n          email = _this$state2.email,\n          password = _this$state2.password,\n          roleselected = _this$state2.roleselected,\n          errorMessagefirstName = _this$state2.errorMessagefirstName,\n          errorMessagelastName = _this$state2.errorMessagelastName,\n          errorMessageEmail = _this$state2.errorMessageEmail,\n          errorMessagePassword = _this$state2.errorMessagePassword,\n          errorMessageRole = _this$state2.errorMessageRole,\n          firstNameisInvalid = _this$state2.firstNameisInvalid,\n          lastNameisInvalid = _this$state2.lastNameisInvalid,\n          isInvalidPassword = _this$state2.isInvalidPassword,\n          emailisInvalid = _this$state2.emailisInvalid,\n          successMessageactive = _this$state2.successMessageactive;\n      var toastMarkup = successMessageactive ? __jsx(Toast, {\n        content: \"Registered Successfully\",\n        onDismiss: function onDismiss() {\n          return _this3.toggleSuccessActive();\n        }\n      }) : null;\n      return __jsx(Page, {\n        title: \"Signup\",\n        separator: true\n      }, toastMarkup, __jsx(Form, {\n        onSubmit: function onSubmit() {\n          return _this3.handleSubmit();\n        }\n      }, __jsx(FormLayout, null, __jsx(TextField, {\n        value: firstName,\n        onChange: function onChange(value) {\n          return _this3.handlefirstNameChange(value);\n        },\n        label: \"FirstName\",\n        type: \"text\",\n        error: firstNameisInvalid,\n        id: \"firstname\",\n        helpText: __jsx(\"span\", null, \"Enter your First Name.\")\n      }), __jsx(\"div\", {\n        style: {\n          marginTop: '4px'\n        }\n      }, __jsx(InlineError, {\n        message: errorMessagefirstName,\n        fieldID: 'firstname'\n      })), __jsx(TextField, {\n        value: lastName,\n        onChange: function onChange(value) {\n          return _this3.handlelastNameChange(value);\n        },\n        label: \"FirstName\",\n        type: \"text\",\n        error: lastNameisInvalid,\n        id: \"lasttname\",\n        helpText: __jsx(\"span\", null, \"Enter your Last Name.\")\n      }), __jsx(\"div\", {\n        style: {\n          marginTop: '4px'\n        }\n      }, __jsx(InlineError, {\n        message: errorMessagelastName,\n        fieldID: 'lasttname'\n      })), __jsx(TextField, {\n        value: email,\n        onChange: function onChange(value) {\n          return _this3.handleEmailChange(value);\n        },\n        label: \"Email\",\n        type: \"email\",\n        error: emailisInvalid,\n        id: \"email\",\n        helpText: __jsx(\"span\", null, \"Enter your email Address.\")\n      }), __jsx(\"div\", {\n        style: {\n          marginTop: '4px'\n        }\n      }, __jsx(InlineError, {\n        message: errorMessageEmail,\n        fieldID: 'email'\n      })), __jsx(TextField, {\n        value: password,\n        onChange: function onChange(value) {\n          return _this3.handlePasswordChange(value);\n        },\n        label: \"Password\",\n        type: \"password\",\n        error: isInvalidPassword,\n        id: \"password\",\n        helpText: __jsx(\"span\", null, \"Enter your Password.\")\n      }), __jsx(\"div\", {\n        style: {\n          marginTop: '4px'\n        }\n      }, __jsx(InlineError, {\n        message: errorMessagePassword,\n        fieldID: 'password'\n      })), __jsx(Select, {\n        label: \"Select Role\",\n        options: [{\n          label: 'Seller',\n          value: 'seller'\n        }, {\n          label: 'DropShipper',\n          value: 'dropshipper'\n        }],\n        id: \"role\",\n        selected: roleselected,\n        onChange: function onChange(value) {\n          return _this3.handleRoleChange(value);\n        }\n      }), __jsx(\"div\", {\n        style: {\n          marginTop: '4px'\n        }\n      }, __jsx(InlineError, {\n        message: errorMessageRole,\n        fieldID: 'role'\n      })), __jsx(Button, {\n        submit: true\n      }, \"Signup\"), __jsx(Link, {\n        url: \"/index\"\n      }, \"Already Resgistered?\"))));\n    }\n  }]);\n\n  return Singup;\n}(React.Component);\n\n_defineProperty(Singup, \"contextType\", Context);\n\nexport { Singup as default };","map":{"version":3,"sources":["C:/Users/kuldeep/Downloads/aladdin-dropshiper-local/pages/signup.js"],"names":["React","Page","FormLayout","Form","Link","Button","InlineError","Select","Toast","TextField","Layout","Thumbnail","CirclePlusMinor","loadStripe","Redirect","Context","store","axios","require","Singup","firstName","lastName","email","password","roleselected","emailisInvalid","firstNameisInvalid","lastNameisInvalid","isInvalidPassword","role","errorMessage","errorMessagefirstName","errorMessagelastName","errorMessageEmail","errorMessagePassword","errorMessageRole","successMessageactive","setState","state","redirect","create","context","options","headers","url","user","post","then","response","console","log","data","set","toggleSuccessActive","dispatch","Action","APP","error","value","dropshipper","length","passwordisInvalid","toastMarkup","handleSubmit","handlefirstNameChange","marginTop","handlelastNameChange","handleEmailChange","handlePasswordChange","label","handleRoleChange","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {Page,FormLayout,Form, Link,Button, InlineError ,Select, Toast, TextField, Layout,Thumbnail} from '@shopify/polaris';\r\nimport {CirclePlusMinor} from '@shopify/polaris-icons';\r\nimport {loadStripe} from '@stripe/stripe-js';\r\nimport { Redirect } from '@shopify/app-bridge/actions';\r\nimport { Context } from '@shopify/app-bridge-react';\r\nimport store from 'store-js';\r\nconst axios =require('axios');\r\n\r\nexport default class Singup extends React.Component {\r\n  static contextType = Context;\r\n    state = {\r\n      firstName:'',\r\n      lastName:'',\r\n        email:'',\r\n        password:'',\r\n        roleselected:'',\r\n        emailisInvalid:false,\r\n        firstNameisInvalid:false,\r\n        lastNameisInvalid:false,\r\n        isInvalidPassword:false,\r\n        role:'dropshipper',\r\n        errorMessage :'',\r\n        errorMessagefirstName:'',\r\n        errorMessagelastName:'',\r\n        errorMessageEmail:'',\r\n        errorMessagePassword:'',\r\n        errorMessageRole:'',\r\n        successMessageactive:false\r\n      };\r\n   toggleSuccessActive(){\r\n      this.setState({successMessageactive:!this.state.successMessageactive})\r\n   }\r\n      handleSubmit(){\r\n        const redirect = Redirect.create(this.context);\r\n        const options = {\r\n          headers: {\r\n              'Content-Type': 'application/json',\r\n          }\r\n        };\r\n        let url=\"https://aladdin-dropshipper-server.herokuapp.com/signup\";\r\n        const{firstName,lastName,email,password,roleselected}=this.state;\r\n        const user={\"firstName\":firstName,\"lastName\":lastName,\"email\":email,\"password\":password,\"role\":roleselected,\"password2\":password};\r\n        //console.log(user)\r\n        axios.post(url,user).then( ( response ) => {\r\n          console.log(response.data )\r\n          store.set('user',response.data)\r\n            this.setState({firstName:'',lastName:'',email:'',  password:'', })\r\n            this.toggleSuccessActive();   \r\n            redirect.dispatch(Redirect.Action.APP,'/')      \r\n        } ).catch(function (error) {\r\n          //console.log(error);\r\n        })\r\n    //  fetch(url, {\r\n    //    method: \"POST\",\r\n    //    headers: {\r\n    //      \"Content-Type\": \"application/json\",\r\n    //    },\r\n    //    body: JSON.stringify(user)\r\n    //  }).then(res=>res.json())\r\n    //  .then(\r\n    //         (json) =>{ console.log(json)\r\n    //               this.setState({firstName:'',lastName:'',email:'',  password:'' })\r\n    //               this.toggleSuccessActive();\r\n    //              }\r\n    //       )\r\n         \r\n          \r\n      }\r\n      \r\n      handleChoiceChange(value){\r\n        console.log(value)\r\n        this.setState({dropshipper:value})\r\n      }\r\n      handlePasswordChange(value){\r\n        if(value.length < 3){\r\n          this.setState({passwordisInvalid:true})\r\n        }\r\n        if(value.length > 3){\r\n          this.setState({passwordisInvalid:false})\r\n        }\r\n       let errorMessage = this.state.passwordisInvalid\r\n    ? 'Enter 3 or more characters'\r\n    : '';\r\n \r\n        console.log(value)\r\n        this.setState({password:value,errorMessagePassword:errorMessage})\r\n      }\r\n      handleEmailChange(value){\r\n        if(value.length < 3){\r\n          this.setState({emailisInvalid:true})\r\n        }\r\n        if(value.length > 3){\r\n          this.setState({emailisInvalid:false})\r\n        }\r\n       let errorMessage = this.state.emailisInvalid\r\n    ? 'Enter 3 or more characters '\r\n    : '';\r\n \r\n        console.log(value)\r\n        this.setState({email:value,errorMessageEmail:errorMessage})\r\n    }\r\n    handlefirstNameChange(value){\r\n      if(value.length < 3){\r\n        this.setState({firstNameisInvalid:true})\r\n      }\r\n      if(value.length > 3){\r\n        this.setState({firstNameisInvalid:false})\r\n      }\r\n     let errorMessage = this.state.firstNameisInvalid\r\n  ? 'Enter 3 or more characters '\r\n  : '';\r\n\r\n      console.log(value)\r\n      this.setState({firstName:value,errorMessagefirstName:errorMessage})\r\n  }\r\n  handlelastNameChange(value){\r\n    if(value.length < 3){\r\n      this.setState({lastNameisInvalid:true})\r\n    }\r\n    if(value.length > 3){\r\n      this.setState({lastNameisInvalid:false})\r\n    }\r\n   let errorMessage = this.state.lastNameisInvalid\r\n? 'Enter 3 or more characters '\r\n: '';\r\n\r\n    console.log(value)\r\n    this.setState({lastName:value,errorMessagefirstName:errorMessage})\r\n}\r\n    handleRoleChange(value){\r\n      console.log(value)\r\n      this.setState({roleselected:value})\r\n    }\r\n       \r\n    render() {\r\n        const{firstName,lastName,email,password,roleselected,errorMessagefirstName,errorMessagelastName,errorMessageEmail,errorMessagePassword,errorMessageRole,firstNameisInvalid,lastNameisInvalid,isInvalidPassword,emailisInvalid,successMessageactive }=this.state;\r\n        const toastMarkup = successMessageactive ? (\r\n          <Toast content=\"Registered Successfully\" onDismiss={()=>this.toggleSuccessActive()} />\r\n        ) : null;\r\n       \r\n    return (\r\n        <Page title=\"Signup\" separator>  \r\n        {toastMarkup}   \r\n <Form onSubmit={()=>this.handleSubmit()}>\r\n      <FormLayout>\r\n      <TextField\r\n          value={firstName}\r\n          onChange={(value) => this.handlefirstNameChange(value)}\r\n          label=\"FirstName\"\r\n          type=\"text\"\r\n          error={firstNameisInvalid}\r\n          id=\"firstname\"\r\n          helpText={\r\n            <span>\r\n              Enter your First Name.\r\n            </span>\r\n          }\r\n        />\r\n         <div style={{marginTop: '4px'}}>\r\n          <InlineError message={errorMessagefirstName} fieldID={'firstname'} />\r\n        </div>\r\n        <TextField\r\n          value={lastName}\r\n          onChange={(value) => this.handlelastNameChange(value)}\r\n          label=\"FirstName\"\r\n          type=\"text\"\r\n          error={lastNameisInvalid}\r\n          id=\"lasttname\"\r\n          helpText={\r\n            <span>\r\n              Enter your Last Name.\r\n            </span>\r\n          }\r\n        />\r\n          <div style={{marginTop: '4px'}}>\r\n          <InlineError message={errorMessagelastName} fieldID={'lasttname'} />\r\n        </div>\r\n     \r\n        <TextField\r\n          value={email}\r\n          onChange={(value) => this.handleEmailChange(value)}\r\n          label=\"Email\"\r\n          type=\"email\"\r\n          error={emailisInvalid}\r\n          id=\"email\"\r\n          helpText={\r\n            <span>\r\n              Enter your email Address.\r\n            </span>\r\n          }\r\n        />\r\n          <div style={{marginTop: '4px'}}>\r\n          <InlineError message={errorMessageEmail} fieldID={'email'} />\r\n        </div>\r\n             <TextField\r\n          value={password}\r\n          onChange={(value) => this.handlePasswordChange(value)}\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          error={isInvalidPassword}\r\n          id=\"password\"\r\n          helpText={\r\n            <span>\r\n              Enter your Password.\r\n            </span>\r\n          }\r\n        />\r\n         <div style={{marginTop: '4px'}}>\r\n          <InlineError message={errorMessagePassword} fieldID={'password'} />\r\n        </div>\r\n        <Select\r\n        label=\"Select Role\"\r\n        options={[\r\n          {label: 'Seller', value: 'seller'},\r\n          {label: 'DropShipper', value: 'dropshipper'},\r\n        ]}\r\n        id=\"role\"\r\n        selected={roleselected}\r\n        onChange={(value)=>this.handleRoleChange(value)}\r\n      />\r\n          <div style={{marginTop: '4px'}}>\r\n          <InlineError message={errorMessageRole} fieldID={'role'} />\r\n        </div>\r\n\r\n        <Button  submit>Signup</Button>\r\n        <Link url=\"/index\">Already Resgistered?</Link>\r\n           </FormLayout>\r\n    </Form>\r\n        </Page>\r\n\r\n    );\r\n\r\n    }\r\n    \r\n}"]},"metadata":{},"sourceType":"module"}