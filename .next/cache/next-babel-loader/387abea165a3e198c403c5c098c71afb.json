{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport App from 'next/app';\nimport Head from 'next/head';\nimport { AppProvider, Frame, FooterHelp, Link, TopBar } from '@shopify/polaris';\nimport { ArrowLeftMinor, ConversationMinor, HomeMajorMonotone, OrdersMajorTwotone } from '@shopify/polaris-icons';\nimport translations from '@shopify/polaris/locales/en.json';\nimport '@shopify/polaris/styles.css';\nimport { Provider } from '@shopify/app-bridge-react';\nimport Cookies from 'js-cookie';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\nconst client = new ApolloClient({\n  fetchOptions: {\n    credentials: 'include'\n  }\n});\n\nclass MyApp extends App {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      isUserMenuOpen: false,\n      toggleIsUserMenuOpen: false\n    });\n  }\n\n  handleNavigationToggle() {\n    this.setState({\n      toggleIsUserMenuOpen: !this.state.toggleIsUserMenuOpen\n    });\n  }\n\n  toggleIsUserMenuOpen() {\n    this.setState({\n      toggleIsUserMenuOpen: !this.state.isUserMenuOpen\n    });\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps,\n      isUserMenuOpen\n    } = this.props;\n\n    const userMenuMarkup = __jsx(TopBar.UserMenu, {\n      actions: [{\n        items: [{\n          content: 'Back to Shopify',\n          icon: ArrowLeftMinor\n        }]\n      }, {\n        items: [{\n          content: 'Community forums'\n        }]\n      }],\n      name: \"Dharma\",\n      detail: \"Jaded Pixel\",\n      initials: \"D\",\n      open: isUserMenuOpen,\n      onToggle: () => this.toggleIsUserMenuOpen()\n    });\n\n    const topBarMarkup = __jsx(TopBar, {\n      showNavigationToggle: true,\n      userMenu: userMenuMarkup,\n      onNavigationToggle: () => this.handleNavigationToggle()\n    });\n\n    const config = {\n      apiKey: API_KEY,\n      shopOrigin: Cookies.get(\"shopOrigin\"),\n      forceRedirect: true\n    };\n    return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"Sample App\"), __jsx(\"meta\", {\n      charSet: \"utf-8\"\n    })), __jsx(Provider, {\n      config: config\n    }, __jsx(AppProvider, {\n      i18n: translations\n    }, __jsx(Frame, {\n      topBar: topBarMarkup\n    }, __jsx(ApolloProvider, {\n      client: client\n    }, __jsx(Component, pageProps), __jsx(FooterHelp, null, \"Learn more about\", ' ', __jsx(Link, {\n      url: \"https://help.shopify.com/manual/orders/fulfill-orders\"\n    }, \"fulfilling orders\")))))));\n  }\n\n}\n\nexport default MyApp;","map":{"version":3,"sources":["C:/Users/kuldeep/Downloads/aladdin-dropshiper-local/pages/_app.js"],"names":["App","Head","AppProvider","Frame","FooterHelp","Link","TopBar","ArrowLeftMinor","ConversationMinor","HomeMajorMonotone","OrdersMajorTwotone","translations","Provider","Cookies","ApolloClient","ApolloProvider","client","fetchOptions","credentials","MyApp","isUserMenuOpen","toggleIsUserMenuOpen","handleNavigationToggle","setState","state","render","Component","pageProps","props","userMenuMarkup","items","content","icon","topBarMarkup","config","apiKey","API_KEY","shopOrigin","get","forceRedirect"],"mappings":"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","sourcesContent":["import App from 'next/app';\nimport Head from 'next/head';\nimport { AppProvider,Frame,FooterHelp,Link,TopBar} from '@shopify/polaris';\nimport {ArrowLeftMinor, ConversationMinor, HomeMajorMonotone, OrdersMajorTwotone} from '@shopify/polaris-icons';\nimport translations from '@shopify/polaris/locales/en.json';\nimport '@shopify/polaris/styles.css';\nimport { Provider } from '@shopify/app-bridge-react';\nimport Cookies from 'js-cookie';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\nconst client = new ApolloClient({\n  fetchOptions: {\n    credentials: 'include'\n  },\n});\nclass MyApp extends App {  \n  state={\n    isUserMenuOpen:false,\n    toggleIsUserMenuOpen:false\n  };\n  handleNavigationToggle(){\n    this.setState({toggleIsUserMenuOpen:!this.state.toggleIsUserMenuOpen})\n  }\n  toggleIsUserMenuOpen(){\n    \n    this.setState({toggleIsUserMenuOpen:!this.state.isUserMenuOpen})\n  }\n  render() {\n    const { Component, pageProps,isUserMenuOpen } = this.props;\n    const userMenuMarkup = (\n      <TopBar.UserMenu\n        actions={[\n          {\n            items: [{content: 'Back to Shopify', icon: ArrowLeftMinor}],\n          },\n          {\n            items: [{content: 'Community forums'}],\n          },\n        ]}\n        name=\"Dharma\"\n        detail=\"Jaded Pixel\"\n        initials=\"D\"\n        open={isUserMenuOpen}\n        onToggle={()=>this.toggleIsUserMenuOpen()}\n      />\n    );\n    const topBarMarkup = (\n      <TopBar\n        showNavigationToggle\n        userMenu={userMenuMarkup}\n        onNavigationToggle={()=>this.handleNavigationToggle()}\n      />\n    );\n    const config = { apiKey: API_KEY, shopOrigin: Cookies.get(\"shopOrigin\"), forceRedirect: true };\n    return (\n      <React.Fragment>\n        <Head>\n          <title>Sample App</title>\n          <meta charSet=\"utf-8\" />\n        </Head> \n        <Provider config={config}>     \n        <AppProvider  i18n={translations}>\n        <Frame topBar={topBarMarkup} >\n        <ApolloProvider client={client}>\n            <Component {...pageProps} />\n            <FooterHelp>\n  Learn more about{' '}\n  <Link url=\"https://help.shopify.com/manual/orders/fulfill-orders\">\n    fulfilling orders\n  </Link>\n</FooterHelp>\n          </ApolloProvider>\n         </Frame>\n          </AppProvider> \n          </Provider>       \n      </React.Fragment>\n    );\n  }\n}\nexport default MyApp;"]},"metadata":{},"sourceType":"module"}