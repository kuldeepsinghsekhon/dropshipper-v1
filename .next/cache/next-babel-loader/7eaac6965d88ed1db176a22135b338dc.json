{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query getProducts($ids: [ID!]!) {\\n    nodes(ids: $ids) {\\n      ... on Product {\\n        title\\n        handle\\n        descriptionHtml\\n        id\\n        images(first: 1) {\\n          edges {\\n            node {\\n              originalSrc\\n              altText\\n            }\\n          }\\n        }\\n        variants(first: 1) {\\n          edges {\\n            node {\\n              price\\n              id\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport { Card, ResourceList, Stack, TextStyle, Thumbnail } from '@shopify/polaris';\nimport store from 'store-js';\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport { Context } from '@shopify/app-bridge-react';\nvar GET_PRODUCTS_BY_ID = gql(_templateObject());\n\nvar ImportListWithProducts = /*#__PURE__*/function (_React$Component) {\n  _inherits(ImportListWithProducts, _React$Component);\n\n  var _super = _createSuper(ImportListWithProducts);\n\n  function ImportListWithProducts() {\n    var _this;\n\n    _classCallCheck(this, ImportListWithProducts);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      selectedItems: []\n    });\n\n    return _this;\n  }\n\n  _createClass(ImportListWithProducts, [{\n    key: \"render\",\n    value: function render() {\n      var app = this.context;\n      var shop = store.get('shopOrigin');\n\n      var redirectToProduct = function redirectToProduct(item) {\n        var redirect = Redirect.create(app);\n        redirect.dispatch(Redirect.Action.REMOTE, {\n          url: \"https://\" + shop + \"/products/\" + item.handle,\n          newContext: true\n        });\n      };\n\n      var twoWeeksFromNow = new Date(Date.now() + 12096e5).toDateString();\n      return __jsx(Query, {\n        query: GET_PRODUCTS_BY_ID,\n        variables: {\n          ids: store.get('imported_product_ids')\n        }\n      }, function (_ref) {\n        var data = _ref.data,\n            loading = _ref.loading,\n            error = _ref.error;\n\n        if (loading) {\n          return __jsx(\"div\", null, \"Loading\\u2026\");\n        }\n\n        if (error) {\n          return __jsx(\"div\", null, error.message);\n        }\n\n        return __jsx(Card, null, __jsx(ResourceList, {\n          showHeader: true,\n          resourceName: {\n            singular: 'Product',\n            plural: 'Products'\n          },\n          items: data.nodes,\n          renderItem: function renderItem(item) {\n            var media = __jsx(Thumbnail, {\n              source: item.images.edges[0] ? item.images.edges[0].node.originalSrc : '',\n              alt: item.images.edges[0] ? item.images.edges[0].node.altText : ''\n            });\n\n            var price = item.variants.edges[0].node.price;\n            return __jsx(ResourceList.Item, {\n              id: item.id,\n              media: media,\n              accessibilityLabel: \"View details for \".concat(item.title),\n              onClick: function onClick() {\n                store.set('item', item);\n                redirectToProduct(item);\n              }\n            }, __jsx(Stack, null, __jsx(Stack.Item, {\n              fill: true\n            }, __jsx(\"h3\", null, __jsx(TextStyle, {\n              variation: \"strong\"\n            }, item.title))), __jsx(Stack.Item, null, __jsx(\"p\", null, \"$\", price)), __jsx(Stack.Item, null, __jsx(\"p\", null, \"Expires on \", twoWeeksFromNow, \" \"))));\n          }\n        }));\n      });\n    }\n  }]);\n\n  return ImportListWithProducts;\n}(React.Component);\n\n_defineProperty(ImportListWithProducts, \"contextType\", Context);\n\nexport default ImportListWithProducts;","map":{"version":3,"sources":["C:/Users/kuldeep/Downloads/aladdin-dropshiper-local/components/MyImportList.js"],"names":["gql","Query","Card","ResourceList","Stack","TextStyle","Thumbnail","store","Redirect","Context","GET_PRODUCTS_BY_ID","ImportListWithProducts","selectedItems","app","context","shop","get","redirectToProduct","item","redirect","create","dispatch","Action","REMOTE","url","handle","newContext","twoWeeksFromNow","Date","now","toDateString","ids","data","loading","error","message","singular","plural","nodes","media","images","edges","node","originalSrc","altText","price","variants","id","title","set","React","Component"],"mappings":"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","sourcesContent":["import gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport {\n  Card,\n  ResourceList,\n  Stack,\n  TextStyle,\n  Thumbnail,\n} from '@shopify/polaris';\nimport store from 'store-js';\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport { Context } from '@shopify/app-bridge-react';\n\nconst GET_PRODUCTS_BY_ID = gql`\n  query getProducts($ids: [ID!]!) {\n    nodes(ids: $ids) {\n      ... on Product {\n        title\n        handle\n        descriptionHtml\n        id\n        images(first: 1) {\n          edges {\n            node {\n              originalSrc\n              altText\n            }\n          }\n        }\n        variants(first: 1) {\n          edges {\n            node {\n              price\n              id\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nclass ImportListWithProducts extends React.Component {\n  static contextType = Context;\n  state = {\n    selectedItems: [],\n  };\n  render() {\n    const app = this.context;\n    const shop= store.get('shopOrigin');\n    const redirectToProduct = (item) => {\n      const redirect = Redirect.create(app);\n      redirect.dispatch(\n        Redirect.Action.REMOTE,\n       {url: \"https://\"+shop+\"/products/\"+item.handle, newContext: true } \n      );\n    };\n\n    const twoWeeksFromNow = new Date(Date.now() + 12096e5).toDateString();\n    return (\n      <Query query={GET_PRODUCTS_BY_ID} variables={{ ids: store.get('imported_product_ids') }}>\n        {({ data, loading, error }) => {\n          if (loading) { return <div>Loading…</div>; }\n          if (error) { return <div>{error.message}</div>; }\n          \n          return (\n            <Card>\n              <ResourceList\n                showHeader\n                resourceName={{ singular: 'Product', plural: 'Products' }}\n                items={data.nodes}\n\n                \n                renderItem={(item) => {\n                  const media = (\n                    <Thumbnail\n                      source={\n                        item.images.edges[0]\n                          ? item.images.edges[0].node.originalSrc\n                          : ''\n                      }\n                      alt={\n                        item.images.edges[0]\n                          ? item.images.edges[0].node.altText\n                          : ''\n                      }\n                    />\n                  );\n                  const price = item.variants.edges[0].node.price;\n                  return (\n                    <ResourceList.Item\n                      id={item.id}\n                      media={media}\n                      accessibilityLabel={`View details for ${item.title}`}\n                      onClick={() => {\n                        store.set('item', item);\n                        redirectToProduct(item);\n                      }\n                      }\n                    >\n                      <Stack>\n                        <Stack.Item fill>\n                          <h3>\n                            <TextStyle variation=\"strong\">\n                              {item.title}\n                            </TextStyle>\n                          </h3>\n                        </Stack.Item>\n                        <Stack.Item>\n                          <p>${price}</p>\n                        </Stack.Item>\n                        <Stack.Item>\n                          <p>Expires on {twoWeeksFromNow} </p>\n                        </Stack.Item>\n                      </Stack>\n                    </ResourceList.Item>\n                  );\n                }}\n              />\n            </Card>\n          );\n        }}\n      </Query>\n    );\n  }\n}\n\nexport default ImportListWithProducts;\n"]},"metadata":{},"sourceType":"module"}