{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { Page, FormLayout, Form, Card, Button, Checkbox, ResourceList, TextStyle, TextField, Layout, Select, Thumbnail } from '@shopify/polaris';\nimport { CirclePlusMinor } from '@shopify/polaris-icons';\nimport { Elements } from '@stripe/react-stripe-js';\nimport { loadStripe } from '@stripe/stripe-js';\nimport CardForm from '../components/CardForm';\nconst stripePromise = loadStripe(\"pk_test_TYooMQauvdEDq54NiTphI7jx\");\nexport default class Singin extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      email: '',\n      newsletter: ''\n    });\n  }\n\n  handleSubmit(_event) {\n    console.log(_event);\n    this.setState({\n      email: '',\n      newsletter: false\n    });\n  }\n\n  handleNewsLetterChange(value) {\n    console.log(value);\n    this.setState({\n      newsletter: value\n    });\n  }\n\n  handleEmailChange(value) {\n    console.log(value);\n    this.setState({\n      email: value\n    });\n  }\n\n  render() {\n    const {\n      newsletter,\n      email\n    } = this.state;\n    return __jsx(Page, {\n      title: \"Register\",\n      separator: true\n    }, __jsx(Form, {\n      onSubmit: _event => this.handleSubmit(_event)\n    }, __jsx(FormLayout, null, __jsx(TextField, {\n      value: email,\n      onChange: value => this.handleEmailChange(value),\n      label: \"Email\",\n      type: \"email\",\n      helpText: __jsx(\"span\", null, \"We\\u2019ll use this email address to inform you on future changes to Polaris.\")\n    }), __jsx(Checkbox, {\n      label: \"Sign up for the Polaris newsletter\",\n      checked: newsletter,\n      onChange: value => this.handleNewsLetterChange(value)\n    }), __jsx(Button, {\n      submit: true\n    }, \"Submit\"))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/kuldeep/Downloads/aladdin-dropshiper-local/pages/index.js"],"names":["React","Page","FormLayout","Form","Card","Button","Checkbox","ResourceList","TextStyle","TextField","Layout","Select","Thumbnail","CirclePlusMinor","Elements","loadStripe","CardForm","stripePromise","Singin","Component","email","newsletter","handleSubmit","_event","console","log","setState","handleNewsLetterChange","value","handleEmailChange","render","state"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,EAAaC,UAAb,EAAwBC,IAAxB,EAA8BC,IAA9B,EAAmCC,MAAnC,EAA2CC,QAA3C,EAAqDC,YAArD,EAAmEC,SAAnE,EAA8EC,SAA9E,EAAyFC,MAAzF,EAAiGC,MAAjG,EAAyGC,SAAzG,QAAyH,kBAAzH;AACA,SAAQC,eAAR,QAA8B,wBAA9B;AACA,SAAQC,QAAR,QAAuB,yBAAvB;AACA,SAAQC,UAAR,QAAyB,mBAAzB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,MAAMC,aAAa,GAAGF,UAAU,CAAC,kCAAD,CAAhC;AAEA,eAAe,MAAMG,MAAN,SAAqBlB,KAAK,CAACmB,SAA3B,CAAqC;AAAA;AAAA;;AAAA,mCACxC;AACJC,MAAAA,KAAK,EAAC,EADF;AAEJC,MAAAA,UAAU,EAAC;AAFP,KADwC;AAAA;;AAM9CC,EAAAA,YAAY,CAACC,MAAD,EAAQ;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AAEA,SAAKG,QAAL,CAAc;AAACN,MAAAA,KAAK,EAAC,EAAP;AAAYC,MAAAA,UAAU,EAAC;AAAvB,KAAd;AAEH;;AAEDM,EAAAA,sBAAsB,CAACC,KAAD,EAAO;AAC3BJ,IAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACA,SAAKF,QAAL,CAAc;AAACL,MAAAA,UAAU,EAACO;AAAZ,KAAd;AACD;;AACDC,EAAAA,iBAAiB,CAACD,KAAD,EAAO;AACtBJ,IAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACA,SAAKF,QAAL,CAAc;AAACN,MAAAA,KAAK,EAACQ;AAAP,KAAd;AACH;;AAEDE,EAAAA,MAAM,GAAG;AACL,UAAK;AAACT,MAAAA,UAAD;AAAYD,MAAAA;AAAZ,QAAmB,KAAKW,KAA7B;AACJ,WACI,MAAC,IAAD;AAAM,MAAA,KAAK,EAAC,UAAZ;AAAuB,MAAA,SAAS;AAAhC,OACP,MAAC,IAAD;AAAM,MAAA,QAAQ,EAAGR,MAAD,IAAU,KAAKD,YAAL,CAAkBC,MAAlB;AAA1B,OACK,MAAC,UAAD,QAGE,MAAC,SAAD;AACE,MAAA,KAAK,EAAEH,KADT;AAEE,MAAA,QAAQ,EAAGQ,KAAD,IAAW,KAAKC,iBAAL,CAAuBD,KAAvB,CAFvB;AAGE,MAAA,KAAK,EAAC,OAHR;AAIE,MAAA,IAAI,EAAC,OAJP;AAKE,MAAA,QAAQ,EACN;AANJ,MAHF,EAeG,MAAC,QAAD;AACC,MAAA,KAAK,EAAC,oCADP;AAEC,MAAA,OAAO,EAAEP,UAFV;AAGC,MAAA,QAAQ,EAAGO,KAAD,IAAS,KAAKD,sBAAL,CAA4BC,KAA5B;AAHpB,MAfH,EAoBE,MAAC,MAAD;AAAQ,MAAA,MAAM;AAAd,gBApBF,CADL,CADO,CADJ;AA6BC;;AArD+C","sourcesContent":["import React from 'react';\nimport {Page,FormLayout,Form, Card,Button, Checkbox, ResourceList, TextStyle, TextField, Layout, Select, Thumbnail} from '@shopify/polaris';\nimport {CirclePlusMinor} from '@shopify/polaris-icons';\nimport {Elements} from '@stripe/react-stripe-js';\nimport {loadStripe} from '@stripe/stripe-js';\nimport CardForm from '../components/CardForm';\nconst stripePromise = loadStripe(\"pk_test_TYooMQauvdEDq54NiTphI7jx\");\n\nexport default class Singin extends React.Component {\n    state = {\n        email:'',\n        newsletter:''\n      };\n   \n      handleSubmit(_event){\n          console.log(_event)\n          \n          this.setState({email:'',  newsletter:false })\n        \n      }\n      \n      handleNewsLetterChange(value){\n        console.log(value)\n        this.setState({newsletter:value})\n      }\n      handleEmailChange(value){\n        console.log(value)\n        this.setState({email:value})\n    }\n       \n    render() {\n        const{newsletter,email}=this.state;\n    return (\n        <Page title=\"Register\" separator>     \n <Form onSubmit={(_event)=>this.handleSubmit(_event)}>\n      <FormLayout>\n       \n     \n        <TextField\n          value={email}\n          onChange={(value) => this.handleEmailChange(value)}\n          label=\"Email\"\n          type=\"email\"\n          helpText={\n            <span>\n              Weâ€™ll use this email address to inform you on future changes to\n              Polaris.\n            </span>\n          }\n        />\n         <Checkbox\n          label=\"Sign up for the Polaris newsletter\"\n          checked={newsletter}\n          onChange={(value)=>this.handleNewsLetterChange(value)}\n        />\n        <Button submit>Submit</Button>\n           </FormLayout>\n    </Form>\n        </Page>\n\n    );\n    }\n}"]},"metadata":{},"sourceType":"module"}