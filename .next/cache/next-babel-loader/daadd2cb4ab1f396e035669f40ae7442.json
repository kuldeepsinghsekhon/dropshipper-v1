{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { Page, Avatar, Filters, Card, Button, ResourceItem, ResourceList, TextStyle, TextField, Layout, Select, Thumbnail } from '@shopify/polaris';\nimport { CirclePlusMinor } from '@shopify/polaris-icons';\n\nconst axios = require('axios');\n\nconst store = require('store-js');\n\nconst stripHtml = require('string-strip-html');\n\nvar product = {\n  title: \"\"\n};\nimport Cookies from 'js-cookie';\nconst accessToken = Cookies.get(\"accessToken\");\nexport default class ResourceListWithProducts extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      selectedItems: [],\n      products: [],\n      queryValue: '',\n      sortValue: '',\n      typeselected: '',\n      userRole: store.get('userRole')\n    });\n  }\n\n  componentDidMount() {\n    const userRole = this.state.userRole;\n\n    if (userRole == 'dropshipper') {\n      let url = \"https://aladdin-dropshipper-server.herokuapp.com/products\";\n      axios.post(url).then(response => {\n        console.log(response.data); // store.set('user',response.data)\n\n        this.setState({\n          products: response.data\n        }); //redirect.dispatch(Redirect.Action.APP,'/')      \n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  }\n\n  renderItem(item) {\n    const body_html = stripHtml(item.body_html);\n    const {\n      id,\n      url,\n      title,\n      avatarSource\n    } = item;\n\n    const media = __jsx(Thumbnail, {\n      product: true,\n      size: \"large\",\n      name: name,\n      source: avatarSource\n    });\n\n    return __jsx(ResourceItem, {\n      id: id,\n      media: media,\n      accessibilityLabel: `View details for ${title}`\n    }, __jsx(\"h3\", null, __jsx(TextStyle, {\n      variation: \"strong\"\n    }, title)), __jsx(\"div\", null, __jsx(\"p\", null, body_html)), __jsx(Button, {\n      onClick: this.addproduct(id),\n      icon: CirclePlusMinor\n    }, \"Add a product\"));\n  }\n\n  onSelectionChange(items) {\n    const idsFromResources = items.map(item => item);\n    this.setState({\n      selectedItems: idsFromResources\n    });\n  }\n\n  onSortChange(selected) {\n    this.setState({\n      SortValue: selected\n    });\n    console.log(`Sort option changed to ${selected}.`);\n  }\n\n  handleQueryValueChange(value) {\n    this.setState({\n      queryValue: value\n    });\n    console.log('handleQueryValueChange' + value);\n    console.log(accessToken);\n  }\n\n  handleQueryValueRemove(value) {\n    this.setState({\n      queryValue: null\n    });\n    console.log('handleQueryValueRemove' + value);\n  }\n\n  addproduct(id) {\n    console.log(\"id\" + id);\n    let shop = \"techardik.myshopify.com\";\n    const url = \"https://techardik.myshopify.com/admin/api/2020-04/products.json\";\n    axios.get(url, {\n      headers: {\n        \"X-Shopify-Access-Token\": \"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\"\n      }\n    }, null).then(response => {\n      //const ids =response.data.map((product) => product.shopifyProductId);\n      console.log(response.data);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  render() {\n    const {\n      selectedItems,\n      queryValue,\n      sortValue,\n      typeselected,\n      products\n    } = this.state;\n    const options = [{\n      label: 'Today',\n      value: 'today'\n    }, {\n      label: 'Yesterday',\n      value: 'yesterday'\n    }, {\n      label: 'Last 7 days',\n      value: 'lastWeek'\n    }];\n    const filters = [{\n      key: 'taggedWith',\n      label: 'Tagged with',\n      filter: __jsx(Select, {\n        label: \"Date range\",\n        options: options,\n        onChange: () => handleSelectChange(),\n        value: typeselected\n      }),\n      shortcut: true\n    }];\n\n    const filterControl = __jsx(Filters, {\n      queryValue: queryValue,\n      filters: filters,\n      onQueryChange: value => this.handleQueryValueChange(value),\n      onQueryClear: value => this.handleQueryValueRemove(value)\n    }, __jsx(\"div\", {\n      style: {\n        paddingLeft: '8px'\n      }\n    }, __jsx(Button, {\n      onClick: () => console.log('New filter saved')\n    }, \"Save\")));\n\n    return __jsx(Page, null, __jsx(Card, null, __jsx(ResourceList, {\n      resourceName: {\n        singular: 'product',\n        plural: 'products'\n      },\n      items: products,\n      renderItem: item => this.renderItem(item),\n      selectedItems: selectedItems,\n      onSelectionChange: items => this.onSelectionChange(items),\n      promotedBulkActions: [{\n        content: 'Import Products',\n        onAction: () => console.log('Todo: implement bulk edit')\n      }],\n      sortOptions: [{\n        label: 'Newest update',\n        value: 'DATE_MODIFIED_DESC'\n      }, {\n        label: 'Oldest update',\n        value: 'DATE_MODIFIED_ASC'\n      }],\n      onSortChange: selected => this.onSortChange(selected),\n      filterControl: filterControl\n    })));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/kuldeep/Downloads/aladdin-dropshiper-local/pages/search.js"],"names":["React","Page","Avatar","Filters","Card","Button","ResourceItem","ResourceList","TextStyle","TextField","Layout","Select","Thumbnail","CirclePlusMinor","axios","require","store","stripHtml","product","title","Cookies","accessToken","get","ResourceListWithProducts","Component","selectedItems","products","queryValue","sortValue","typeselected","userRole","componentDidMount","state","url","post","then","response","console","log","data","setState","catch","error","renderItem","item","body_html","id","avatarSource","media","name","addproduct","onSelectionChange","items","idsFromResources","map","onSortChange","selected","SortValue","handleQueryValueChange","value","handleQueryValueRemove","shop","headers","render","options","label","filters","key","filter","handleSelectChange","shortcut","filterControl","paddingLeft","singular","plural","content","onAction"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Page,Avatar,Filters, Card,Button, ResourceItem, ResourceList, TextStyle, TextField, Layout, Select, Thumbnail} from '@shopify/polaris';\nimport {CirclePlusMinor} from '@shopify/polaris-icons';\nconst axios =require('axios');\nconst store= require('store-js')\nconst stripHtml =require('string-strip-html');\nvar product={title:\"\"};\nimport Cookies from 'js-cookie';\nconst accessToken=Cookies.get(\"accessToken\");\nexport default class ResourceListWithProducts extends React.Component {\n  state = {\n    selectedItems: [],\n    products:[],\n    queryValue:'',\n    sortValue:'',\n    typeselected:'',\n    userRole:store.get('userRole')\n  };\n  componentDidMount() {\n    const userRole=this.state.userRole;\n    if(userRole=='dropshipper'){\n    let url=\"https://aladdin-dropshipper-server.herokuapp.com/products\";\n \n    axios.post(url).then( (response)=>{ \n      console.log(response.data )\n     // store.set('user',response.data)\n      this.setState({products:response.data});\n        //redirect.dispatch(Redirect.Action.APP,'/')      \n    } ).catch(function (error) {\n      console.log(error);\n    })\n  }\n }\n  renderItem(item) {\n    const body_html=stripHtml( item.body_html);\n    const {id, url, title,avatarSource} = item;\n    const media = <Thumbnail product size=\"large\" name={name} source={avatarSource} />;\n    \n    return (\n      \n      <ResourceItem\n      \n        id={id}\n       \n        media={media}\n        accessibilityLabel={`View details for ${title}`}\n      >\n        <h3>\n          <TextStyle variation=\"strong\">{title}</TextStyle>\n        </h3>\n        <div><p>{body_html}</p></div>\n        <Button  onClick={this.addproduct(id)}\n icon={CirclePlusMinor}>Add a product</Button>\n      </ResourceItem>\n      \n    );\n  }\n  onSelectionChange(items){\n    const idsFromResources = items.map((item) => item);       \n    this.setState({ selectedItems: idsFromResources });\n  }\n  onSortChange(selected){\n      this.setState({ SortValue: selected });\n      console.log(`Sort option changed to ${selected}.`);  \n\n  }\n  handleQueryValueChange(value){\n    this.setState({queryValue:value})\n    console.log('handleQueryValueChange'+value)\n    console.log(accessToken);\n  }\n  handleQueryValueRemove(value){\n    this.setState({queryValue:null})\n    console.log('handleQueryValueRemove'+value)\n  }\n  addproduct(id){\n   console.log(\"id\"+id)   \n    let shop=\"techardik.myshopify.com\"\nconst url=\"https://techardik.myshopify.com/admin/api/2020-04/products.json\";\naxios.get(url,{headers:{\n  \"X-Shopify-Access-Token\": \"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\"\n}\n  \n},null).then( (response)=>{ \n //const ids =response.data.map((product) => product.shopifyProductId);\n console.log(response.data)        \n} ).catch(function (error) {\n  console.log(error);\n})\n  }\n  render() {\n    const {\n      selectedItems,\n      queryValue,\n      sortValue,\n      typeselected,\n      products\n    }=this.state;\n    const options = [\n      {label: 'Today', value: 'today'},\n      {label: 'Yesterday', value: 'yesterday'},\n      {label: 'Last 7 days', value: 'lastWeek'},\n    ];\n    const filters = [\n      {\n        key: 'taggedWith',\n        label: 'Tagged with',\n        filter: (\n          <Select\n          label=\"Date range\"\n          options={options}\n          onChange={()=>handleSelectChange()}\n          value={typeselected}\n        />\n        ),\n        shortcut: true,\n      }\n    ];\n   \n    const filterControl = (\n      <Filters\n        queryValue={queryValue}\n        filters={filters}   \n        onQueryChange={(value)=>this.handleQueryValueChange(value)}\n        onQueryClear={(value)=>this.handleQueryValueRemove(value)}\n      >\n        <div style={{paddingLeft: '8px'}}>\n          <Button onClick={() => console.log('New filter saved')}>Save</Button>\n        </div>\n      </Filters>\n    );\n  return (\n    <Page>\n    <Card>\n    \n      <ResourceList\n        resourceName={{\n          singular: 'product',\n          plural: 'products',\n        }}\n        items={products}\n        renderItem={(item)=>this.renderItem(item)}\n        selectedItems={selectedItems}\n        onSelectionChange={(items)=>this.onSelectionChange(items)}\n        promotedBulkActions={ [\n          {\n            content: 'Import Products',\n            onAction: () => console.log('Todo: implement bulk edit'),\n          },\n        ]}\n       \n        sortOptions={[\n          {label: 'Newest update', value: 'DATE_MODIFIED_DESC'},\n          {label: 'Oldest update', value: 'DATE_MODIFIED_ASC'},\n        ]}\n        onSortChange={(selected) =>this.onSortChange(selected)}\n        filterControl={filterControl}\n        \n      />\n  \n    </Card>\n    </Page>\n  );\n\n \n}\n\n}\n"]},"metadata":{},"sourceType":"module"}