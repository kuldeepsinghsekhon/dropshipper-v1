{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { Page, FormLayout, Form, Link, Button, InlineError, Select, TextStyle, TextField, Layout, Thumbnail } from '@shopify/polaris';\nimport { CirclePlusMinor } from '@shopify/polaris-icons';\nimport { loadStripe } from '@stripe/stripe-js';\nimport CardForm from '../components/CardForm';\n\nvar Singup = /*#__PURE__*/function (_React$Component) {\n  _inherits(Singup, _React$Component);\n\n  var _super = _createSuper(Singup);\n\n  function Singup() {\n    var _this;\n\n    _classCallCheck(this, Singup);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      firstName: '',\n      lastName: '',\n      email: '',\n      password: '',\n      roleselected: '',\n      emailisInvalid: false,\n      firstNameisInvalid: false,\n      lastNameisInvalid: false,\n      isInvalidPassword: false,\n      role: 'dropshipper',\n      errorMessage: '',\n      errorMessagefirstName: '',\n      errorMessagelastName: '',\n      errorMessageEmail: '',\n      errorMessagePassword: '',\n      errorMessageRole: ''\n    });\n\n    return _this;\n  }\n\n  _createClass(Singup, [{\n    key: \"handleSubmit\",\n    value: function handleSubmit(_event) {\n      var _this$state = this.state,\n          email = _this$state.email,\n          password = _this$state.password,\n          roleselected = _this$state.roleselected;\n      var user = {\n        email: email,\n        password: password,\n        roleselected: roleselected\n      };\n      console.log(product);\n      fetch(\"https://aladdin-dropshipper-server.herokuapp.com/signup\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(user)\n      }).then(function (res) {\n        return res.json();\n      }).then(function (json) {\n        console.log(json);\n      });\n      console.log(_event);\n      this.setState({\n        email: '',\n        password: ''\n      });\n    }\n  }, {\n    key: \"handleChoiceChange\",\n    value: function handleChoiceChange(value) {\n      console.log(value);\n      this.setState({\n        dropshipper: value\n      });\n    }\n  }, {\n    key: \"handlePasswordChange\",\n    value: function handlePasswordChange(value) {\n      console.log(value);\n      this.setState({\n        password: value\n      });\n    }\n  }, {\n    key: \"handleEmailChange\",\n    value: function handleEmailChange(value) {\n      if (value.length < 3) {\n        this.setState({\n          emailisInvalid: true\n        });\n      }\n\n      if (value.length > 3) {\n        this.setState({\n          emailisInvalid: false\n        });\n      }\n\n      var errorMessage = this.state.emailisInvalid ? 'Enter 3 or more characters for product type is equal to' : '';\n      console.log(value);\n      this.setState({\n        email: value,\n        errorMessageEmail: errorMessage\n      });\n    }\n  }, {\n    key: \"handlefirstNameChange\",\n    value: function handlefirstNameChange(value) {\n      if (value.length < 3) {\n        this.setState({\n          firstNameisInvalid: true\n        });\n      }\n\n      if (value.length > 3) {\n        this.setState({\n          firstNameisInvalid: false\n        });\n      }\n\n      var errorMessagefirstName = this.state.firstNameisInvalid ? 'Enter 3 or more characters for product type is equal to' : '';\n      console.log(value);\n      this.setState({\n        firstName: value,\n        errorMessagefirstName: errorMessagefirstName\n      });\n    }\n  }, {\n    key: \"handlelastNameChange\",\n    value: function handlelastNameChange(value) {\n      if (value.length < 3) {\n        this.setState({\n          lastNameisInvalid: true\n        });\n      }\n\n      if (value.length > 3) {\n        this.setState({\n          lastNameisInvalid: false\n        });\n      }\n\n      var errorMessage = this.state.lastNameisInvalid ? 'Enter 3 or more characters for product type is equal to' : '';\n      console.log(value);\n      this.setState({\n        lastName: value,\n        errorMessagefirstName: errorMessage\n      });\n    }\n  }, {\n    key: \"handleRoleChange\",\n    value: function handleRoleChange(value) {\n      console.log(value);\n      this.setState({\n        roleselected: value\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state2 = this.state,\n          firstName = _this$state2.firstName,\n          lastName = _this$state2.lastName,\n          email = _this$state2.email,\n          password = _this$state2.password,\n          roleselected = _this$state2.roleselected,\n          errorMessagefirstName = _this$state2.errorMessagefirstName,\n          errorMessagelastName = _this$state2.errorMessagelastName,\n          errorMessage = _this$state2.errorMessage,\n          errorMessageEmail = _this$state2.errorMessageEmail,\n          errorMessagePassword = _this$state2.errorMessagePassword,\n          errorMessageRole = _this$state2.errorMessageRole,\n          isInvalid = _this$state2.isInvalid,\n          firstNameisInvalid = _this$state2.firstNameisInvalid,\n          lastNameisInvalid = _this$state2.lastNameisInvalid,\n          isInvalidPassword = _this$state2.isInvalidPassword,\n          emailisInvalid = _this$state2.emailisInvalid;\n      return __jsx(Page, {\n        title: \"Signup\",\n        separator: true\n      }, __jsx(Form, {\n        onSubmit: function onSubmit(_event) {\n          return _this2.handleSubmit(_event);\n        }\n      }, __jsx(FormLayout, null, __jsx(TextField, {\n        value: firstName,\n        onChange: function onChange(value) {\n          return _this2.handlefirstNameChange(value);\n        },\n        label: \"FirstName\",\n        type: \"text\",\n        error: firstNameisInvalid,\n        id: \"firstname\",\n        helpText: __jsx(\"span\", null, \"Enter your Full Name.\")\n      }), __jsx(\"div\", {\n        style: {\n          marginTop: '4px'\n        }\n      }, __jsx(InlineError, {\n        message: errorMessagelastName,\n        fieldID: 'firstname'\n      })), __jsx(TextField, {\n        value: lastName,\n        onChange: function onChange(value) {\n          return _this2.handlefirstNameChange(value);\n        },\n        label: \"FirstName\",\n        type: \"text\",\n        error: lastNameisInvalid,\n        id: \"lasttname\",\n        helpText: __jsx(\"span\", null, \"Enter your Full Name.\")\n      }), __jsx(\"div\", {\n        style: {\n          marginTop: '4px'\n        }\n      }, __jsx(InlineError, {\n        message: errorMessagefirstName,\n        fieldID: 'lasttname'\n      })), __jsx(TextField, {\n        value: email,\n        onChange: function onChange(value) {\n          return _this2.handleEmailChange(value);\n        },\n        label: \"Email\",\n        type: \"email\",\n        error: emailisInvalid,\n        id: \"email\",\n        helpText: __jsx(\"span\", null, \"Enter your email Address.\")\n      }), __jsx(\"div\", {\n        style: {\n          marginTop: '4px'\n        }\n      }, __jsx(InlineError, {\n        message: errorMessageEmail,\n        fieldID: 'email'\n      })), __jsx(TextField, {\n        value: password,\n        onChange: function onChange(value) {\n          return _this2.handlePasswordChange(value);\n        },\n        label: \"Password\",\n        type: \"password\",\n        error: isInvalidPassword,\n        id: \"password\",\n        helpText: __jsx(\"span\", null, \"Enter your email Password.\")\n      }), __jsx(\"div\", {\n        style: {\n          marginTop: '4px'\n        }\n      }, __jsx(InlineError, {\n        message: errorMessagePassword,\n        fieldID: 'password'\n      })), __jsx(Select, {\n        label: \"Select Role\",\n        options: [{\n          label: 'Seller',\n          value: 'seller'\n        }, {\n          label: 'DropShipper',\n          value: 'dropShipper'\n        }],\n        id: \"role\",\n        selected: [roleselected],\n        onChange: function onChange(value) {\n          return _this2.handleRoleChange(value);\n        }\n      }), __jsx(\"div\", {\n        style: {\n          marginTop: '4px'\n        }\n      }, __jsx(InlineError, {\n        message: errorMessageRole,\n        fieldID: 'role'\n      })), __jsx(Button, {\n        submit: true\n      }, \"Sign In\"), __jsx(Link, {\n        url: \"/index\"\n      }, \"Already Resgistered?\"))));\n    }\n  }]);\n\n  return Singup;\n}(React.Component);\n\nexport { Singup as default };","map":{"version":3,"sources":["C:/Users/kuldeep/Downloads/aladdin-dropshiper-local/pages/signup.js"],"names":["React","Page","FormLayout","Form","Link","Button","InlineError","Select","TextStyle","TextField","Layout","Thumbnail","CirclePlusMinor","loadStripe","CardForm","Singup","firstName","lastName","email","password","roleselected","emailisInvalid","firstNameisInvalid","lastNameisInvalid","isInvalidPassword","role","errorMessage","errorMessagefirstName","errorMessagelastName","errorMessageEmail","errorMessagePassword","errorMessageRole","_event","state","user","console","log","product","fetch","method","headers","body","JSON","stringify","then","res","json","setState","value","dropshipper","length","isInvalid","handleSubmit","handlefirstNameChange","marginTop","handleEmailChange","handlePasswordChange","label","handleRoleChange","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {Page,FormLayout,Form, Link,Button, InlineError ,Select, TextStyle, TextField, Layout,Thumbnail} from '@shopify/polaris';\r\nimport {CirclePlusMinor} from '@shopify/polaris-icons';\r\nimport {loadStripe} from '@stripe/stripe-js';\r\nimport CardForm from '../components/CardForm';\r\n\r\nexport default class Singup extends React.Component {\r\n    state = {\r\n      firstName:'',\r\n      lastName:'',\r\n        email:'',\r\n        password:'',\r\n        roleselected:'',\r\n        emailisInvalid:false,\r\n        firstNameisInvalid:false,\r\n        lastNameisInvalid:false,\r\n        isInvalidPassword:false,\r\n        role:'dropshipper',\r\n        errorMessage :'',\r\n        errorMessagefirstName:'',\r\n        errorMessagelastName:'',\r\n        errorMessageEmail:'',\r\n        errorMessagePassword:'',\r\n        errorMessageRole:''\r\n      };\r\n   \r\n      handleSubmit(_event){\r\n        const{email,password,roleselected}=this.state;\r\n        var user={email:email,password:password,roleselected:roleselected};\r\n     console.log(product)\r\n     fetch(\"https://aladdin-dropshipper-server.herokuapp.com/signup\", {\r\n       method: \"POST\",\r\n       headers: {\r\n         \"Content-Type\": \"application/json\",\r\n       },\r\n       body: JSON.stringify(user)\r\n     }).then(res=>res.json()).then((json) =>{ console.log(json)})\r\n          console.log(_event)  \r\n          this.setState({email:'',  password:'' })\r\n      }\r\n      \r\n      handleChoiceChange(value){\r\n        console.log(value)\r\n        this.setState({dropshipper:value})\r\n      }\r\n      handlePasswordChange(value){\r\n        console.log(value)\r\n        this.setState({password:value})\r\n      }\r\n      handleEmailChange(value){\r\n        if(value.length < 3){\r\n          this.setState({emailisInvalid:true})\r\n        }\r\n        if(value.length > 3){\r\n          this.setState({emailisInvalid:false})\r\n        }\r\n       let errorMessage = this.state.emailisInvalid\r\n    ? 'Enter 3 or more characters for product type is equal to'\r\n    : '';\r\n \r\n        console.log(value)\r\n        this.setState({email:value,errorMessageEmail:errorMessage})\r\n    }\r\n    handlefirstNameChange(value){\r\n      if(value.length < 3){\r\n        this.setState({firstNameisInvalid:true})\r\n      }\r\n      if(value.length > 3){\r\n        this.setState({firstNameisInvalid:false})\r\n      }\r\n     let errorMessagefirstName = this.state.firstNameisInvalid\r\n  ? 'Enter 3 or more characters for product type is equal to'\r\n  : '';\r\n\r\n      console.log(value)\r\n      this.setState({firstName:value,errorMessagefirstName:errorMessagefirstName})\r\n  }\r\n  handlelastNameChange(value){\r\n    if(value.length < 3){\r\n      this.setState({lastNameisInvalid:true})\r\n    }\r\n    if(value.length > 3){\r\n      this.setState({lastNameisInvalid:false})\r\n    }\r\n   let errorMessage = this.state.lastNameisInvalid\r\n? 'Enter 3 or more characters for product type is equal to'\r\n: '';\r\n\r\n    console.log(value)\r\n    this.setState({lastName:value,errorMessagefirstName:errorMessage})\r\n}\r\n    handleRoleChange(value){\r\n      console.log(value)\r\n      this.setState({roleselected:value})\r\n    }\r\n       \r\n    render() {\r\n        const{firstName,lastName,email,password,roleselected,errorMessagefirstName,errorMessagelastName,errorMessage,errorMessageEmail,errorMessagePassword,errorMessageRole,isInvalid,firstNameisInvalid,lastNameisInvalid,isInvalidPassword,emailisInvalid}=this.state;\r\n       \r\n    return (\r\n        <Page title=\"Signup\" separator>     \r\n <Form onSubmit={(_event)=>this.handleSubmit(_event)}>\r\n      <FormLayout>\r\n      <TextField\r\n          value={firstName}\r\n          onChange={(value) => this.handlefirstNameChange(value)}\r\n          label=\"FirstName\"\r\n          type=\"text\"\r\n          error={firstNameisInvalid}\r\n          id=\"firstname\"\r\n          helpText={\r\n            <span>\r\n              Enter your Full Name.\r\n            </span>\r\n          }\r\n        />\r\n         <div style={{marginTop: '4px'}}>\r\n          <InlineError message={errorMessagelastName} fieldID={'firstname'} />\r\n        </div>\r\n        <TextField\r\n          value={lastName}\r\n          onChange={(value) => this.handlefirstNameChange(value)}\r\n          label=\"FirstName\"\r\n          type=\"text\"\r\n          error={lastNameisInvalid}\r\n          id=\"lasttname\"\r\n          helpText={\r\n            <span>\r\n              Enter your Full Name.\r\n            </span>\r\n          }\r\n        />\r\n          <div style={{marginTop: '4px'}}>\r\n          <InlineError message={errorMessagefirstName} fieldID={'lasttname'} />\r\n        </div>\r\n     \r\n        <TextField\r\n          value={email}\r\n          onChange={(value) => this.handleEmailChange(value)}\r\n          label=\"Email\"\r\n          type=\"email\"\r\n          error={emailisInvalid}\r\n          id=\"email\"\r\n          helpText={\r\n            <span>\r\n              Enter your email Address.\r\n            </span>\r\n          }\r\n        />\r\n          <div style={{marginTop: '4px'}}>\r\n          <InlineError message={errorMessageEmail} fieldID={'email'} />\r\n        </div>\r\n             <TextField\r\n          value={password}\r\n          onChange={(value) => this.handlePasswordChange(value)}\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          error={isInvalidPassword}\r\n          id=\"password\"\r\n          helpText={\r\n            <span>\r\n              Enter your email Password.\r\n            </span>\r\n          }\r\n        />\r\n         <div style={{marginTop: '4px'}}>\r\n          <InlineError message={errorMessagePassword} fieldID={'password'} />\r\n        </div>\r\n        <Select\r\n        label=\"Select Role\"\r\n        options={[\r\n          {label: 'Seller', value: 'seller'},\r\n          {label: 'DropShipper', value: 'dropShipper'},\r\n        ]}\r\n        id=\"role\"\r\n        selected={[roleselected]}\r\n        onChange={(value)=>this.handleRoleChange(value)}\r\n      />\r\n          <div style={{marginTop: '4px'}}>\r\n          <InlineError message={errorMessageRole} fieldID={'role'} />\r\n        </div>\r\n\r\n        <Button submit>Sign In</Button>\r\n        <Link url=\"/index\">Already Resgistered?</Link>\r\n           </FormLayout>\r\n    </Form>\r\n        </Page>\r\n\r\n    );\r\n\r\n    }\r\n    \r\n}"]},"metadata":{},"sourceType":"module"}