{"ast":null,"code":"var _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\n\nrequire('isomorphic-fetch');\n\nvar dotenv = require('dotenv');\n\ndotenv.config();\n\nvar Koa = require('koa');\n\nvar next = require('next');\n\nvar _require = require('@shopify/koa-shopify-auth'),\n    createShopifyAuth = _require[\"default\"];\n\nvar _require2 = require('@shopify/koa-shopify-auth'),\n    verifyRequest = _require2.verifyRequest;\n\nvar session = require('koa-session');\n\nvar _require3 = require('@shopify/koa-shopify-graphql-proxy'),\n    graphQLProxy = _require3[\"default\"];\n\nvar _require4 = require('@shopify/koa-shopify-graphql-proxy'),\n    ApiVersion = _require4.ApiVersion;\n\nvar Router = require('koa-router');\n\nvar _require5 = require('@shopify/koa-shopify-webhooks'),\n    receiveWebhook = _require5.receiveWebhook,\n    registerWebhook = _require5.registerWebhook; //const getSubscriptionUrl = require('./server/getSubscriptionUrl');\n\n\nvar port = parseInt(process.env.PORT, 10) || 5000;\nvar dev = true;\nvar app = next({\n  dev: dev\n});\nvar handle = app.getRequestHandler();\nvar _process$env = process.env,\n    SHOPIFY_API_SECRET_KEY = _process$env.SHOPIFY_API_SECRET_KEY,\n    SHOPIFY_API_KEY = _process$env.SHOPIFY_API_KEY,\n    HOST = _process$env.HOST;\napp.prepare().then(function () {\n  var server = new Koa();\n  var router = new Router();\n  server.use(session({\n    sameSite: 'none',\n    secure: true\n  }, server));\n  server.keys = [SHOPIFY_API_SECRET_KEY];\n  server.use(createShopifyAuth({\n    apiKey: SHOPIFY_API_KEY,\n    secret: SHOPIFY_API_SECRET_KEY,\n    scopes: ['read_products', 'write_products'],\n    afterAuth: function afterAuth(ctx) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var _ctx$session, shop, accessToken, registration;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _ctx$session = ctx.session, shop = _ctx$session.shop, accessToken = _ctx$session.accessToken;\n                ctx.cookies.set(\"shopOrigin\", shop, {\n                  httpOnly: false,\n                  secure: true,\n                  sameSite: 'none'\n                });\n                _context.next = 4;\n                return registerWebhook({\n                  address: \"\".concat(HOST, \"/webhooks/products/create\"),\n                  topic: 'PRODUCTS_CREATE',\n                  accessToken: accessToken,\n                  shop: shop,\n                  apiVersion: ApiVersion.October19\n                });\n\n              case 4:\n                registration = _context.sent;\n\n                if (registration.success) {\n                  console.log('Successfully registered webhook!');\n                } else {\n                  console.log('Failed to register webhook', registration.result);\n                } //await getSubscriptionUrl(ctx, accessToken, shop);\n\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    }\n  }));\n  var webhook = receiveWebhook({\n    secret: SHOPIFY_API_SECRET_KEY\n  });\n  router.post('/webhooks/products/create', webhook, function (ctx) {\n    console.log('received webhook: ', ctx.state.webhook);\n  });\n  server.use(graphQLProxy({\n    version: ApiVersion.April19\n  }));\n  router.get('*', verifyRequest(), /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(ctx) {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return handle(ctx.req, ctx.res);\n\n            case 2:\n              ctx.respond = false;\n              ctx.res.statusCode = 200;\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }());\n  server.use(router.allowedMethods());\n  server.use(router.routes());\n  server.listen(port, function () {\n    console.log(\"> Ready on http://localhost:\".concat(port));\n  });\n});","map":{"version":3,"sources":["C:/Users/kuldeep/Downloads/aladdin-dropshiper-local/pages/index.js"],"names":["require","dotenv","config","Koa","next","createShopifyAuth","verifyRequest","session","graphQLProxy","ApiVersion","Router","receiveWebhook","registerWebhook","port","parseInt","process","env","PORT","dev","app","handle","getRequestHandler","SHOPIFY_API_SECRET_KEY","SHOPIFY_API_KEY","HOST","prepare","then","server","router","use","sameSite","secure","keys","apiKey","secret","scopes","afterAuth","ctx","shop","accessToken","cookies","set","httpOnly","address","topic","apiVersion","October19","registration","success","console","log","result","webhook","post","state","version","April19","get","req","res","respond","statusCode","allowedMethods","routes","listen"],"mappings":"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","sourcesContent":["require('isomorphic-fetch');\nconst dotenv = require('dotenv');\ndotenv.config();\nconst Koa = require('koa');\nconst next = require('next');\nconst { default: createShopifyAuth } = require('@shopify/koa-shopify-auth');\nconst { verifyRequest } = require('@shopify/koa-shopify-auth');\nconst session = require('koa-session');\nconst { default: graphQLProxy } = require('@shopify/koa-shopify-graphql-proxy');\nconst { ApiVersion } = require('@shopify/koa-shopify-graphql-proxy');\nconst Router = require('koa-router');\nconst { receiveWebhook, registerWebhook } = require('@shopify/koa-shopify-webhooks');\n//const getSubscriptionUrl = require('./server/getSubscriptionUrl');\n\nconst port = parseInt(process.env.PORT, 10) || 5000;\nconst dev = process.env.NODE_ENV !== 'production';\nconst app = next({ dev });\nconst handle = app.getRequestHandler();\n\nconst {\n  SHOPIFY_API_SECRET_KEY,\n  SHOPIFY_API_KEY,\n  HOST,\n} = process.env;\n\napp.prepare().then(() => {\n  const server = new Koa();\n  const router = new Router();\n  server.use(session({ sameSite: 'none', secure: true }, server));\n  server.keys = [SHOPIFY_API_SECRET_KEY];\n\n  server.use(\n    createShopifyAuth({\n      apiKey: SHOPIFY_API_KEY,\n      secret: SHOPIFY_API_SECRET_KEY,\n      scopes: ['read_products', 'write_products'],\n      async afterAuth(ctx) {\n        const { shop, accessToken } = ctx.session;\n        ctx.cookies.set(\"shopOrigin\", shop, {\n          httpOnly: false,\n          secure: true,\n          sameSite: 'none'\n        });\n        const registration = await registerWebhook({\n          address: `${HOST}/webhooks/products/create`,\n          topic: 'PRODUCTS_CREATE',\n          accessToken,\n          shop,\n          apiVersion: ApiVersion.October19\n        });\n\n        if (registration.success) {\n          console.log('Successfully registered webhook!');\n        } else {\n          console.log('Failed to register webhook', registration.result);\n        }\n        //await getSubscriptionUrl(ctx, accessToken, shop);\n      }\n    })\n  );\n\n  const webhook = receiveWebhook({ secret: SHOPIFY_API_SECRET_KEY });\n\n  router.post('/webhooks/products/create', webhook, (ctx) => {\n    console.log('received webhook: ', ctx.state.webhook);\n  });\n\n  server.use(graphQLProxy({ version: ApiVersion.April19 }));\n\n  router.get('*', verifyRequest(), async (ctx) => {\n    await handle(ctx.req, ctx.res);\n    ctx.respond = false;\n    ctx.res.statusCode = 200;\n  });\n\n  server.use(router.allowedMethods());\n  server.use(router.routes());\n\n  server.listen(port, () => {\n    console.log(`> Ready on http://localhost:${port}`);\n  });\n});\n"]},"metadata":{},"sourceType":"script"}