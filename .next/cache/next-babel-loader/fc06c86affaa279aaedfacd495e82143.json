{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { Page, FormLayout, Form, Link, Button, InlineError, Select, Toast, TextField, Caption, DropZone, Stack, Thumbnail } from '@shopify/polaris';\nimport { CirclePlusMinor } from '@shopify/polaris-icons';\nimport { Redirect, Loading } from '@shopify/app-bridge/actions';\nimport { Context } from '@shopify/app-bridge-react';\nimport store from 'store-js';\n\nconst axios = require('axios');\n\nexport default class Singup extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      firstName: '',\n      lastName: '',\n      email: '',\n      password: '',\n      roleselected: '',\n      emailisInvalid: false,\n      firstNameisInvalid: false,\n      lastNameisInvalid: false,\n      isInvalidPassword: false,\n      role: 'dropshipper',\n      errorMessage: '',\n      errorMessagefirstName: '',\n      errorMessagelastName: '',\n      errorMessageEmail: '',\n      errorMessagePassword: '',\n      errorMessageRole: '',\n      successMessageactive: false,\n      file: undefined\n    });\n  }\n\n  toggleSuccessActive() {\n    this.setState({\n      successMessageactive: !this.state.successMessageactive\n    });\n  }\n\n  handleDropZoneDrop(_dropFiles, acceptedFiles, _rejectedFiles) {\n    this.setState({\n      file: acceptedFiles[0]\n    });\n  }\n\n  handleSubmit() {\n    const app = this.context;\n    const redirect = Redirect.create(app);\n    const loading = Loading.create(app);\n    loading.dispatch(Loading.Action.START);\n    const options = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    let url = \"https://aladdin-dropshipper-server.herokuapp.com/signup\";\n    const {\n      firstName,\n      lastName,\n      email,\n      password,\n      roleselected\n    } = this.state;\n    const user = {\n      \"firstName\": firstName,\n      \"lastName\": lastName,\n      \"email\": email,\n      \"password\": password,\n      \"role\": roleselected,\n      \"password2\": password\n    }; //console.log(user)\n\n    const formData = new FormData();\n\n    if (roleselected == 'seller') {\n      formData.append(\"myFile\", this.state.selectedFile // this.state.selectedFile.name \n      );\n    }\n\n    axios.post(url, user).then(response => {\n      console.log(response.data);\n      store.set('user', response.data);\n      this.setState({\n        firstName: '',\n        lastName: '',\n        email: '',\n        password: ''\n      });\n      redirect.dispatch(Redirect.Action.APP, '/'); // this.toggleSuccessActive();   \n    }).catch(function (error) {//console.log(error);\n    });\n  }\n\n  handlePasswordChange(value) {\n    if (value.length < 3) {\n      this.setState({\n        passwordisInvalid: true\n      });\n    }\n\n    if (value.length > 3) {\n      this.setState({\n        passwordisInvalid: false\n      });\n    }\n\n    let errorMessage = this.state.passwordisInvalid ? 'Enter 3 or more characters' : '';\n    console.log(value);\n    this.setState({\n      password: value,\n      errorMessagePassword: errorMessage\n    });\n  }\n\n  handleEmailChange(value) {\n    if (value.length < 3) {\n      this.setState({\n        emailisInvalid: true\n      });\n    }\n\n    if (value.length > 3) {\n      this.setState({\n        emailisInvalid: false\n      });\n    }\n\n    let errorMessage = this.state.emailisInvalid ? 'Enter 3 or more characters ' : '';\n    console.log(value);\n    this.setState({\n      email: value,\n      errorMessageEmail: errorMessage\n    });\n  }\n\n  handlefirstNameChange(value) {\n    if (value.length < 3) {\n      this.setState({\n        firstNameisInvalid: true\n      });\n    }\n\n    if (value.length > 3) {\n      this.setState({\n        firstNameisInvalid: false\n      });\n    }\n\n    let errorMessage = this.state.firstNameisInvalid ? 'Enter 3 or more characters ' : '';\n    console.log(value);\n    this.setState({\n      firstName: value,\n      errorMessagefirstName: errorMessage\n    });\n  }\n\n  handlelastNameChange(value) {\n    if (value.length < 3) {\n      this.setState({\n        lastNameisInvalid: true\n      });\n    }\n\n    if (value.length > 3) {\n      this.setState({\n        lastNameisInvalid: false\n      });\n    }\n\n    let errorMessage = this.state.lastNameisInvalid ? 'Enter 3 or more characters ' : '';\n    console.log(value);\n    this.setState({\n      lastName: value,\n      errorMessagefirstName: errorMessage\n    });\n  }\n\n  handleRoleChange(value) {\n    this.setState({\n      roleselected: value\n    });\n    console.log(this.state.roleselected);\n  }\n\n  render() {\n    const {\n      firstName,\n      lastName,\n      email,\n      password,\n      roleselected,\n      errorMessagefirstName,\n      errorMessagelastName,\n      errorMessageEmail,\n      errorMessagePassword,\n      errorMessageRole,\n      firstNameisInvalid,\n      lastNameisInvalid,\n      isInvalidPassword,\n      emailisInvalid,\n      successMessageactive\n    } = this.state;\n    const toastMarkup = successMessageactive ? __jsx(Toast, {\n      content: \"Registered Successfully\",\n      onDismiss: () => this.toggleSuccessActive()\n    }) : null;\n    const validImageTypes = ['image/gif', 'image/jpeg', 'image/png'];\n    const {\n      file\n    } = this.state;\n\n    const fileUpload = !file && __jsx(DropZone.FileUpload, null);\n\n    const uploadedFile = file && __jsx(Stack, null, __jsx(Thumbnail, {\n      size: \"small\",\n      alt: file.name,\n      source: validImageTypes.indexOf(file.type) > 0 ? window.URL.createObjectURL(file) : 'https://cdn.shopify.com/s/files/1/0757/9955/files/New_Post.png?12678548500147524304'\n    }), __jsx(\"div\", null, file.name, \" \", __jsx(Caption, null, file.size, \" bytes\"), \"  \", __jsx(\"p\", null, file.path)));\n\n    return __jsx(Page, {\n      title: \"Signup\",\n      separator: true\n    }, toastMarkup, __jsx(Form, {\n      onSubmit: () => this.handleSubmit()\n    }, __jsx(FormLayout, null, __jsx(TextField, {\n      value: firstName,\n      onChange: value => this.handlefirstNameChange(value),\n      label: \"FirstName\",\n      type: \"text\",\n      error: firstNameisInvalid,\n      id: \"firstname\",\n      helpText: __jsx(\"span\", null, \"Enter your First Name.\")\n    }), __jsx(\"div\", {\n      style: {\n        marginTop: '4px'\n      }\n    }, __jsx(InlineError, {\n      message: errorMessagefirstName,\n      fieldID: 'firstname'\n    })), __jsx(TextField, {\n      value: lastName,\n      onChange: value => this.handlelastNameChange(value),\n      label: \"FirstName\",\n      type: \"text\",\n      error: lastNameisInvalid,\n      id: \"lasttname\",\n      helpText: __jsx(\"span\", null, \"Enter your Last Name.\")\n    }), __jsx(\"div\", {\n      style: {\n        marginTop: '4px'\n      }\n    }, __jsx(InlineError, {\n      message: errorMessagelastName,\n      fieldID: 'lasttname'\n    })), __jsx(TextField, {\n      value: email,\n      onChange: value => this.handleEmailChange(value),\n      label: \"Email\",\n      type: \"email\",\n      error: emailisInvalid,\n      id: \"email\",\n      helpText: __jsx(\"span\", null, \"Enter your email Address.\")\n    }), __jsx(\"div\", {\n      style: {\n        marginTop: '4px'\n      }\n    }, __jsx(InlineError, {\n      message: errorMessageEmail,\n      fieldID: 'email'\n    })), __jsx(TextField, {\n      value: password,\n      onChange: value => this.handlePasswordChange(value),\n      label: \"Password\",\n      type: \"password\",\n      error: isInvalidPassword,\n      id: \"password\",\n      helpText: __jsx(\"span\", null, \"Enter your Password.\")\n    }), __jsx(\"div\", {\n      style: {\n        marginTop: '4px'\n      }\n    }, __jsx(InlineError, {\n      message: errorMessagePassword,\n      fieldID: 'password'\n    })), __jsx(Select, {\n      label: \"Select Role\",\n      options: [{\n        label: 'Select Role',\n        value: ''\n      }, {\n        label: 'Seller',\n        value: 'seller'\n      }, {\n        label: 'DropShipper',\n        value: 'dropshipper'\n      }],\n      id: \"role\",\n      selected: roleselected,\n      onChange: value => this.handleRoleChange(value)\n    }), __jsx(\"div\", {\n      style: {\n        marginTop: '4px'\n      }\n    }, __jsx(InlineError, {\n      message: errorMessageRole,\n      fieldID: 'role'\n    })), roleselected == 'seller' ? __jsx(DropZone, {\n      onDrop: (_dropFiles, acceptedFiles, _rejectedFiles) => this.handleDropZoneDrop(_dropFiles, acceptedFiles, _rejectedFiles)\n    }, uploadedFile, fileUpload) : '', __jsx(Button, {\n      submit: true\n    }, \"Signup\"), __jsx(Link, {\n      url: \"/index\"\n    }, \"Already Resgistered?\"))));\n  }\n\n}\n\n_defineProperty(Singup, \"contextType\", Context);","map":{"version":3,"sources":["C:/Users/kuldeep/Downloads/aladdin-dropshiper-local/pages/signup.js"],"names":["React","Page","FormLayout","Form","Link","Button","InlineError","Select","Toast","TextField","Caption","DropZone","Stack","Thumbnail","CirclePlusMinor","Redirect","Loading","Context","store","axios","require","Singup","Component","firstName","lastName","email","password","roleselected","emailisInvalid","firstNameisInvalid","lastNameisInvalid","isInvalidPassword","role","errorMessage","errorMessagefirstName","errorMessagelastName","errorMessageEmail","errorMessagePassword","errorMessageRole","successMessageactive","file","undefined","toggleSuccessActive","setState","state","handleDropZoneDrop","_dropFiles","acceptedFiles","_rejectedFiles","handleSubmit","app","context","redirect","create","loading","dispatch","Action","START","options","headers","url","user","formData","FormData","append","selectedFile","post","then","response","console","log","data","set","APP","catch","error","handlePasswordChange","value","length","passwordisInvalid","handleEmailChange","handlefirstNameChange","handlelastNameChange","handleRoleChange","render","toastMarkup","validImageTypes","fileUpload","uploadedFile","name","indexOf","type","window","URL","createObjectURL","size","path","marginTop","label"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {Page,FormLayout,Form, Link,Button, InlineError ,Select, Toast, TextField,Caption, DropZone, Stack, Thumbnail} from '@shopify/polaris';\r\nimport {CirclePlusMinor} from '@shopify/polaris-icons';\r\nimport { Redirect,Loading } from '@shopify/app-bridge/actions';\r\nimport { Context } from '@shopify/app-bridge-react';\r\nimport store from 'store-js';\r\nconst axios =require('axios');\r\n\r\nexport default class Singup extends React.Component {\r\n  static contextType = Context;\r\n    state = {\r\n      firstName:'',\r\n      lastName:'',\r\n        email:'',\r\n        password:'',\r\n        roleselected:'',\r\n        emailisInvalid:false,\r\n        firstNameisInvalid:false,\r\n        lastNameisInvalid:false,\r\n        isInvalidPassword:false,\r\n        role:'dropshipper',\r\n        errorMessage :'',\r\n        errorMessagefirstName:'',\r\n        errorMessagelastName:'',\r\n        errorMessageEmail:'',\r\n        errorMessagePassword:'',\r\n        errorMessageRole:'',\r\n        successMessageactive:false,\r\n        file:undefined\r\n      };\r\n   toggleSuccessActive(){\r\n      this.setState({successMessageactive:!this.state.successMessageactive})\r\n   }\r\n   handleDropZoneDrop(_dropFiles, acceptedFiles, _rejectedFiles) {\r\n    this.setState({file:acceptedFiles[0]})\r\n    \r\n}\r\n      handleSubmit(){\r\n        const app = this.context;\r\n        const redirect = Redirect.create(app);\r\n        const loading = Loading.create(app);\r\n        loading.dispatch(Loading.Action.START);\r\n        const options = {\r\n          headers: {\r\n              'Content-Type': 'application/json',\r\n          }\r\n        };\r\n        let url=\"https://aladdin-dropshipper-server.herokuapp.com/signup\";\r\n        const{firstName,lastName,email,password,roleselected}=this.state;\r\n        const user={\"firstName\":firstName,\"lastName\":lastName,\"email\":email,\"password\":password,\"role\":roleselected,\"password2\":password};\r\n        //console.log(user)\r\n        const formData = new FormData();\r\n        if(roleselected=='seller'){\r\n          formData.append( \r\n            \"myFile\", \r\n            this.state.selectedFile, \r\n           // this.state.selectedFile.name \r\n          ); \r\n        }\r\n       \r\n        axios.post(url,user).then( ( response ) => {\r\n          console.log(response.data )\r\n          store.set('user',response.data)\r\n            this.setState({firstName:'',lastName:'',email:'',  password:'', })\r\n            redirect.dispatch( Redirect.Action.APP,'/'); \r\n           // this.toggleSuccessActive();   \r\n              \r\n        } ).catch(function (error) {\r\n          //console.log(error);\r\n        })\r\n      }\r\n      \r\n      handlePasswordChange(value){\r\n        if(value.length < 3){\r\n          this.setState({passwordisInvalid:true})\r\n        }\r\n        if(value.length > 3){\r\n          this.setState({passwordisInvalid:false})\r\n        }\r\n       let errorMessage = this.state.passwordisInvalid\r\n    ? 'Enter 3 or more characters'\r\n    : '';\r\n \r\n        console.log(value)\r\n        this.setState({password:value,errorMessagePassword:errorMessage})\r\n      }\r\n      handleEmailChange(value){\r\n        if(value.length < 3){\r\n          this.setState({emailisInvalid:true})\r\n        }\r\n        if(value.length > 3){\r\n          this.setState({emailisInvalid:false})\r\n        }\r\n       let errorMessage = this.state.emailisInvalid\r\n    ? 'Enter 3 or more characters '\r\n    : '';\r\n \r\n        console.log(value)\r\n        this.setState({email:value,errorMessageEmail:errorMessage})\r\n    }\r\n    handlefirstNameChange(value){\r\n      if(value.length < 3){\r\n        this.setState({firstNameisInvalid:true})\r\n      }\r\n      if(value.length > 3){\r\n        this.setState({firstNameisInvalid:false})\r\n      }\r\n     let errorMessage = this.state.firstNameisInvalid\r\n  ? 'Enter 3 or more characters '\r\n  : '';\r\n\r\n      console.log(value)\r\n      this.setState({firstName:value,errorMessagefirstName:errorMessage})\r\n  }\r\n  handlelastNameChange(value){\r\n    if(value.length < 3){\r\n      this.setState({lastNameisInvalid:true})\r\n    }\r\n    if(value.length > 3){\r\n      this.setState({lastNameisInvalid:false})\r\n    }\r\n   let errorMessage = this.state.lastNameisInvalid\r\n? 'Enter 3 or more characters '\r\n: '';\r\n\r\n    console.log(value)\r\n    this.setState({lastName:value,errorMessagefirstName:errorMessage})\r\n}\r\n    handleRoleChange(value){\r\n      this.setState({roleselected:value})\r\n      console.log(this.state.roleselected)\r\n    }\r\n       \r\n    render() {\r\n        const{firstName,lastName,email,password,roleselected,errorMessagefirstName,errorMessagelastName,errorMessageEmail,errorMessagePassword,errorMessageRole,firstNameisInvalid,lastNameisInvalid,isInvalidPassword,emailisInvalid,successMessageactive }=this.state;\r\n        const toastMarkup = successMessageactive ? (\r\n          <Toast content=\"Registered Successfully\" onDismiss={()=>this.toggleSuccessActive()} />\r\n        ) : null;\r\n        const validImageTypes = ['image/gif', 'image/jpeg', 'image/png'];\r\n        const{file}=this.state;\r\n        const fileUpload = !file && <DropZone.FileUpload />;\r\n        const uploadedFile = file && (\r\n          <Stack>\r\n            <Thumbnail\r\n              size=\"small\"\r\n              alt={file.name}\r\n              source={\r\n                validImageTypes.indexOf(file.type) > 0\r\n                  ? window.URL.createObjectURL(file)\r\n                  : 'https://cdn.shopify.com/s/files/1/0757/9955/files/New_Post.png?12678548500147524304'\r\n              }\r\n            />\r\n            <div>\r\n              {file.name} <Caption>{file.size} bytes</Caption>  <p>{file.path}</p>\r\n            </div>\r\n          </Stack> );\r\n    return (\r\n        <Page title=\"Signup\" separator>  \r\n        {toastMarkup}   \r\n <Form onSubmit={()=>this.handleSubmit()}>\r\n      <FormLayout>\r\n      <TextField\r\n          value={firstName}\r\n          onChange={(value) => this.handlefirstNameChange(value)}\r\n          label=\"FirstName\"\r\n          type=\"text\"\r\n          error={firstNameisInvalid}\r\n          id=\"firstname\"\r\n          helpText={\r\n            <span>\r\n              Enter your First Name.\r\n            </span>\r\n          }\r\n        />\r\n         <div style={{marginTop: '4px'}}>\r\n          <InlineError message={errorMessagefirstName} fieldID={'firstname'} />\r\n        </div>\r\n        <TextField\r\n          value={lastName}\r\n          onChange={(value) => this.handlelastNameChange(value)}\r\n          label=\"FirstName\"\r\n          type=\"text\"\r\n          error={lastNameisInvalid}\r\n          id=\"lasttname\"\r\n          helpText={\r\n            <span>\r\n              Enter your Last Name.\r\n            </span>\r\n          }\r\n        />\r\n          <div style={{marginTop: '4px'}}>\r\n          <InlineError message={errorMessagelastName} fieldID={'lasttname'} />\r\n        </div>\r\n     \r\n        <TextField\r\n          value={email}\r\n          onChange={(value) => this.handleEmailChange(value)}\r\n          label=\"Email\"\r\n          type=\"email\"\r\n          error={emailisInvalid}\r\n          id=\"email\"\r\n          helpText={\r\n            <span>\r\n              Enter your email Address.\r\n            </span>\r\n          }\r\n        />\r\n          <div style={{marginTop: '4px'}}>\r\n          <InlineError message={errorMessageEmail} fieldID={'email'} />\r\n        </div>\r\n             <TextField\r\n          value={password}\r\n          onChange={(value) => this.handlePasswordChange(value)}\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          error={isInvalidPassword}\r\n          id=\"password\"\r\n          helpText={\r\n            <span>\r\n              Enter your Password.\r\n            </span>\r\n          }\r\n        />\r\n         <div style={{marginTop: '4px'}}>\r\n          <InlineError message={errorMessagePassword} fieldID={'password'} />\r\n        </div>\r\n        <Select\r\n        label=\"Select Role\"\r\n        options={[\r\n            {label: 'Select Role', value: ''},\r\n          {label: 'Seller', value: 'seller'},\r\n          {label: 'DropShipper', value: 'dropshipper'},\r\n        ]}\r\n        id=\"role\"\r\n        selected={roleselected}\r\n        onChange={(value)=>this.handleRoleChange(value)}\r\n      />\r\n          <div style={{marginTop: '4px'}}>\r\n          <InlineError message={errorMessageRole} fieldID={'role'} />\r\n        </div>\r\n        {roleselected=='seller'?(\r\n        <DropZone onDrop={(_dropFiles, acceptedFiles, _rejectedFiles)=>this.handleDropZoneDrop(_dropFiles, acceptedFiles, _rejectedFiles)}>\r\n    {uploadedFile}\r\n      {fileUpload}\r\n  </DropZone>):('')}\r\n\r\n        <Button  submit>Signup</Button>\r\n        <Link url=\"/index\">Already Resgistered?</Link>\r\n           </FormLayout>\r\n    </Form>\r\n        </Page>\r\n\r\n    );\r\n\r\n    }\r\n    \r\n}"]},"metadata":{},"sourceType":"module"}