{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { Page, FormLayout, Form, Link, Button, InlineError, Select, Card, TextField, Layout, Thumbnail } from '@shopify/polaris';\nimport { CirclePlusMinor } from '@shopify/polaris-icons';\nimport { Elements } from '@stripe/react-stripe-js';\nimport { loadStripe } from '@stripe/stripe-js';\nimport CardForm from '../components/CardForm';\nimport store from 'store-js';\nvar stripePromise = loadStripe(\"pk_test_TYooMQauvdEDq54NiTphI7jx\");\n\nvar Singin = /*#__PURE__*/function (_React$Component) {\n  _inherits(Singin, _React$Component);\n\n  var _super = _createSuper(Singin);\n\n  function Singin() {\n    var _this;\n\n    _classCallCheck(this, Singin);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      email: '',\n      password: '',\n      roleselected: '',\n      isInvalid: false,\n      isInvalidPassword: false,\n      role: 'dropshipper',\n      errorMessage: '',\n      errorMessagePassword: '',\n      errorMessageRole: ''\n    });\n\n    return _this;\n  }\n\n  _createClass(Singin, [{\n    key: \"handleSubmit\",\n    value: function handleSubmit(_event) {\n      var _this2 = this;\n\n      var url = 'https://aladdin-dropshipper-server.herokuapp.com'; // console.log(_event)  \n\n      data = {\n        \"email\": this.state.email,\n        \"password\": this.state.password\n      };\n      fetch(url, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      }).then(function (res) {\n        return res.json();\n      }).then(function (json) {\n        console.log(json);\n        store.set('token', json.token);\n        store.set('userRole', _this2.state.roleselected);\n\n        _this2.setState({\n          email: '',\n          password: ''\n        });\n      });\n    }\n  }, {\n    key: \"handleChoiceChange\",\n    value: function handleChoiceChange(value) {\n      console.log(value);\n      this.setState({\n        dropshipper: value\n      });\n    }\n  }, {\n    key: \"handlePasswordChange\",\n    value: function handlePasswordChange(value) {\n      console.log(value);\n      this.setState({\n        password: value\n      });\n    }\n  }, {\n    key: \"handleEmailChange\",\n    value: function handleEmailChange(value) {\n      if (value.length < 3) {\n        this.setState({\n          isInvalid: true\n        });\n      }\n\n      if (value.length > 3) {\n        this.setState({\n          isInvalid: false\n        });\n      }\n\n      var errorMessage = this.state.isInvalid ? 'Enter 3 or more characters for product type is equal to' : '';\n      console.log(value);\n      this.setState({\n        email: value,\n        errorMessage: errorMessage\n      });\n    }\n  }, {\n    key: \"handleRoleChange\",\n    value: function handleRoleChange(value) {\n      console.log(value);\n      this.setState({\n        roleselected: value\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          email = _this$state.email,\n          password = _this$state.password,\n          roleselected = _this$state.roleselected,\n          errorMessage = _this$state.errorMessage,\n          errorMessagePassword = _this$state.errorMessagePassword,\n          errorMessageRole = _this$state.errorMessageRole,\n          isInvalid = _this$state.isInvalid,\n          isInvalidPassword = _this$state.isInvalidPassword;\n      return __jsx(Page, {\n        title: \"SignIn\",\n        separator: true\n      }, __jsx(Layout, null, __jsx(Layout.Section, {\n        title: \"\",\n        description: \"\"\n      }, __jsx(Card, {\n        sectioned: true\n      }, __jsx(Form, {\n        onSubmit: function onSubmit(_event) {\n          return _this3.handleSubmit(_event);\n        }\n      }, __jsx(FormLayout, null, __jsx(TextField, {\n        value: email,\n        onChange: function onChange(value) {\n          return _this3.handleEmailChange(value);\n        },\n        label: \"Email\",\n        type: \"email\",\n        error: isInvalid,\n        id: \"email\",\n        helpText: __jsx(\"span\", null, \"Enter your email Address.\")\n      }), __jsx(\"div\", {\n        style: {\n          marginTop: '4px'\n        }\n      }, __jsx(InlineError, {\n        message: errorMessage,\n        fieldID: email\n      })), __jsx(TextField, {\n        value: password,\n        onChange: function onChange(value) {\n          return _this3.handlePasswordChange(value);\n        },\n        label: \"Password\",\n        type: \"password\",\n        error: isInvalidPassword,\n        id: \"password\",\n        helpText: __jsx(\"span\", null, \"Enter your email Password.\")\n      }), __jsx(\"div\", {\n        style: {\n          marginTop: '4px'\n        }\n      }, __jsx(InlineError, {\n        message: errorMessagePassword,\n        fieldID: 'password'\n      })), __jsx(Select, {\n        label: \"Select Role\",\n        options: [{\n          label: 'Seller',\n          value: 'seller'\n        }, {\n          label: 'DropShipper',\n          value: 'dropshipper'\n        }],\n        id: \"role\",\n        selected: [roleselected],\n        onChange: function onChange(value) {\n          return _this3.handleRoleChange(value);\n        }\n      }), __jsx(\"div\", {\n        style: {\n          marginTop: '4px'\n        }\n      }, __jsx(InlineError, {\n        message: errorMessageRole,\n        fieldID: 'role'\n      })), __jsx(Button, {\n        submit: true\n      }, \"Sign In\"), __jsx(Link, {\n        url: \"/signup\"\n      }, \"Not Resgistered?\")))))));\n    }\n  }]);\n\n  return Singin;\n}(React.Component);\n\nexport { Singin as default };","map":{"version":3,"sources":["C:/Users/kuldeep/Downloads/aladdin-dropshiper-local/pages/index.js"],"names":["React","Page","FormLayout","Form","Link","Button","InlineError","Select","Card","TextField","Layout","Thumbnail","CirclePlusMinor","Elements","loadStripe","CardForm","store","stripePromise","Singin","email","password","roleselected","isInvalid","isInvalidPassword","role","errorMessage","errorMessagePassword","errorMessageRole","_event","url","data","state","fetch","method","headers","body","JSON","stringify","then","res","json","console","log","set","token","setState","value","dropshipper","length","handleSubmit","handleEmailChange","marginTop","handlePasswordChange","label","handleRoleChange","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Page,FormLayout,Form, Link,Button, InlineError ,Select, Card, TextField, Layout,Thumbnail} from '@shopify/polaris';\nimport {CirclePlusMinor} from '@shopify/polaris-icons';\nimport {Elements} from '@stripe/react-stripe-js';\nimport {loadStripe} from '@stripe/stripe-js';\nimport CardForm from '../components/CardForm';\nimport store from 'store-js';\nconst stripePromise = loadStripe(\"pk_test_TYooMQauvdEDq54NiTphI7jx\");\n\nexport default class Singin extends React.Component {\n    state = {\n        email:'',\n        password:'',\n        roleselected:'',\n        isInvalid:false,\n        isInvalidPassword:false,\n        role:'dropshipper',\n        errorMessage :'',\n        errorMessagePassword:'',\n        errorMessageRole:''\n      };\n   \n      handleSubmit(_event){\n        const url = 'https://aladdin-dropshipper-server.herokuapp.com'\n         // console.log(_event)  \n        \n          data={\"email\":this.state.email,\"password\":this.state.password}\n          fetch(url, {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(data)\n          }).then(res => res.json())\n          .then((json) =>{ console.log(json)\n          store.set('token', json.token);\n          store.set('userRole', this.state.roleselected);\n          this.setState({email:'',  password:'' })\n           } );\n           \n          \n      }\n      \n      handleChoiceChange(value){\n        console.log(value)\n        this.setState({dropshipper:value})\n      }\n      handlePasswordChange(value){\n        console.log(value)\n        this.setState({password:value})\n      }\n      handleEmailChange(value){\n        if(value.length < 3){\n          this.setState({isInvalid:true})\n        }\n        if(value.length > 3){\n          this.setState({isInvalid:false})\n        }\n       let errorMessage = this.state.isInvalid\n    ? 'Enter 3 or more characters for product type is equal to'\n    : '';\n \n        console.log(value)\n        this.setState({email:value,errorMessage:errorMessage})\n    }\n    handleRoleChange(value){\n      console.log(value)\n      this.setState({roleselected:value})\n    }\n       \n    render() {\n        const{email,password,roleselected,errorMessage,errorMessagePassword,errorMessageRole,isInvalid,isInvalidPassword}=this.state;\n       \n    return (\n        <Page title=\"SignIn\" separator>  \n          <Layout>\n       \n        <Layout.Section\n          title=\"\"\n          description=\"\"\n        >\n        <Card sectioned>  \n <Form onSubmit={(_event)=>this.handleSubmit(_event)}>\n      <FormLayout>\n       \n     \n        <TextField\n          value={email}\n          onChange={(value) => this.handleEmailChange(value)}\n          label=\"Email\"\n          type=\"email\"\n          error={isInvalid}\n          id=\"email\"\n          helpText={\n            <span>\n              Enter your email Address.\n            </span>\n          }\n        />\n          <div style={{marginTop: '4px'}}>\n          <InlineError message={errorMessage} fieldID={email} />\n        </div>\n             <TextField\n          value={password}\n          onChange={(value) => this.handlePasswordChange(value)}\n          label=\"Password\"\n          type=\"password\"\n          error={isInvalidPassword}\n          id=\"password\"\n          helpText={\n            <span>\n              Enter your email Password.\n            </span>\n          }\n        />\n         <div style={{marginTop: '4px'}}>\n          <InlineError message={errorMessagePassword} fieldID={'password'} />\n        </div>\n        <Select\n        label=\"Select Role\"\n        options={[\n          {label: 'Seller', value: 'seller'},\n          {label: 'DropShipper', value: 'dropshipper'},\n        ]}\n        id=\"role\"\n        selected={[roleselected]}\n        onChange={(value)=>this.handleRoleChange(value)}\n      />\n          <div style={{marginTop: '4px'}}>\n          <InlineError message={errorMessageRole} fieldID={'role'} />\n        </div>\n\n        <Button submit>Sign In</Button>\n        <Link url=\"/signup\">Not Resgistered?</Link>\n           </FormLayout>\n    </Form>\n    </Card> \n    </Layout.Section>\n    </Layout>\n        </Page>\n\n    );\n\n    }\n    \n}"]},"metadata":{},"sourceType":"module"}