{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport App from 'next/app';\nimport Head from 'next/head';\nimport { AppProvider, Frame, FooterHelp, Link, TopBar, Navigation } from '@shopify/polaris';\nimport { ArrowLeftMinor, CustomersMinor, SettingsMajorMonotone, DraftOrdersMajorMonotone, OnlineStoreMajorMonotone, ProductsMajorTwotone, SearchMajorMonotone, ConversationMinor, HomeMajorMonotone, OrdersMajorTwotone } from '@shopify/polaris-icons';\nimport translations from '@shopify/polaris/locales/en.json';\nimport '@shopify/polaris/styles.css';\nimport { Provider } from '@shopify/app-bridge-react';\nimport Cookies from 'js-cookie';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\nimport store from 'store-js';\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport { Context } from '@shopify/app-bridge-react';\nconst client = new ApolloClient({\n  fetchOptions: {\n    credentials: 'include'\n  }\n});\n\nclass MyApp extends App {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      isUserMenuOpen: false,\n      toggleIsUserMenuOpen: false,\n      mobileNavigationActive: false,\n      userRole: store.get('userRole'),\n      firstName: store.get('firstName') ? store.get('firstName') : 'Guest',\n      lastName: store.get('lastName') ? store.get('lastName') : ''\n    });\n  }\n\n  handleNavigationToggle() {\n    this.setState({\n      mobileNavigationActive: !this.state.mobileNavigationActive\n    });\n    console.log('toggle navigation visibility ' + this.state.mobileNavigationActive);\n  }\n\n  toggleIsUserMenuOpen() {\n    this.setState({\n      isUserMenuOpen: !this.state.isUserMenuOpen\n    });\n    console.log(this.state.isUserMenuOpen);\n  }\n\n  render() {\n    const app = this.context;\n    const redirect = Redirect.create(app);\n    const {\n      Component,\n      pageProps\n    } = this.props;\n    const {\n      isUserMenuOpen,\n      mobileNavigationActive,\n      firstName,\n      lastName\n    } = this.state;\n\n    const userMenuMarkup = __jsx(TopBar.UserMenu, {\n      actions: [{\n        items: [{\n          content: 'Back to Shopify',\n          icon: ArrowLeftMinor\n        }]\n      }, {\n        items: [{\n          content: 'Signin',\n          url: '/signin'\n        }]\n      }],\n      name: firstName,\n      detail: firstName + ' ' + lastName,\n      initials: firstName.charAt(0).toUpperCase(),\n      open: isUserMenuOpen,\n      onToggle: () => this.toggleIsUserMenuOpen()\n    });\n\n    let menuitems = [];\n\n    if (this.state.userRole == 'dropshipper') {\n      menuitems = [{\n        label: 'DropShipper Dashboard',\n        icon: HomeMajorMonotone,\n        onClick: () => {}\n      }, {\n        label: 'Search Products',\n        icon: SearchMajorMonotone,\n        url: '/search'\n      }, {\n        label: 'My Products',\n        icon: ProductsMajorTwotone,\n        url: '/my-products',\n        badge: '15'\n      }, {\n        label: 'Manage Orders',\n        icon: DraftOrdersMajorMonotone,\n        url: '/manage-orders'\n      }, {\n        label: 'Shopify Admin',\n        icon: OnlineStoreMajorMonotone,\n        url: '/admin'\n      }, {\n        label: 'Settings',\n        icon: SettingsMajorMonotone,\n        url: '/manage-orders'\n      }];\n    } else if (this.state.userRole == 'seller') {\n      menuitems = [{\n        label: 'Seller Dashboard',\n        icon: HomeMajorMonotone,\n        url: '/'\n      }, {\n        label: 'Selling Products',\n        icon: OrdersMajorTwotone,\n        url: '/selling_products'\n      },, {\n        label: 'Settings',\n        icon: SettingsMajorMonotone,\n        url: '/manage-orders'\n      }];\n    } else {\n      menuitems = [{\n        label: 'SignIn',\n        icon: CustomersMinor,\n        onClick: () => {}\n      }, {\n        label: 'Pricing',\n        icon: SettingsMajorMonotone,\n        url: '/plans'\n      }];\n    }\n\n    const navigationMarkup = __jsx(Navigation, {\n      location: \"/\"\n    }, __jsx(Navigation.Section, {\n      items: [{\n        label: 'Back to Shopify',\n        icon: ArrowLeftMinor\n      }]\n    }), __jsx(Navigation.Section, {\n      separator: true,\n      title: \"Dropshipper App\",\n      items: menuitems,\n      action: {\n        icon: ConversationMinor,\n        accessibilityLabel: 'Contact support',\n        onClick: () => {\n          store.set('userRole', '');\n          redirect.dispatch(Redirect.Action.APP, '/');\n        }\n      }\n    }));\n\n    const topBarMarkup = __jsx(TopBar, {\n      showNavigationToggle: true,\n      userMenu: userMenuMarkup,\n      onNavigationToggle: () => this.handleNavigationToggle()\n    });\n\n    const config = {\n      apiKey: API_KEY,\n      shopOrigin: Cookies.get(\"shopOrigin\"),\n      forceRedirect: true\n    };\n    return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"Sample App\"), __jsx(\"meta\", {\n      charSet: \"utf-8\"\n    })), __jsx(Provider, {\n      config: config\n    }, __jsx(AppProvider, {\n      i18n: translations\n    }, __jsx(Frame, {\n      topBar: topBarMarkup,\n      navigation: navigationMarkup,\n      showMobileNavigation: mobileNavigationActive,\n      onNavigationDismiss: () => this.handleNavigationToggle()\n    }, __jsx(ApolloProvider, {\n      client: client\n    }, __jsx(Component, pageProps), __jsx(FooterHelp, null, \"Learn more about\", ' ', __jsx(Link, {\n      url: \"https://help.shopify.com/manual/orders/fulfill-orders\"\n    }, \"fulfilling orders\")))))));\n  }\n\n}\n\n_defineProperty(MyApp, \"contextType\", Context);\n\nexport default MyApp;","map":{"version":3,"sources":["C:/Users/kuldeep/Downloads/aladdin-dropshiper-local/pages/_app.js"],"names":["App","Head","AppProvider","Frame","FooterHelp","Link","TopBar","Navigation","ArrowLeftMinor","CustomersMinor","SettingsMajorMonotone","DraftOrdersMajorMonotone","OnlineStoreMajorMonotone","ProductsMajorTwotone","SearchMajorMonotone","ConversationMinor","HomeMajorMonotone","OrdersMajorTwotone","translations","Provider","Cookies","ApolloClient","ApolloProvider","store","Redirect","Context","client","fetchOptions","credentials","MyApp","isUserMenuOpen","toggleIsUserMenuOpen","mobileNavigationActive","userRole","get","firstName","lastName","handleNavigationToggle","setState","state","console","log","render","app","context","redirect","create","Component","pageProps","props","userMenuMarkup","items","content","icon","url","charAt","toUpperCase","menuitems","label","onClick","badge","navigationMarkup","accessibilityLabel","set","dispatch","Action","APP","topBarMarkup","config","apiKey","API_KEY","shopOrigin","forceRedirect"],"mappings":"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","sourcesContent":["import App from 'next/app';\nimport Head from 'next/head';\nimport { AppProvider,Frame,FooterHelp,Link,TopBar,Navigation} from '@shopify/polaris';\nimport {ArrowLeftMinor,CustomersMinor,SettingsMajorMonotone,DraftOrdersMajorMonotone,OnlineStoreMajorMonotone,ProductsMajorTwotone,SearchMajorMonotone, ConversationMinor, HomeMajorMonotone, OrdersMajorTwotone} from '@shopify/polaris-icons';\nimport translations from '@shopify/polaris/locales/en.json';\nimport '@shopify/polaris/styles.css';\nimport { Provider } from '@shopify/app-bridge-react';\nimport Cookies from 'js-cookie';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\nimport store from 'store-js';\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport { Context } from '@shopify/app-bridge-react';\nconst client = new ApolloClient({\n  fetchOptions: {\n    credentials: 'include'\n  },\n});\nclass MyApp extends App {  \n  static contextType = Context;\n\n  state={\n    isUserMenuOpen:false,\n    toggleIsUserMenuOpen:false,\n    mobileNavigationActive:false,\n    userRole:store.get('userRole'),\n    firstName:store.get('firstName')?store.get('firstName'):'Guest',\n    lastName:store.get('lastName')?store.get('lastName'):''\n  };\n  handleNavigationToggle(){\n    this.setState({mobileNavigationActive:!this.state.mobileNavigationActive})\n    console.log('toggle navigation visibility '+this.state.mobileNavigationActive);\n  }\n  toggleIsUserMenuOpen(){\n    \n    this.setState({isUserMenuOpen:!this.state.isUserMenuOpen})\n    console.log(this.state.isUserMenuOpen)\n  }\n  render() {\n    const app = this.context;\n    const redirect = Redirect.create(app);\n    const { Component, pageProps } = this.props;\n    const{isUserMenuOpen,mobileNavigationActive,firstName,lastName}=this.state;\n    const userMenuMarkup = (\n      <TopBar.UserMenu\n        actions={[\n          {\n            items: [{content: 'Back to Shopify', icon: ArrowLeftMinor}],\n          },\n          {\n            items: [{content: 'Signin',url:'/signin'}],\n          },\n        ]}\n        name={firstName}\n        detail={firstName+' '+lastName}\n        initials={firstName.charAt(0).toUpperCase()}\n        open={isUserMenuOpen}\n        onToggle={()=>this.toggleIsUserMenuOpen()}\n      />\n    );\n    let  menuitems=[];\n    if(this.state.userRole=='dropshipper'){\n      menuitems=[\n        {\n          label: 'DropShipper Dashboard',\n          icon: HomeMajorMonotone,\n          onClick: ()=>{},\n        },\n        {\n          label: 'Search Products',\n          icon: SearchMajorMonotone,\n          url:'/search'\n        },\n        {\n          label: 'My Products',\n          icon: ProductsMajorTwotone,\n          url:'/my-products',\n          badge: '15'\n        },\n        {\n          label:'Manage Orders',\n          icon:DraftOrdersMajorMonotone,\n          url:'/manage-orders'\n        },\n        {\n          label:'Shopify Admin',\n          icon:OnlineStoreMajorMonotone,\n          url:'/admin'\n        },\n        {\n          label:'Settings',\n          icon:SettingsMajorMonotone,\n          url:'/manage-orders'\n        }\n      ]\n       }else if(this.state.userRole=='seller'){\n        menuitems=[\n          {\n            label: 'Seller Dashboard',\n            icon: HomeMajorMonotone,\n            url:'/'\n          },\n          {\n            label: 'Selling Products',\n            icon: OrdersMajorTwotone,\n            url:'/selling_products'\n          },\n          ,\n        {\n          label:'Settings',\n          icon:SettingsMajorMonotone,\n          url:'/manage-orders'\n        }\n        ]\n    }else{\n      menuitems=[\n        {\n          label: 'SignIn',\n          icon: CustomersMinor,\n          onClick:()=>{}\n        },\n      {\n        label:'Pricing',\n        icon:SettingsMajorMonotone,\n        url:'/plans'\n      }\n      ]\n\n    }\n      const navigationMarkup = (\n        <Navigation location=\"/\">\n          <Navigation.Section\n            items={[\n              {\n                label: 'Back to Shopify',\n                icon: ArrowLeftMinor,\n              },\n            ]}\n          />\n          <Navigation.Section\n            separator\n            title=\"Dropshipper App\"\n           \n            items={menuitems}\n            action={{\n              icon: ConversationMinor,\n              accessibilityLabel: 'Contact support',\n              onClick: ()=>{\n                store.set('userRole','')\n                redirect.dispatch(\n                  Redirect.Action.APP,'/'\n                );\n              },\n            }}\n          />\n        </Navigation>\n      );\n   \n   \n  \n    const topBarMarkup = (\n      <TopBar\n        showNavigationToggle\n        userMenu={userMenuMarkup}\n        onNavigationToggle={()=>this.handleNavigationToggle()}\n        \n      />\n    );\n    const config = { apiKey: API_KEY, shopOrigin: Cookies.get(\"shopOrigin\"), forceRedirect: true };\n    return (\n      <React.Fragment>\n        <Head>\n          <title>Sample App</title>\n          <meta charSet=\"utf-8\" />\n        </Head> \n        <Provider config={config}>     \n        <AppProvider  i18n={translations}>\n        <Frame topBar={topBarMarkup} \n        navigation={navigationMarkup}\n        showMobileNavigation={mobileNavigationActive}\n        onNavigationDismiss={()=>this.handleNavigationToggle()}\n        >\n        <ApolloProvider client={client}>\n            <Component {...pageProps} />\n            <FooterHelp>\n  Learn more about{' '}\n  <Link url=\"https://help.shopify.com/manual/orders/fulfill-orders\">\n    fulfilling orders\n  </Link>\n</FooterHelp>\n          </ApolloProvider>\n         </Frame>\n          </AppProvider> \n          </Provider>       \n      </React.Fragment>\n    );\n  }\n}\nexport default MyApp;"]},"metadata":{},"sourceType":"module"}