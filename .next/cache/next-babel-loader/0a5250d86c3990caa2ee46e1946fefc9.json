{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { Page, FormLayout, Form, Link, Button, InlineError, Select, TextStyle, TextField, Layout, Thumbnail } from '@shopify/polaris';\nimport { CirclePlusMinor } from '@shopify/polaris-icons';\nimport { loadStripe } from '@stripe/stripe-js';\nimport CardForm from '../components/CardForm';\n\nvar Singup = /*#__PURE__*/function (_React$Component) {\n  _inherits(Singup, _React$Component);\n\n  var _super = _createSuper(Singup);\n\n  function Singup() {\n    var _this;\n\n    _classCallCheck(this, Singup);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      name: '',\n      email: '',\n      password: '',\n      roleselected: '',\n      isInvalid: false,\n      isInvalidPassword: false,\n      role: 'dropshipper',\n      errorMessage: '',\n      errorMessagePassword: '',\n      errorMessageRole: ''\n    });\n\n    return _this;\n  }\n\n  _createClass(Singup, [{\n    key: \"handleSubmit\",\n    value: function handleSubmit(_event) {\n      console.log(_event);\n      this.setState({\n        email: '',\n        password: ''\n      });\n    }\n  }, {\n    key: \"handleChoiceChange\",\n    value: function handleChoiceChange(value) {\n      console.log(value);\n      this.setState({\n        dropshipper: value\n      });\n    }\n  }, {\n    key: \"handlePasswordChange\",\n    value: function handlePasswordChange(value) {\n      console.log(value);\n      this.setState({\n        password: value\n      });\n    }\n  }, {\n    key: \"handleEmailChange\",\n    value: function handleEmailChange(value) {\n      if (value.length < 3) {\n        this.setState({\n          isInvalid: true\n        });\n      }\n\n      if (value.length > 3) {\n        this.setState({\n          isInvalid: false\n        });\n      }\n\n      var errorMessage = this.state.isInvalid ? 'Enter 3 or more characters for product type is equal to' : '';\n      console.log(value);\n      this.setState({\n        email: value,\n        errorMessage: errorMessage\n      });\n    }\n  }, {\n    key: \"handleRoleChange\",\n    value: function handleRoleChange(value) {\n      console.log(value);\n      this.setState({\n        roleselected: value\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          name = _this$state.name,\n          email = _this$state.email,\n          password = _this$state.password,\n          roleselected = _this$state.roleselected,\n          errorMessageName = _this$state.errorMessageName,\n          errorMessage = _this$state.errorMessage,\n          errorMessagePassword = _this$state.errorMessagePassword,\n          errorMessageRole = _this$state.errorMessageRole,\n          isInvalid = _this$state.isInvalid,\n          isInvalidPassword = _this$state.isInvalidPassword;\n      return __jsx(Page, {\n        title: \"Signup\",\n        separator: true\n      }, __jsx(Form, {\n        onSubmit: function onSubmit(_event) {\n          return _this2.handleSubmit(_event);\n        }\n      }, __jsx(FormLayout, null, __jsx(TextField, {\n        value: name,\n        onChange: function onChange(value) {\n          return _this2.handleEmailChange(value);\n        },\n        label: \"name\",\n        type: \"text\",\n        error: isInvalid,\n        id: \"name\",\n        helpText: __jsx(\"span\", null, \"Enter your email Address.\")\n      }), __jsx(\"div\", {\n        style: {\n          marginTop: '4px'\n        }\n      }, __jsx(InlineError, {\n        message: errorMessageName,\n        fieldID: 'name'\n      })), __jsx(TextField, {\n        value: email,\n        onChange: function onChange(value) {\n          return _this2.handleEmailChange(value);\n        },\n        label: \"Email\",\n        type: \"email\",\n        error: isInvalid,\n        id: \"email\",\n        helpText: __jsx(\"span\", null, \"Enter your email Address.\")\n      }), __jsx(\"div\", {\n        style: {\n          marginTop: '4px'\n        }\n      }, __jsx(InlineError, {\n        message: errorMessage,\n        fieldID: 'email'\n      })), __jsx(TextField, {\n        value: password,\n        onChange: function onChange(value) {\n          return _this2.handlePasswordChange(value);\n        },\n        label: \"Password\",\n        type: \"password\",\n        error: isInvalidPassword,\n        id: \"password\",\n        helpText: __jsx(\"span\", null, \"Enter your email Password.\")\n      }), __jsx(\"div\", {\n        style: {\n          marginTop: '4px'\n        }\n      }, __jsx(InlineError, {\n        message: errorMessagePassword,\n        fieldID: 'password'\n      })), __jsx(Select, {\n        label: \"Select Role\",\n        options: [{\n          label: 'Seller',\n          value: 'seller'\n        }, {\n          label: 'DropShipper',\n          value: 'dropShipper'\n        }],\n        id: \"role\",\n        selected: [roleselected],\n        onChange: function onChange(value) {\n          return _this2.handleRoleChange(value);\n        }\n      }), __jsx(\"div\", {\n        style: {\n          marginTop: '4px'\n        }\n      }, __jsx(InlineError, {\n        message: errorMessageRole,\n        fieldID: 'role'\n      })), __jsx(Button, {\n        submit: true\n      }, \"Sign In\"), __jsx(Link, {\n        url: \"/index\"\n      }, \"Already Resgistered?\"))));\n    }\n  }]);\n\n  return Singup;\n}(React.Component);\n\nexport { Singup as default };","map":{"version":3,"sources":["C:/Users/kuldeep/Downloads/aladdin-dropshiper-local/pages/signup.js"],"names":["React","Page","FormLayout","Form","Link","Button","InlineError","Select","TextStyle","TextField","Layout","Thumbnail","CirclePlusMinor","loadStripe","CardForm","Singup","name","email","password","roleselected","isInvalid","isInvalidPassword","role","errorMessage","errorMessagePassword","errorMessageRole","_event","console","log","setState","value","dropshipper","length","state","errorMessageName","handleSubmit","handleEmailChange","marginTop","handlePasswordChange","label","handleRoleChange","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {Page,FormLayout,Form, Link,Button, InlineError ,Select, TextStyle, TextField, Layout,Thumbnail} from '@shopify/polaris';\r\nimport {CirclePlusMinor} from '@shopify/polaris-icons';\r\nimport {loadStripe} from '@stripe/stripe-js';\r\nimport CardForm from '../components/CardForm';\r\n\r\nexport default class Singup extends React.Component {\r\n    state = {\r\n        name:'',\r\n        email:'',\r\n        password:'',\r\n        roleselected:'',\r\n        isInvalid:false,\r\n        isInvalidPassword:false,\r\n        role:'dropshipper',\r\n        errorMessage :'',\r\n        errorMessagePassword:'',\r\n        errorMessageRole:''\r\n      };\r\n   \r\n      handleSubmit(_event){\r\n          console.log(_event)  \r\n          this.setState({email:'',  password:'' })\r\n      }\r\n      \r\n      handleChoiceChange(value){\r\n        console.log(value)\r\n        this.setState({dropshipper:value})\r\n      }\r\n      handlePasswordChange(value){\r\n        console.log(value)\r\n        this.setState({password:value})\r\n      }\r\n      handleEmailChange(value){\r\n        if(value.length < 3){\r\n          this.setState({isInvalid:true})\r\n        }\r\n        if(value.length > 3){\r\n          this.setState({isInvalid:false})\r\n        }\r\n       let errorMessage = this.state.isInvalid\r\n    ? 'Enter 3 or more characters for product type is equal to'\r\n    : '';\r\n \r\n        console.log(value)\r\n        this.setState({email:value,errorMessage:errorMessage})\r\n    }\r\n    handleRoleChange(value){\r\n      console.log(value)\r\n      this.setState({roleselected:value})\r\n    }\r\n       \r\n    render() {\r\n        const{name,email,password,roleselected,errorMessageName,errorMessage,errorMessagePassword,errorMessageRole,isInvalid,isInvalidPassword}=this.state;\r\n       \r\n    return (\r\n        <Page title=\"Signup\" separator>     \r\n <Form onSubmit={(_event)=>this.handleSubmit(_event)}>\r\n      <FormLayout>\r\n      <TextField\r\n          value={name}\r\n          onChange={(value) => this.handleEmailChange(value)}\r\n          label=\"name\"\r\n          type=\"text\"\r\n          error={isInvalid}\r\n          id=\"name\"\r\n          helpText={\r\n            <span>\r\n              Enter your email Address.\r\n            </span>\r\n          }\r\n        />\r\n          <div style={{marginTop: '4px'}}>\r\n          <InlineError message={errorMessageName} fieldID={'name'} />\r\n        </div>\r\n     \r\n        <TextField\r\n          value={email}\r\n          onChange={(value) => this.handleEmailChange(value)}\r\n          label=\"Email\"\r\n          type=\"email\"\r\n          error={isInvalid}\r\n          id=\"email\"\r\n          helpText={\r\n            <span>\r\n              Enter your email Address.\r\n            </span>\r\n          }\r\n        />\r\n          <div style={{marginTop: '4px'}}>\r\n          <InlineError message={errorMessage} fieldID={'email'} />\r\n        </div>\r\n             <TextField\r\n          value={password}\r\n          onChange={(value) => this.handlePasswordChange(value)}\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          error={isInvalidPassword}\r\n          id=\"password\"\r\n          helpText={\r\n            <span>\r\n              Enter your email Password.\r\n            </span>\r\n          }\r\n        />\r\n         <div style={{marginTop: '4px'}}>\r\n          <InlineError message={errorMessagePassword} fieldID={'password'} />\r\n        </div>\r\n        <Select\r\n        label=\"Select Role\"\r\n        options={[\r\n          {label: 'Seller', value: 'seller'},\r\n          {label: 'DropShipper', value: 'dropShipper'},\r\n        ]}\r\n        id=\"role\"\r\n        selected={[roleselected]}\r\n        onChange={(value)=>this.handleRoleChange(value)}\r\n      />\r\n          <div style={{marginTop: '4px'}}>\r\n          <InlineError message={errorMessageRole} fieldID={'role'} />\r\n        </div>\r\n\r\n        <Button submit>Sign In</Button>\r\n        <Link url=\"/index\">Already Resgistered?</Link>\r\n           </FormLayout>\r\n    </Form>\r\n        </Page>\r\n\r\n    );\r\n\r\n    }\r\n    \r\n}"]},"metadata":{},"sourceType":"module"}