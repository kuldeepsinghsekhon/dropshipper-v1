{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport { Card, ResourceList, Stack, TextStyle, Thumbnail } from '@shopify/polaris';\nimport store from 'store-js';\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport { Context } from '@shopify/app-bridge-react';\nconst GET_PRODUCTS_BY_ID = gql`\n  query getProducts($ids: [ID!]!) {\n    nodes(ids: $ids) {\n      ... on Product {\n        title\n        handle\n        descriptionHtml\n        id\n        images(first: 1) {\n          edges {\n            node {\n              originalSrc\n              altText\n            }\n          }\n        }\n        variants(first: 1) {\n          edges {\n            node {\n              price\n              id\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nclass ResourceListWithProducts extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      selectedItems: []\n    });\n  }\n\n  render() {\n    const app = this.context;\n\n    const redirectToProduct = () => {\n      const redirect = Redirect.create(app);\n      redirect.dispatch(Redirect.Action.APP, '/edit-products');\n    };\n\n    const {\n      selectedItems\n    } = this.state;\n    const twoWeeksFromNow = new Date(Date.now() + 12096e5).toDateString();\n    return __jsx(Query, {\n      query: GET_PRODUCTS_BY_ID,\n      variables: {\n        ids: store.get('ids')\n      }\n    }, ({\n      data,\n      loading,\n      error\n    }) => {\n      if (loading) {\n        return __jsx(\"div\", null, \"Loading\\xE2\\u20AC\\xA6\");\n      }\n\n      if (error) {\n        return __jsx(\"div\", null, error.message);\n      }\n\n      console.log(data);\n      return __jsx(Card, null, __jsx(ResourceList, {\n        showHeader: true,\n        resourceName: {\n          singular: 'Product',\n          plural: 'Products'\n        },\n        items: data.nodes,\n        selectedItems: selectedItems,\n        onSelectionChange: items => {\n          const idsFromResources = items.map(item => item);\n          this.setState({\n            selectedItems: idsFromResources\n          });\n        },\n        promotedBulkActions: [{\n          content: 'Submit Products',\n          onAction: () => {\n            alert(selectedItems);\n          }\n        }]\n        /* bulkActions={[\n           {\n             content: 'Add tags',\n             onAction: () => console.log(selectedItems),\n           },\n           {\n             content: 'Remove tags',\n             onAction: () => console.log('Todo: implement bulk remove tags'),\n           },\n           {\n             content: 'Delete customers',\n             onAction: () => console.log('Todo: implement bulk delete'),\n           },\n         ]}*/\n        ,\n        renderItem: item => {\n          const media = __jsx(Thumbnail, {\n            source: item.images.edges[0] ? item.images.edges[0].node.originalSrc : '',\n            alt: item.images.edges[0] ? item.images.edges[0].node.altText : ''\n          });\n\n          const price = item.variants.edges[0].node.price;\n          return __jsx(ResourceList.Item, {\n            id: item.id,\n            media: media,\n            accessibilityLabel: `View details for ${item.title}`,\n            onClick: () => {\n              store.set('item', item);\n              redirectToProduct();\n            }\n          }, __jsx(Stack, null, __jsx(Stack.Item, {\n            fill: true\n          }, __jsx(\"h3\", null, __jsx(TextStyle, {\n            variation: \"strong\"\n          }, item.title))), __jsx(Stack.Item, null, __jsx(\"p\", null, \"$\", price)), __jsx(Stack.Item, null, __jsx(\"p\", null, \"Expires on \", twoWeeksFromNow, \" \"))));\n        }\n      }));\n    });\n  }\n\n}\n\n_defineProperty(ResourceListWithProducts, \"contextType\", Context);\n\nexport default ResourceListWithProducts;","map":{"version":3,"sources":["C:/Users/kuldeep/Downloads/aladdin-dropshiper-local/components/ResourceListSeller.js"],"names":["gql","Query","Card","ResourceList","Stack","TextStyle","Thumbnail","store","Redirect","Context","GET_PRODUCTS_BY_ID","ResourceListWithProducts","React","Component","selectedItems","render","app","context","redirectToProduct","redirect","create","dispatch","Action","APP","state","twoWeeksFromNow","Date","now","toDateString","ids","get","data","loading","error","message","console","log","singular","plural","nodes","items","idsFromResources","map","item","setState","content","onAction","alert","media","images","edges","node","originalSrc","altText","price","variants","id","title","set"],"mappings":"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","sourcesContent":["import gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport {\n  Card,\n  ResourceList,\n  Stack,\n  TextStyle,\n  Thumbnail,\n} from '@shopify/polaris';\nimport store from 'store-js';\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport { Context } from '@shopify/app-bridge-react';\n\nconst GET_PRODUCTS_BY_ID = gql`\n  query getProducts($ids: [ID!]!) {\n    nodes(ids: $ids) {\n      ... on Product {\n        title\n        handle\n        descriptionHtml\n        id\n        images(first: 1) {\n          edges {\n            node {\n              originalSrc\n              altText\n            }\n          }\n        }\n        variants(first: 1) {\n          edges {\n            node {\n              price\n              id\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nclass ResourceListWithProducts extends React.Component {\n  static contextType = Context;\n  state = {\n    selectedItems: [],\n  };\n  render() {\n    const app = this.context;\n    const redirectToProduct = () => {\n      const redirect = Redirect.create(app);\n      redirect.dispatch(\n        Redirect.Action.APP,\n        '/edit-products',\n      );\n    };\n    const { selectedItems } = this.state;\n    const twoWeeksFromNow = new Date(Date.now() + 12096e5).toDateString();\n    return (\n      <Query query={GET_PRODUCTS_BY_ID} variables={{ ids: store.get('ids') }}>\n        {({ data, loading, error }) => {\n          if (loading) { return <div>Loadingâ€¦</div>; }\n          if (error) { return <div>{error.message}</div>; }\n          console.log(data);\n          return (\n            <Card>\n              <ResourceList\n                showHeader\n                resourceName={{ singular: 'Product', plural: 'Products' }}\n                items={data.nodes}\n                selectedItems={selectedItems}\n                onSelectionChange={(items)=>{\n                  const idsFromResources = items.map((item) => item);\n                  \n                  this.setState({ selectedItems: idsFromResources });\n                }}\n                promotedBulkActions={ [\n                  {\n                    content: 'Submit Products',\n                    onAction: () => {\n                      alert(selectedItems)},\n                  },\n                ]}\n               /* bulkActions={[\n                  {\n                    content: 'Add tags',\n                    onAction: () => console.log(selectedItems),\n                  },\n                  {\n                    content: 'Remove tags',\n                    onAction: () => console.log('Todo: implement bulk remove tags'),\n                  },\n                  {\n                    content: 'Delete customers',\n                    onAction: () => console.log('Todo: implement bulk delete'),\n                  },\n                ]}*/\n                renderItem={(item) => {\n                  const media = (\n                    <Thumbnail\n                      source={\n                        item.images.edges[0]\n                          ? item.images.edges[0].node.originalSrc\n                          : ''\n                      }\n                      alt={\n                        item.images.edges[0]\n                          ? item.images.edges[0].node.altText\n                          : ''\n                      }\n                    />\n                  );\n                  const price = item.variants.edges[0].node.price;\n                  return (\n                    <ResourceList.Item\n                      id={item.id}\n                      media={media}\n                      accessibilityLabel={`View details for ${item.title}`}\n                      onClick={() => {\n                        store.set('item', item);\n                        redirectToProduct();\n                      }\n                      }\n                    >\n                      <Stack>\n                        <Stack.Item fill>\n                          <h3>\n                            <TextStyle variation=\"strong\">\n                              {item.title}\n                            </TextStyle>\n                          </h3>\n                        </Stack.Item>\n                        <Stack.Item>\n                          <p>${price}</p>\n                        </Stack.Item>\n                        <Stack.Item>\n                          <p>Expires on {twoWeeksFromNow} </p>\n                        </Stack.Item>\n                      </Stack>\n                    </ResourceList.Item>\n                  );\n                }}\n              />\n            </Card>\n          );\n        }}\n      </Query>\n    );\n  }\n}\n\nexport default ResourceListWithProducts;\n"]},"metadata":{},"sourceType":"module"}