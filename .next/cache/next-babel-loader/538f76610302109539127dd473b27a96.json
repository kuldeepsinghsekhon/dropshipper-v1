{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { Page, FormLayout, Form, Link, Button, InlineError, Select, Card, TextField, Layout, Thumbnail } from '@shopify/polaris';\nimport { CirclePlusMinor } from '@shopify/polaris-icons';\nimport { Elements } from '@stripe/react-stripe-js';\nimport { loadStripe } from '@stripe/stripe-js';\nimport CardForm from '../components/CardForm';\nimport store from 'store-js';\nvar stripePromise = loadStripe(\"pk_test_TYooMQauvdEDq54NiTphI7jx\");\n\nvar Singin = /*#__PURE__*/function (_React$Component) {\n  _inherits(Singin, _React$Component);\n\n  var _super = _createSuper(Singin);\n\n  function Singin() {\n    var _this;\n\n    _classCallCheck(this, Singin);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      email: '',\n      password: '',\n      roleselected: '',\n      emailisInvalid: false,\n      isInvalidPassword: false,\n      errorMessageEmail: '',\n      errorMessagePassword: '',\n      errorMessageRole: '',\n      successMessageactive: false\n    });\n\n    return _this;\n  }\n\n  _createClass(Singin, [{\n    key: \"toggleSuccessActive\",\n    value: function toggleSuccessActive() {\n      this.setState({\n        successMessageactive: !this.state.successMessageactive\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          email = _this$state.email,\n          password = _this$state.password,\n          roleselected = _this$state.roleselected;\n      var user = {\n        email: email,\n        password: password,\n        role: roleselected\n      };\n      console.log(user);\n      fetch(\"https://aladdin-dropshipper-server.herokuapp.com/signin\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: user\n      }).then(function (res) {\n        return res.json();\n      }).then(function (json) {\n        console.log(json);\n\n        _this2.setState({\n          email: '',\n          password: ''\n        });\n\n        store.set('userRole', roleselected);\n\n        _this2.toggleSuccessActive();\n      });\n    }\n  }, {\n    key: \"handlePasswordChange\",\n    value: function handlePasswordChange(value) {\n      if (value.length < 3) {\n        this.setState({\n          passwordisInvalid: true\n        });\n      }\n\n      if (value.length > 3) {\n        this.setState({\n          passwordisInvalid: false\n        });\n      }\n\n      var errorMessage = this.state.passwordisInvalid ? 'Enter 3 or more characters' : '';\n      console.log(value);\n      this.setState({\n        password: value,\n        errorMessagePassword: errorMessage\n      });\n    }\n  }, {\n    key: \"handleEmailChange\",\n    value: function handleEmailChange(value) {\n      if (value.length < 3) {\n        this.setState({\n          emailisInvalid: true\n        });\n      }\n\n      if (value.length > 3) {\n        this.setState({\n          emailisInvalid: false\n        });\n      }\n\n      var errorMessage = this.state.emailisInvalid ? 'Enter 3 or more characters ' : '';\n      console.log(value);\n      this.setState({\n        email: value,\n        errorMessageEmail: errorMessage\n      });\n    }\n  }, {\n    key: \"handleRoleChange\",\n    value: function handleRoleChange(value) {\n      console.log(value);\n      this.setState({\n        roleselected: value\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state2 = this.state,\n          email = _this$state2.email,\n          password = _this$state2.password,\n          roleselected = _this$state2.roleselected,\n          errorMessageEmail = _this$state2.errorMessageEmail,\n          errorMessagePassword = _this$state2.errorMessagePassword,\n          errorMessageRole = _this$state2.errorMessageRole,\n          isInvalidPassword = _this$state2.isInvalidPassword,\n          emailisInvalid = _this$state2.emailisInvalid,\n          successMessageactive = _this$state2.successMessageactive;\n      var toastMarkup = successMessageactive ? __jsx(Toast, {\n        content: \"Registered Successfully\",\n        onDismiss: function onDismiss() {\n          return _this3.toggleSuccessActive();\n        }\n      }) : null;\n      return __jsx(Page, {\n        title: \"Signup\",\n        separator: true\n      }, toastMarkup, __jsx(Form, {\n        onSubmit: function onSubmit() {\n          return _this3.handleSubmit();\n        }\n      }, __jsx(FormLayout, null, __jsx(TextField, {\n        value: email,\n        onChange: function onChange(value) {\n          return _this3.handleEmailChange(value);\n        },\n        label: \"Email\",\n        type: \"email\",\n        error: emailisInvalid,\n        id: \"email\",\n        helpText: __jsx(\"span\", null, \"Enter your email Address.\")\n      }), __jsx(\"div\", {\n        style: {\n          marginTop: '4px'\n        }\n      }, __jsx(InlineError, {\n        message: errorMessageEmail,\n        fieldID: 'email'\n      })), __jsx(TextField, {\n        value: password,\n        onChange: function onChange(value) {\n          return _this3.handlePasswordChange(value);\n        },\n        label: \"Password\",\n        type: \"password\",\n        error: isInvalidPassword,\n        id: \"password\",\n        helpText: __jsx(\"span\", null, \"Enter your Password.\")\n      }), __jsx(\"div\", {\n        style: {\n          marginTop: '4px'\n        }\n      }, __jsx(InlineError, {\n        message: errorMessagePassword,\n        fieldID: 'password'\n      })), __jsx(Select, {\n        label: \"Select Role\",\n        options: [{\n          label: 'Seller',\n          value: 'seller'\n        }, {\n          label: 'DropShipper',\n          value: 'dropshipper'\n        }],\n        id: \"role\",\n        selected: roleselected,\n        onChange: function onChange(value) {\n          return _this3.handleRoleChange(value);\n        }\n      }), __jsx(\"div\", {\n        style: {\n          marginTop: '4px'\n        }\n      }, __jsx(InlineError, {\n        message: errorMessageRole,\n        fieldID: 'role'\n      })), __jsx(Button, {\n        submit: true\n      }, \"Sign In\"), __jsx(Link, {\n        url: \"/signup\"\n      }, \"Not Resgistered?\"))));\n    }\n  }]);\n\n  return Singin;\n}(React.Component);\n\nexport { Singin as default };","map":{"version":3,"sources":["C:/Users/kuldeep/Downloads/aladdin-dropshiper-local/pages/index.js"],"names":["React","Page","FormLayout","Form","Link","Button","InlineError","Select","Card","TextField","Layout","Thumbnail","CirclePlusMinor","Elements","loadStripe","CardForm","store","stripePromise","Singin","email","password","roleselected","emailisInvalid","isInvalidPassword","errorMessageEmail","errorMessagePassword","errorMessageRole","successMessageactive","setState","state","user","role","console","log","fetch","method","headers","body","then","res","json","set","toggleSuccessActive","value","length","passwordisInvalid","errorMessage","toastMarkup","handleSubmit","handleEmailChange","marginTop","handlePasswordChange","label","handleRoleChange","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Page,FormLayout,Form, Link,Button, InlineError ,Select, Card, TextField, Layout,Thumbnail} from '@shopify/polaris';\nimport {CirclePlusMinor} from '@shopify/polaris-icons';\nimport {Elements} from '@stripe/react-stripe-js';\nimport {loadStripe} from '@stripe/stripe-js';\nimport CardForm from '../components/CardForm';\nimport store from 'store-js';\nconst stripePromise = loadStripe(\"pk_test_TYooMQauvdEDq54NiTphI7jx\");\n\nexport default class Singin extends React.Component {\n  state = {  \n      email:'',\n      password:'',\n      roleselected:'',\n      emailisInvalid:false,\n      isInvalidPassword:false,\n      errorMessageEmail:'',\n      errorMessagePassword:'',\n      errorMessageRole:'',\n      successMessageactive:false\n    };\n    toggleSuccessActive(){\n      this.setState({successMessageactive:!this.state.successMessageactive})\n   }\n    handleSubmit(){\n        \n      const{email,password,roleselected}=this.state;\n     \n      const user={email:email,password:password,role:roleselected};\n      console.log(user)\n   fetch(\"https://aladdin-dropshipper-server.herokuapp.com/signin\", {\n     method: \"POST\",\n     headers: {\n       \"Content-Type\": \"application/json\",\n     },\n     body: user\n   }).then(res=>res.json())\n   .then(\n          (json) =>{ console.log(json)\n                this.setState({email:'',  password:'' })\n                store.set('userRole',roleselected)\n                this.toggleSuccessActive();\n               }\n        )\n       \n            \n    }\n\n    handlePasswordChange(value){\n      if(value.length < 3){\n        this.setState({passwordisInvalid:true})\n      }\n      if(value.length > 3){\n        this.setState({passwordisInvalid:false})\n      }\n     let errorMessage = this.state.passwordisInvalid\n  ? 'Enter 3 or more characters'\n  : '';\n\n      console.log(value)\n      this.setState({password:value,errorMessagePassword:errorMessage})\n    }\n    handleEmailChange(value){\n      if(value.length < 3){\n        this.setState({emailisInvalid:true})\n      }\n      if(value.length > 3){\n        this.setState({emailisInvalid:false})\n      }\n     let errorMessage = this.state.emailisInvalid\n  ? 'Enter 3 or more characters '\n  : '';\n\n      console.log(value)\n      this.setState({email:value,errorMessageEmail:errorMessage})\n  }\n     \n  handleRoleChange(value){\n    console.log(value)\n    this.setState({roleselected:value})\n  }\n    render() {\n      const{email,password,roleselected,errorMessageEmail,errorMessagePassword,errorMessageRole,isInvalidPassword,emailisInvalid,successMessageactive }=this.state;\n      const toastMarkup = successMessageactive ? (\n        <Toast content=\"Registered Successfully\" onDismiss={()=>this.toggleSuccessActive()} />\n      ) : null;\n    return (\n      <Page title=\"Signup\" separator>  \n      {toastMarkup}   \n<Form onSubmit={()=>this.handleSubmit()}>\n    <FormLayout>\n    \n   \n   \n      <TextField\n        value={email}\n        onChange={(value) => this.handleEmailChange(value)}\n        label=\"Email\"\n        type=\"email\"\n        error={emailisInvalid}\n        id=\"email\"\n        helpText={\n          <span>\n            Enter your email Address.\n          </span>\n        }\n      />\n        <div style={{marginTop: '4px'}}>\n        <InlineError message={errorMessageEmail} fieldID={'email'} />\n      </div>\n           <TextField\n        value={password}\n        onChange={(value) => this.handlePasswordChange(value)}\n        label=\"Password\"\n        type=\"password\"\n        error={isInvalidPassword}\n        id=\"password\"\n        helpText={\n          <span>\n            Enter your Password.\n          </span>\n        }\n      />\n       <div style={{marginTop: '4px'}}>\n        <InlineError message={errorMessagePassword} fieldID={'password'} />\n      </div>\n      <Select\n      label=\"Select Role\"\n      options={[\n        {label: 'Seller', value: 'seller'},\n        {label: 'DropShipper', value: 'dropshipper'},\n      ]}\n      id=\"role\"\n      selected={roleselected}\n      onChange={(value)=>this.handleRoleChange(value)}\n    />\n        <div style={{marginTop: '4px'}}>\n        <InlineError message={errorMessageRole} fieldID={'role'} />\n      </div>\n\n      <Button submit>Sign In</Button>\n      <Link url=\"/signup\">Not Resgistered?</Link>\n         </FormLayout>\n  </Form>\n      </Page>\n    );\n\n    }\n    \n}"]},"metadata":{},"sourceType":"module"}