{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Layout, Page, TextStyle, EmptyState } from '@shopify/polaris';\nimport { TitleBar, ResourcePicker } from '@shopify/app-bridge-react';\nimport ResourceListWithProducts from '../components/ResourceList';\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport { Context } from '@shopify/app-bridge-react';\nimport store from 'store-js';\n\nconst axios = require('axios');\n\nconst session = require('koa-session');\n\nimport Cookies from 'js-cookie';\nconst shop = Cookies.get(\"shopOrigin\");\nconst accessToken = Cookies.get(\"accessToken\");\nconst img = 'https://cdn.shopify.com/s/files/1/0757/9955/files/empty-state.svg';\n\nclass Selling_products extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      open: false,\n      userRole: store.get('userRole')\n    });\n\n    _defineProperty(this, \"handleSelection\", resources => {\n      const ids = resources.selection.map(product => product.id);\n      store.set('ids', ids);\n      const app = this.context;\n      const redirect = Redirect.create(app);\n      const url = \"https://aladdin-dropshipper-server.herokuapp.com/products/new\";\n      this.setState({\n        open: false\n      });\n      const productcontainer = resources.selection.map(product => {\n        //console.log(product)\n        const container = {};\n        container.title = product.title;\n        container.body_html = product.descriptionHtml;\n        container.tags = product.tags;\n        container.product_type = product.productType;\n        container.vendor = 'dropshipper';\n        container.shopifyProductId = product.id;\n        container.shop = shop;\n        console.log(product.images);\n        let pimages = product.images;\n        container.images = pimages.map(image => image.originalSrc);\n        console.log(container.images);\n        axios.post(url, container).then(response => {\n          this.shop_products();\n        }).catch(function (error) {});\n      });\n    });\n  }\n\n  shop_products() {\n    console.log(shop);\n    let url = \"https://aladdin-dropshipper-server.herokuapp.com/shop_products\";\n    axios.post(url, {\n      \"shop\": shop\n    }).then(response => {// const ids =response.data.map((product) => product.shopifyProductId);\n      // store.set('ids', ids);    \n      // console.log(ids)    \n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  componentDidMount() {\n    const userRole = this.state.userRole;\n    this.shop_products();\n    console.log(accessToken);\n    console.log(shop);\n  }\n\n  render() {\n    //console.log()\n    const {\n      open,\n      userRole\n    } = this.state;\n    const emptyState = !store.get('ids'); // if(userRole=='seller'){\n\n    return __jsx(Page, null, __jsx(TitleBar, {\n      primaryAction: {\n        content: 'Select products',\n        onAction: () => this.setState({\n          open: true\n        })\n      }\n    }), __jsx(ResourcePicker, {\n      resourceType: \"Product\",\n      showVariants: false,\n      open: this.state.open,\n      onSelection: resources => this.handleSelection(resources),\n      onCancel: () => this.setState({\n        open: false\n      })\n    }), emptyState ? __jsx(Layout, null, __jsx(EmptyState, {\n      heading: \"Sell Your Products on Multiple Stores\",\n      action: {\n        content: 'Select products',\n        onAction: () => this.setState({\n          open: true\n        })\n      },\n      image: img\n    }, __jsx(\"p\", null, \"Select products to sale .\"))) : __jsx(ResourceListWithProducts, null)); //}else{\n    //   return (\n    //     <Page>\n    //  <EmptyState\n    //         heading=\"Only Seller Can Sell Products\"\n    //         action={{\n    //           content: 'Register As Seller',\n    //           onAction: () =>{},\n    //         }}\n    //         image={img}\n    //       ></EmptyState>\n    //       </Page>\n    //   )}\n  }\n\n}\n\n_defineProperty(Selling_products, \"contextType\", Context);\n\nexport default Selling_products;","map":{"version":3,"sources":["C:/Users/kuldeep/Downloads/aladdin-dropshiper-local/pages/selling_products.js"],"names":["Layout","Page","TextStyle","EmptyState","TitleBar","ResourcePicker","ResourceListWithProducts","Redirect","Context","store","axios","require","session","Cookies","shop","get","accessToken","img","Selling_products","React","Component","open","userRole","resources","ids","selection","map","product","id","set","app","context","redirect","create","url","setState","productcontainer","container","title","body_html","descriptionHtml","tags","product_type","productType","vendor","shopifyProductId","console","log","images","pimages","image","originalSrc","post","then","response","shop_products","catch","error","componentDidMount","state","render","emptyState","content","onAction","handleSelection"],"mappings":"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","sourcesContent":["import { Layout, Page, TextStyle,EmptyState} from '@shopify/polaris';\nimport { TitleBar,ResourcePicker } from '@shopify/app-bridge-react';\nimport ResourceListWithProducts from '../components/ResourceList';\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport { Context } from '@shopify/app-bridge-react';\nimport store from 'store-js';\nconst axios =require('axios');\nconst session = require('koa-session');\nimport Cookies from 'js-cookie';\nconst shop=Cookies.get(\"shopOrigin\");\nconst accessToken=Cookies.get(\"accessToken\");\nconst img = 'https://cdn.shopify.com/s/files/1/0757/9955/files/empty-state.svg';\nclass Selling_products extends React.Component {\n  static contextType = Context;\n  \n  state = { open: false,userRole:store.get('userRole') };\n   handleSelection = (resources) => {\nconst ids =resources.selection.map((product) => product.id);\n     store.set('ids',ids);\n    const app = this.context;\n    const redirect = Redirect.create(app);\n    const url=\"https://aladdin-dropshipper-server.herokuapp.com/products/new\";\n    this.setState({ open: false })\n     const productcontainer = resources.selection.map((product) =>{\n       //console.log(product)\n      const container = {};\n      container.title = product.title;\n      container.body_html = product.descriptionHtml;\n      container.tags=product.tags;\n      container.product_type=product.productType;\n      container.vendor='dropshipper';\n      container.shopifyProductId=product.id;\n      container.shop=shop;\n      console.log(product.images)\n      let pimages=product.images;\n      container.images= pimages.map((image)=>image.originalSrc)\n     console.log(container.images)\n      axios.post(url,container).then( ( response ) => {\n        this.shop_products()\n               \n      } ).catch(function (error) {\n\n      })\n     });\n  }\n  shop_products(){\n    console.log(shop)\n    let url=\"https://aladdin-dropshipper-server.herokuapp.com/shop_products\";\n    axios.post(url,{\"shop\":shop}).then( (response)=>{ \n      // const ids =response.data.map((product) => product.shopifyProductId);\n      // store.set('ids', ids);    \n      // console.log(ids)    \n    } ).catch(function (error) {\n      console.log(error);\n    })\n  }\n  componentDidMount() {\n    const userRole=this.state.userRole;\n    this.shop_products();\n    console.log(accessToken)\n    console.log(shop)\n }\n  render() {\n \n    //console.log()\n    const { open,userRole }=this.state;\n    const emptyState = !store.get('ids');\n   // if(userRole=='seller'){\n    return (\n     \n  <Page>\n    <TitleBar\n      primaryAction={{\n        content: 'Select products',\n        onAction: () => this.setState({ open: true }),\n      }}\n    />\n    <ResourcePicker\n          resourceType=\"Product\"\n          showVariants={false}\n          open={this.state.open}\n          onSelection={(resources) => this.handleSelection(resources)}\n          onCancel={() => this.setState({ open: false })}\n        />\n         {emptyState ? (\n    <Layout>   \n      <EmptyState\n        heading=\"Sell Your Products on Multiple Stores\"\n        action={{\n          content: 'Select products',\n          onAction: () => this.setState({ open: true }),\n        }}\n        image={img}\n      >\n        <p>Select products to sale .</p>\n      </EmptyState>\n      </Layout>\n       ) : (\n        <ResourceListWithProducts />\n        )}\n    </Page>\n\n \n);\n//}else{\n//   return (\n     \n//     <Page>\n//  <EmptyState\n//         heading=\"Only Seller Can Sell Products\"\n//         action={{\n//           content: 'Register As Seller',\n//           onAction: () =>{},\n//         }}\n//         image={img}\n//       ></EmptyState>\n//       </Page>\n//   )}\n}\n}\n\nexport default Selling_products;"]},"metadata":{},"sourceType":"module"}