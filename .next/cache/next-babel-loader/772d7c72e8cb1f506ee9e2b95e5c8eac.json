{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { Page, FormLayout, Form, Link, Button, InlineError, Select, TextStyle, TextField, Layout, Thumbnail } from '@shopify/polaris';\nimport { CirclePlusMinor } from '@shopify/polaris-icons';\nimport { loadStripe } from '@stripe/stripe-js';\nimport CardForm from '../components/CardForm';\nexport default class Singup extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      firstName: '',\n      lastName: '',\n      email: '',\n      password: '',\n      roleselected: '',\n      isInvalid: false,\n      firstNameisInvalid: '',\n      lastNameisInvalid: '',\n      isInvalidPassword: false,\n      role: 'dropshipper',\n      errorMessage: '',\n      errorMessagefirstName: '',\n      errorMessagelastName: '',\n      errorMessagePassword: '',\n      errorMessageRole: ''\n    });\n  }\n\n  handleSubmit(_event) {\n    const {\n      email,\n      password,\n      roleselected\n    } = this.state;\n    var user = {\n      email: email,\n      password: password,\n      roleselected: roleselected\n    };\n    console.log(product);\n    fetch(\"https://aladdin-dropshipper-server.herokuapp.com/signup\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(user)\n    }).then(res => res.json()).then(json => {\n      console.log(json);\n    });\n    console.log(_event);\n    this.setState({\n      email: '',\n      password: ''\n    });\n  }\n\n  handleChoiceChange(value) {\n    console.log(value);\n    this.setState({\n      dropshipper: value\n    });\n  }\n\n  handlePasswordChange(value) {\n    console.log(value);\n    this.setState({\n      password: value\n    });\n  }\n\n  handleEmailChange(value) {\n    if (value.length < 3) {\n      this.setState({\n        isInvalid: true\n      });\n    }\n\n    if (value.length > 3) {\n      this.setState({\n        isInvalid: false\n      });\n    }\n\n    let errorMessage = this.state.isInvalid ? 'Enter 3 or more characters for product type is equal to' : '';\n    console.log(value);\n    this.setState({\n      email: value,\n      errorMessage: errorMessage\n    });\n  }\n\n  handlefirstNameChange(value) {\n    if (value.length < 3) {\n      this.setState({\n        firstNameisInvalid: true\n      });\n    }\n\n    if (value.length > 3) {\n      this.setState({\n        firstNameisInvalid: false\n      });\n    }\n\n    let errorMessagefirstName = this.state.firstNameisInvalid ? 'Enter 3 or more characters for product type is equal to' : '';\n    console.log(value);\n    this.setState({\n      firstName: value,\n      errorMessagefirstName: errorMessagefirstName\n    });\n  }\n\n  handlelastNameChange(value) {\n    if (value.length < 3) {\n      this.setState({\n        lastNameisInvalid: true\n      });\n    }\n\n    if (value.length > 3) {\n      this.setState({\n        lastNameisInvalid: false\n      });\n    }\n\n    let errorMessage = this.state.lastNameisInvalid ? 'Enter 3 or more characters for product type is equal to' : '';\n    console.log(value);\n    this.setState({\n      lastName: value,\n      errorMessagefirstName: errorMessage\n    });\n  }\n\n  handleRoleChange(value) {\n    console.log(value);\n    this.setState({\n      roleselected: value\n    });\n  }\n\n  render() {\n    const {\n      name,\n      email,\n      password,\n      roleselected,\n      errorMessagefirstName,\n      errorMessagelastName,\n      errorMessage,\n      errorMessagePassword,\n      errorMessageRole,\n      isInvalid,\n      firstNameisInvalid,\n      lastNameisInvalid,\n      isInvalidPassword\n    } = this.state;\n    return __jsx(Page, {\n      title: \"Signup\",\n      separator: true\n    }, __jsx(Form, {\n      onSubmit: _event => this.handleSubmit(_event)\n    }, __jsx(FormLayout, null, __jsx(TextField, {\n      value: firstName,\n      onChange: value => this.handlefirstNameChange(value),\n      label: \"FirstName\",\n      type: \"text\",\n      error: firstNameisInvalid,\n      id: \"name\",\n      helpText: __jsx(\"span\", null, \"Enter your Full Name.\")\n    }), __jsx(\"div\", {\n      style: {\n        marginTop: '4px'\n      }\n    }, __jsx(InlineError, {\n      message: errorMessagelastName,\n      fieldID: 'firstname'\n    })), __jsx(TextField, {\n      value: lastName,\n      onChange: value => this.handlefirstNameChange(value),\n      label: \"FirstName\",\n      type: \"text\",\n      error: lastNameisInvalid,\n      id: \"name\",\n      helpText: __jsx(\"span\", null, \"Enter your Full Name.\")\n    }), __jsx(\"div\", {\n      style: {\n        marginTop: '4px'\n      }\n    }, __jsx(InlineError, {\n      message: errorMessagefirstName,\n      fieldID: 'lasttname'\n    })), __jsx(TextField, {\n      value: email,\n      onChange: value => this.handleEmailChange(value),\n      label: \"Email\",\n      type: \"email\",\n      error: isInvalid,\n      id: \"email\",\n      helpText: __jsx(\"span\", null, \"Enter your email Address.\")\n    }), __jsx(\"div\", {\n      style: {\n        marginTop: '4px'\n      }\n    }, __jsx(InlineError, {\n      message: errorMessage,\n      fieldID: 'email'\n    })), __jsx(TextField, {\n      value: password,\n      onChange: value => this.handlePasswordChange(value),\n      label: \"Password\",\n      type: \"password\",\n      error: isInvalidPassword,\n      id: \"password\",\n      helpText: __jsx(\"span\", null, \"Enter your email Password.\")\n    }), __jsx(\"div\", {\n      style: {\n        marginTop: '4px'\n      }\n    }, __jsx(InlineError, {\n      message: errorMessagePassword,\n      fieldID: 'password'\n    })), __jsx(Select, {\n      label: \"Select Role\",\n      options: [{\n        label: 'Seller',\n        value: 'seller'\n      }, {\n        label: 'DropShipper',\n        value: 'dropShipper'\n      }],\n      id: \"role\",\n      selected: [roleselected],\n      onChange: value => this.handleRoleChange(value)\n    }), __jsx(\"div\", {\n      style: {\n        marginTop: '4px'\n      }\n    }, __jsx(InlineError, {\n      message: errorMessageRole,\n      fieldID: 'role'\n    })), __jsx(Button, {\n      submit: true\n    }, \"Sign In\"), __jsx(Link, {\n      url: \"/index\"\n    }, \"Already Resgistered?\"))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/kuldeep/Downloads/aladdin-dropshiper-local/pages/signup.js"],"names":["React","Page","FormLayout","Form","Link","Button","InlineError","Select","TextStyle","TextField","Layout","Thumbnail","CirclePlusMinor","loadStripe","CardForm","Singup","Component","firstName","lastName","email","password","roleselected","isInvalid","firstNameisInvalid","lastNameisInvalid","isInvalidPassword","role","errorMessage","errorMessagefirstName","errorMessagelastName","errorMessagePassword","errorMessageRole","handleSubmit","_event","state","user","console","log","product","fetch","method","headers","body","JSON","stringify","then","res","json","setState","handleChoiceChange","value","dropshipper","handlePasswordChange","handleEmailChange","length","handlefirstNameChange","handlelastNameChange","handleRoleChange","render","name","marginTop","label"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,EAAaC,UAAb,EAAwBC,IAAxB,EAA8BC,IAA9B,EAAmCC,MAAnC,EAA2CC,WAA3C,EAAwDC,MAAxD,EAAgEC,SAAhE,EAA2EC,SAA3E,EAAsFC,MAAtF,EAA6FC,SAA7F,QAA6G,kBAA7G;AACA,SAAQC,eAAR,QAA8B,wBAA9B;AACA,SAAQC,UAAR,QAAyB,mBAAzB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AAEA,eAAe,MAAMC,MAAN,SAAqBf,KAAK,CAACgB,SAA3B,CAAqC;AAAA;AAAA;;AAAA,mCACxC;AACNC,MAAAA,SAAS,EAAC,EADJ;AAENC,MAAAA,QAAQ,EAAC,EAFH;AAGJC,MAAAA,KAAK,EAAC,EAHF;AAIJC,MAAAA,QAAQ,EAAC,EAJL;AAKJC,MAAAA,YAAY,EAAC,EALT;AAMJC,MAAAA,SAAS,EAAC,KANN;AAOJC,MAAAA,kBAAkB,EAAC,EAPf;AAQJC,MAAAA,iBAAiB,EAAC,EARd;AASJC,MAAAA,iBAAiB,EAAC,KATd;AAUJC,MAAAA,IAAI,EAAC,aAVD;AAWJC,MAAAA,YAAY,EAAE,EAXV;AAYJC,MAAAA,qBAAqB,EAAC,EAZlB;AAaJC,MAAAA,oBAAoB,EAAC,EAbjB;AAcJC,MAAAA,oBAAoB,EAAC,EAdjB;AAeJC,MAAAA,gBAAgB,EAAC;AAfb,KADwC;AAAA;;AAmB9CC,EAAAA,YAAY,CAACC,MAAD,EAAQ;AAClB,UAAK;AAACd,MAAAA,KAAD;AAAOC,MAAAA,QAAP;AAAgBC,MAAAA;AAAhB,QAA8B,KAAKa,KAAxC;AACA,QAAIC,IAAI,GAAC;AAAChB,MAAAA,KAAK,EAACA,KAAP;AAAaC,MAAAA,QAAQ,EAACA,QAAtB;AAA+BC,MAAAA,YAAY,EAACA;AAA5C,KAAT;AACHe,IAAAA,OAAO,CAACC,GAAR,CAAYC,OAAZ;AACAC,IAAAA,KAAK,CAAC,yDAAD,EAA4D;AAC/DC,MAAAA,MAAM,EAAE,MADuD;AAE/DC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFsD;AAK/DC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeT,IAAf;AALyD,KAA5D,CAAL,CAMGU,IANH,CAMQC,GAAG,IAAEA,GAAG,CAACC,IAAJ,EANb,EAMyBF,IANzB,CAM+BE,IAAD,IAAS;AAAEX,MAAAA,OAAO,CAACC,GAAR,CAAYU,IAAZ;AAAkB,KAN3D;AAOKX,IAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAZ;AACA,SAAKe,QAAL,CAAc;AAAC7B,MAAAA,KAAK,EAAC,EAAP;AAAYC,MAAAA,QAAQ,EAAC;AAArB,KAAd;AACH;;AAED6B,EAAAA,kBAAkB,CAACC,KAAD,EAAO;AACvBd,IAAAA,OAAO,CAACC,GAAR,CAAYa,KAAZ;AACA,SAAKF,QAAL,CAAc;AAACG,MAAAA,WAAW,EAACD;AAAb,KAAd;AACD;;AACDE,EAAAA,oBAAoB,CAACF,KAAD,EAAO;AACzBd,IAAAA,OAAO,CAACC,GAAR,CAAYa,KAAZ;AACA,SAAKF,QAAL,CAAc;AAAC5B,MAAAA,QAAQ,EAAC8B;AAAV,KAAd;AACD;;AACDG,EAAAA,iBAAiB,CAACH,KAAD,EAAO;AACtB,QAAGA,KAAK,CAACI,MAAN,GAAe,CAAlB,EAAoB;AAClB,WAAKN,QAAL,CAAc;AAAC1B,QAAAA,SAAS,EAAC;AAAX,OAAd;AACD;;AACD,QAAG4B,KAAK,CAACI,MAAN,GAAe,CAAlB,EAAoB;AAClB,WAAKN,QAAL,CAAc;AAAC1B,QAAAA,SAAS,EAAC;AAAX,OAAd;AACD;;AACF,QAAIK,YAAY,GAAG,KAAKO,KAAL,CAAWZ,SAAX,GACpB,yDADoB,GAEpB,EAFC;AAICc,IAAAA,OAAO,CAACC,GAAR,CAAYa,KAAZ;AACA,SAAKF,QAAL,CAAc;AAAC7B,MAAAA,KAAK,EAAC+B,KAAP;AAAavB,MAAAA,YAAY,EAACA;AAA1B,KAAd;AACH;;AACD4B,EAAAA,qBAAqB,CAACL,KAAD,EAAO;AAC1B,QAAGA,KAAK,CAACI,MAAN,GAAe,CAAlB,EAAoB;AAClB,WAAKN,QAAL,CAAc;AAACzB,QAAAA,kBAAkB,EAAC;AAApB,OAAd;AACD;;AACD,QAAG2B,KAAK,CAACI,MAAN,GAAe,CAAlB,EAAoB;AAClB,WAAKN,QAAL,CAAc;AAACzB,QAAAA,kBAAkB,EAAC;AAApB,OAAd;AACD;;AACF,QAAIK,qBAAqB,GAAG,KAAKM,KAAL,CAAWX,kBAAX,GAC7B,yDAD6B,GAE7B,EAFC;AAICa,IAAAA,OAAO,CAACC,GAAR,CAAYa,KAAZ;AACA,SAAKF,QAAL,CAAc;AAAC/B,MAAAA,SAAS,EAACiC,KAAX;AAAiBtB,MAAAA,qBAAqB,EAACA;AAAvC,KAAd;AACH;;AACD4B,EAAAA,oBAAoB,CAACN,KAAD,EAAO;AACzB,QAAGA,KAAK,CAACI,MAAN,GAAe,CAAlB,EAAoB;AAClB,WAAKN,QAAL,CAAc;AAACxB,QAAAA,iBAAiB,EAAC;AAAnB,OAAd;AACD;;AACD,QAAG0B,KAAK,CAACI,MAAN,GAAe,CAAlB,EAAoB;AAClB,WAAKN,QAAL,CAAc;AAACxB,QAAAA,iBAAiB,EAAC;AAAnB,OAAd;AACD;;AACF,QAAIG,YAAY,GAAG,KAAKO,KAAL,CAAWV,iBAAX,GACpB,yDADoB,GAEpB,EAFC;AAICY,IAAAA,OAAO,CAACC,GAAR,CAAYa,KAAZ;AACA,SAAKF,QAAL,CAAc;AAAC9B,MAAAA,QAAQ,EAACgC,KAAV;AAAgBtB,MAAAA,qBAAqB,EAACD;AAAtC,KAAd;AACH;;AACG8B,EAAAA,gBAAgB,CAACP,KAAD,EAAO;AACrBd,IAAAA,OAAO,CAACC,GAAR,CAAYa,KAAZ;AACA,SAAKF,QAAL,CAAc;AAAC3B,MAAAA,YAAY,EAAC6B;AAAd,KAAd;AACD;;AAEDQ,EAAAA,MAAM,GAAG;AACL,UAAK;AAACC,MAAAA,IAAD;AAAMxC,MAAAA,KAAN;AAAYC,MAAAA,QAAZ;AAAqBC,MAAAA,YAArB;AAAkCO,MAAAA,qBAAlC;AAAwDC,MAAAA,oBAAxD;AAA6EF,MAAAA,YAA7E;AAA0FG,MAAAA,oBAA1F;AAA+GC,MAAAA,gBAA/G;AAAgIT,MAAAA,SAAhI;AAA0IC,MAAAA,kBAA1I;AAA6JC,MAAAA,iBAA7J;AAA+KC,MAAAA;AAA/K,QAAkM,KAAKS,KAA5M;AAEJ,WACI,MAAC,IAAD;AAAM,MAAA,KAAK,EAAC,QAAZ;AAAqB,MAAA,SAAS;AAA9B,OACP,MAAC,IAAD;AAAM,MAAA,QAAQ,EAAGD,MAAD,IAAU,KAAKD,YAAL,CAAkBC,MAAlB;AAA1B,OACK,MAAC,UAAD,QACA,MAAC,SAAD;AACI,MAAA,KAAK,EAAEhB,SADX;AAEI,MAAA,QAAQ,EAAGiC,KAAD,IAAW,KAAKK,qBAAL,CAA2BL,KAA3B,CAFzB;AAGI,MAAA,KAAK,EAAC,WAHV;AAII,MAAA,IAAI,EAAC,MAJT;AAKI,MAAA,KAAK,EAAE3B,kBALX;AAMI,MAAA,EAAE,EAAC,MANP;AAOI,MAAA,QAAQ,EACN;AARN,MADA,EAcG;AAAK,MAAA,KAAK,EAAE;AAACqC,QAAAA,SAAS,EAAE;AAAZ;AAAZ,OACC,MAAC,WAAD;AAAa,MAAA,OAAO,EAAE/B,oBAAtB;AAA4C,MAAA,OAAO,EAAE;AAArD,MADD,CAdH,EAiBE,MAAC,SAAD;AACE,MAAA,KAAK,EAAEX,QADT;AAEE,MAAA,QAAQ,EAAGgC,KAAD,IAAW,KAAKK,qBAAL,CAA2BL,KAA3B,CAFvB;AAGE,MAAA,KAAK,EAAC,WAHR;AAIE,MAAA,IAAI,EAAC,MAJP;AAKE,MAAA,KAAK,EAAE1B,iBALT;AAME,MAAA,EAAE,EAAC,MANL;AAOE,MAAA,QAAQ,EACN;AARJ,MAjBF,EA8BI;AAAK,MAAA,KAAK,EAAE;AAACoC,QAAAA,SAAS,EAAE;AAAZ;AAAZ,OACA,MAAC,WAAD;AAAa,MAAA,OAAO,EAAEhC,qBAAtB;AAA6C,MAAA,OAAO,EAAE;AAAtD,MADA,CA9BJ,EAkCE,MAAC,SAAD;AACE,MAAA,KAAK,EAAET,KADT;AAEE,MAAA,QAAQ,EAAG+B,KAAD,IAAW,KAAKG,iBAAL,CAAuBH,KAAvB,CAFvB;AAGE,MAAA,KAAK,EAAC,OAHR;AAIE,MAAA,IAAI,EAAC,OAJP;AAKE,MAAA,KAAK,EAAE5B,SALT;AAME,MAAA,EAAE,EAAC,OANL;AAOE,MAAA,QAAQ,EACN;AARJ,MAlCF,EA+CI;AAAK,MAAA,KAAK,EAAE;AAACsC,QAAAA,SAAS,EAAE;AAAZ;AAAZ,OACA,MAAC,WAAD;AAAa,MAAA,OAAO,EAAEjC,YAAtB;AAAoC,MAAA,OAAO,EAAE;AAA7C,MADA,CA/CJ,EAkDO,MAAC,SAAD;AACH,MAAA,KAAK,EAAEP,QADJ;AAEH,MAAA,QAAQ,EAAG8B,KAAD,IAAW,KAAKE,oBAAL,CAA0BF,KAA1B,CAFlB;AAGH,MAAA,KAAK,EAAC,UAHH;AAIH,MAAA,IAAI,EAAC,UAJF;AAKH,MAAA,KAAK,EAAEzB,iBALJ;AAMH,MAAA,EAAE,EAAC,UANA;AAOH,MAAA,QAAQ,EACN;AARC,MAlDP,EA+DG;AAAK,MAAA,KAAK,EAAE;AAACmC,QAAAA,SAAS,EAAE;AAAZ;AAAZ,OACC,MAAC,WAAD;AAAa,MAAA,OAAO,EAAE9B,oBAAtB;AAA4C,MAAA,OAAO,EAAE;AAArD,MADD,CA/DH,EAkEE,MAAC,MAAD;AACA,MAAA,KAAK,EAAC,aADN;AAEA,MAAA,OAAO,EAAE,CACP;AAAC+B,QAAAA,KAAK,EAAE,QAAR;AAAkBX,QAAAA,KAAK,EAAE;AAAzB,OADO,EAEP;AAACW,QAAAA,KAAK,EAAE,aAAR;AAAuBX,QAAAA,KAAK,EAAE;AAA9B,OAFO,CAFT;AAMA,MAAA,EAAE,EAAC,MANH;AAOA,MAAA,QAAQ,EAAE,CAAC7B,YAAD,CAPV;AAQA,MAAA,QAAQ,EAAG6B,KAAD,IAAS,KAAKO,gBAAL,CAAsBP,KAAtB;AARnB,MAlEF,EA4EI;AAAK,MAAA,KAAK,EAAE;AAACU,QAAAA,SAAS,EAAE;AAAZ;AAAZ,OACA,MAAC,WAAD;AAAa,MAAA,OAAO,EAAE7B,gBAAtB;AAAwC,MAAA,OAAO,EAAE;AAAjD,MADA,CA5EJ,EAgFE,MAAC,MAAD;AAAQ,MAAA,MAAM;AAAd,iBAhFF,EAiFE,MAAC,IAAD;AAAM,MAAA,GAAG,EAAC;AAAV,8BAjFF,CADL,CADO,CADJ;AA2FC;;AAvL+C","sourcesContent":["import React from 'react';\r\nimport {Page,FormLayout,Form, Link,Button, InlineError ,Select, TextStyle, TextField, Layout,Thumbnail} from '@shopify/polaris';\r\nimport {CirclePlusMinor} from '@shopify/polaris-icons';\r\nimport {loadStripe} from '@stripe/stripe-js';\r\nimport CardForm from '../components/CardForm';\r\n\r\nexport default class Singup extends React.Component {\r\n    state = {\r\n      firstName:'',\r\n      lastName:'',\r\n        email:'',\r\n        password:'',\r\n        roleselected:'',\r\n        isInvalid:false,\r\n        firstNameisInvalid:'',\r\n        lastNameisInvalid:'',\r\n        isInvalidPassword:false,\r\n        role:'dropshipper',\r\n        errorMessage :'',\r\n        errorMessagefirstName:'',\r\n        errorMessagelastName:'',\r\n        errorMessagePassword:'',\r\n        errorMessageRole:''\r\n      };\r\n   \r\n      handleSubmit(_event){\r\n        const{email,password,roleselected}=this.state;\r\n        var user={email:email,password:password,roleselected:roleselected};\r\n     console.log(product)\r\n     fetch(\"https://aladdin-dropshipper-server.herokuapp.com/signup\", {\r\n       method: \"POST\",\r\n       headers: {\r\n         \"Content-Type\": \"application/json\",\r\n       },\r\n       body: JSON.stringify(user)\r\n     }).then(res=>res.json()).then((json) =>{ console.log(json)})\r\n          console.log(_event)  \r\n          this.setState({email:'',  password:'' })\r\n      }\r\n      \r\n      handleChoiceChange(value){\r\n        console.log(value)\r\n        this.setState({dropshipper:value})\r\n      }\r\n      handlePasswordChange(value){\r\n        console.log(value)\r\n        this.setState({password:value})\r\n      }\r\n      handleEmailChange(value){\r\n        if(value.length < 3){\r\n          this.setState({isInvalid:true})\r\n        }\r\n        if(value.length > 3){\r\n          this.setState({isInvalid:false})\r\n        }\r\n       let errorMessage = this.state.isInvalid\r\n    ? 'Enter 3 or more characters for product type is equal to'\r\n    : '';\r\n \r\n        console.log(value)\r\n        this.setState({email:value,errorMessage:errorMessage})\r\n    }\r\n    handlefirstNameChange(value){\r\n      if(value.length < 3){\r\n        this.setState({firstNameisInvalid:true})\r\n      }\r\n      if(value.length > 3){\r\n        this.setState({firstNameisInvalid:false})\r\n      }\r\n     let errorMessagefirstName = this.state.firstNameisInvalid\r\n  ? 'Enter 3 or more characters for product type is equal to'\r\n  : '';\r\n\r\n      console.log(value)\r\n      this.setState({firstName:value,errorMessagefirstName:errorMessagefirstName})\r\n  }\r\n  handlelastNameChange(value){\r\n    if(value.length < 3){\r\n      this.setState({lastNameisInvalid:true})\r\n    }\r\n    if(value.length > 3){\r\n      this.setState({lastNameisInvalid:false})\r\n    }\r\n   let errorMessage = this.state.lastNameisInvalid\r\n? 'Enter 3 or more characters for product type is equal to'\r\n: '';\r\n\r\n    console.log(value)\r\n    this.setState({lastName:value,errorMessagefirstName:errorMessage})\r\n}\r\n    handleRoleChange(value){\r\n      console.log(value)\r\n      this.setState({roleselected:value})\r\n    }\r\n       \r\n    render() {\r\n        const{name,email,password,roleselected,errorMessagefirstName,errorMessagelastName,errorMessage,errorMessagePassword,errorMessageRole,isInvalid,firstNameisInvalid,lastNameisInvalid,isInvalidPassword}=this.state;\r\n       \r\n    return (\r\n        <Page title=\"Signup\" separator>     \r\n <Form onSubmit={(_event)=>this.handleSubmit(_event)}>\r\n      <FormLayout>\r\n      <TextField\r\n          value={firstName}\r\n          onChange={(value) => this.handlefirstNameChange(value)}\r\n          label=\"FirstName\"\r\n          type=\"text\"\r\n          error={firstNameisInvalid}\r\n          id=\"name\"\r\n          helpText={\r\n            <span>\r\n              Enter your Full Name.\r\n            </span>\r\n          }\r\n        />\r\n         <div style={{marginTop: '4px'}}>\r\n          <InlineError message={errorMessagelastName} fieldID={'firstname'} />\r\n        </div>\r\n        <TextField\r\n          value={lastName}\r\n          onChange={(value) => this.handlefirstNameChange(value)}\r\n          label=\"FirstName\"\r\n          type=\"text\"\r\n          error={lastNameisInvalid}\r\n          id=\"name\"\r\n          helpText={\r\n            <span>\r\n              Enter your Full Name.\r\n            </span>\r\n          }\r\n        />\r\n          <div style={{marginTop: '4px'}}>\r\n          <InlineError message={errorMessagefirstName} fieldID={'lasttname'} />\r\n        </div>\r\n     \r\n        <TextField\r\n          value={email}\r\n          onChange={(value) => this.handleEmailChange(value)}\r\n          label=\"Email\"\r\n          type=\"email\"\r\n          error={isInvalid}\r\n          id=\"email\"\r\n          helpText={\r\n            <span>\r\n              Enter your email Address.\r\n            </span>\r\n          }\r\n        />\r\n          <div style={{marginTop: '4px'}}>\r\n          <InlineError message={errorMessage} fieldID={'email'} />\r\n        </div>\r\n             <TextField\r\n          value={password}\r\n          onChange={(value) => this.handlePasswordChange(value)}\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          error={isInvalidPassword}\r\n          id=\"password\"\r\n          helpText={\r\n            <span>\r\n              Enter your email Password.\r\n            </span>\r\n          }\r\n        />\r\n         <div style={{marginTop: '4px'}}>\r\n          <InlineError message={errorMessagePassword} fieldID={'password'} />\r\n        </div>\r\n        <Select\r\n        label=\"Select Role\"\r\n        options={[\r\n          {label: 'Seller', value: 'seller'},\r\n          {label: 'DropShipper', value: 'dropShipper'},\r\n        ]}\r\n        id=\"role\"\r\n        selected={[roleselected]}\r\n        onChange={(value)=>this.handleRoleChange(value)}\r\n      />\r\n          <div style={{marginTop: '4px'}}>\r\n          <InlineError message={errorMessageRole} fieldID={'role'} />\r\n        </div>\r\n\r\n        <Button submit>Sign In</Button>\r\n        <Link url=\"/index\">Already Resgistered?</Link>\r\n           </FormLayout>\r\n    </Form>\r\n        </Page>\r\n\r\n    );\r\n\r\n    }\r\n    \r\n}"]},"metadata":{},"sourceType":"module"}