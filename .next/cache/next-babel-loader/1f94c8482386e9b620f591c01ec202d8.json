{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { Page, Spinner, Filters, Card, Button, ResourceItem, ResourceList, TextStyle, TextField, Layout, Select, Thumbnail } from '@shopify/polaris';\nimport { CirclePlusMinor } from '@shopify/polaris-icons';\n\nconst axios = require('axios');\n\nconst store = require('store-js');\n\nconst stripHtml = require('string-strip-html');\n\nvar product = {\n  title: \"\"\n};\nimport Cookies from 'js-cookie';\nconst accessToken = Cookies.get(\"accessToken\");\nexport default class ResourceListWithProducts extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      selectedItems: [],\n      products: [],\n      queryValue: '',\n      sortValue: '',\n      typeselected: '',\n      userRole: store.get('userRole'),\n      showspinner: false,\n      dropshippershop: Cookies.get(\"shopOrigin\")\n    });\n  }\n\n  componentDidMount() {\n    const userRole = this.state.userRole;\n\n    if (userRole == 'dropshipper') {\n      let url = \"https://aladdin-dropshipper-server.herokuapp.com/products\";\n      axios.post(url).then(response => {\n        console.log(response.data); // store.set('user',response.data)\n\n        this.setState({\n          products: response.data\n        }); //redirect.dispatch(Redirect.Action.APP,'/')      \n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  }\n\n  renderItem(item) {\n    const body_html = stripHtml(item.body_html);\n    const product_shop = item.shop;\n    const {\n      id,\n      url,\n      title,\n      avatarSource,\n      shop\n    } = item;\n\n    const media = __jsx(Thumbnail, {\n      product: true,\n      size: \"large\",\n      name: name,\n      source: avatarSource\n    });\n\n    let button;\n\n    if (shop == product_shop) {\n      button = __jsx(Button, {\n        onClick: () => alert(\"You can not import your product\")\n      }, \"Your Product\");\n    } else {\n      button = __jsx(Button, {\n        onClick: () => this.addproduct(item),\n        icon: CirclePlusMinor\n      }, \"Add a product\");\n    }\n\n    return __jsx(ResourceItem, {\n      id: id,\n      media: media,\n      accessibilityLabel: `View details for ${title}`\n    }, __jsx(\"h3\", null, __jsx(TextStyle, {\n      variation: \"strong\"\n    }, title)), __jsx(\"div\", null, __jsx(\"p\", null, body_html)), button);\n  }\n\n  onSelectionChange(items) {\n    const idsFromResources = items.map(item => item);\n    this.setState({\n      selectedItems: idsFromResources\n    });\n  }\n\n  onSortChange(selected) {\n    this.setState({\n      SortValue: selected\n    });\n    console.log(`Sort option changed to ${selected}.`);\n  }\n\n  handleQueryValueChange(value) {\n    this.setState({\n      queryValue: value\n    });\n    console.log('handleQueryValueChange' + value);\n    console.log(accessToken);\n  }\n\n  handleQueryValueRemove(value) {\n    this.setState({\n      queryValue: null\n    });\n    console.log('handleQueryValueRemove' + value);\n  }\n\n  addproduct(item) {\n    const {\n      title,\n      product_type,\n      body_html,\n      variants,\n      shop\n    } = item;\n    const vendor = \"dropshipper\";\n    const product = {\n      \"title\": title,\n      \"body_html\": body_html,\n      \"vendor\": vendor,\n      \"product_type\": product_type,\n      \"variants\": variants\n    };\n    const url = \"http://localhost:5000/addto_shop\";\n    const dspshop = Cookies.get(\"shopOrigin\");\n    axios.post(url, {\n      \"product\": product,\n      \"dropshipper_shop\": dspshop,\n      \"seller_shop\": shop\n    }).then(response => {\n      console.log(\"response.data\");\n      console.log(response.data);\n    }).catch(function (error) {\n      console.log(\"error\");\n      console.log(error);\n    });\n  }\n\n  render() {\n    const {\n      selectedItems,\n      queryValue,\n      sortValue,\n      typeselected,\n      products,\n      showspinner\n    } = this.state;\n    const options = [{\n      label: 'Today',\n      value: 'today'\n    }, {\n      label: 'Yesterday',\n      value: 'yesterday'\n    }, {\n      label: 'Last 7 days',\n      value: 'lastWeek'\n    }];\n    const filters = [{\n      key: 'taggedWith',\n      label: 'Tagged with',\n      filter: __jsx(Select, {\n        label: \"Date range\",\n        options: options,\n        onChange: () => handleSelectChange(),\n        value: typeselected\n      }),\n      shortcut: true\n    }];\n\n    const filterControl = __jsx(Filters, {\n      queryValue: queryValue,\n      filters: filters,\n      onQueryChange: value => this.handleQueryValueChange(value),\n      onQueryClear: value => this.handleQueryValueRemove(value)\n    }, __jsx(\"div\", {\n      style: {\n        paddingLeft: '8px'\n      }\n    }, __jsx(Button, {\n      onClick: () => console.log('New filter saved')\n    }, \"Save\")));\n\n    return __jsx(Page, null, __jsx(Card, null, __jsx(ResourceList, {\n      resourceName: {\n        singular: 'product',\n        plural: 'products'\n      },\n      items: products,\n      renderItem: item => this.renderItem(item),\n      selectedItems: selectedItems,\n      onSelectionChange: items => this.onSelectionChange(items),\n      promotedBulkActions: [{\n        content: 'Import Products',\n        onAction: () => console.log('Todo: implement bulk edit')\n      }],\n      sortOptions: [{\n        label: 'Newest update',\n        value: 'DATE_MODIFIED_DESC'\n      }, {\n        label: 'Oldest update',\n        value: 'DATE_MODIFIED_ASC'\n      }],\n      onSortChange: selected => this.onSortChange(selected),\n      filterControl: filterControl\n    })));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/kuldeep/Downloads/aladdin-dropshiper-local/pages/search.js"],"names":["React","Page","Spinner","Filters","Card","Button","ResourceItem","ResourceList","TextStyle","TextField","Layout","Select","Thumbnail","CirclePlusMinor","axios","require","store","stripHtml","product","title","Cookies","accessToken","get","ResourceListWithProducts","Component","selectedItems","products","queryValue","sortValue","typeselected","userRole","showspinner","dropshippershop","componentDidMount","state","url","post","then","response","console","log","data","setState","catch","error","renderItem","item","body_html","product_shop","shop","id","avatarSource","media","name","button","alert","addproduct","onSelectionChange","items","idsFromResources","map","onSortChange","selected","SortValue","handleQueryValueChange","value","handleQueryValueRemove","product_type","variants","vendor","dspshop","render","options","label","filters","key","filter","handleSelectChange","shortcut","filterControl","paddingLeft","singular","plural","content","onAction"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Page,Spinner,Filters, Card,Button, ResourceItem, ResourceList, TextStyle, TextField, Layout, Select, Thumbnail} from '@shopify/polaris';\nimport {CirclePlusMinor} from '@shopify/polaris-icons';\nconst axios =require('axios');\nconst store= require('store-js')\nconst stripHtml =require('string-strip-html');\nvar product={title:\"\"};\nimport Cookies from 'js-cookie';\nconst accessToken=Cookies.get(\"accessToken\");\nexport default class ResourceListWithProducts extends React.Component {\n  state = {\n    selectedItems: [],\n    products:[],\n    queryValue:'',\n    sortValue:'',\n    typeselected:'',\n    userRole:store.get('userRole'),\n    showspinner:false,\n    dropshippershop:Cookies.get(\"shopOrigin\")\n  };\n  componentDidMount() {\n    const userRole=this.state.userRole;\n    if(userRole=='dropshipper'){\n    let url=\"https://aladdin-dropshipper-server.herokuapp.com/products\";\n \n    axios.post(url).then( (response)=>{ \n      console.log(response.data )\n     // store.set('user',response.data)\n      this.setState({products:response.data});\n        //redirect.dispatch(Redirect.Action.APP,'/')      \n    } ).catch(function (error) {\n      console.log(error);\n    })\n  }\n }\n  renderItem(item) {\n    const body_html=stripHtml( item.body_html);\n    const product_shop=item.shop;\n    const {id, url, title,avatarSource,shop} = item;\n    const media = <Thumbnail product size=\"large\" name={name} source={avatarSource} />;\n    let button;\n\n    if(shop==product_shop){\n      button= <Button  onClick={()=>alert(\"You can not import your product\")}\n      >Your Product</Button> ;\n           \n    }else{\n      button= <Button  onClick={()=>this.addproduct(item)}\n      icon={CirclePlusMinor}>Add a product</Button> ;\n     \n    }\n    return (\n      \n      <ResourceItem\n      \n        id={id}\n       \n        media={media}\n        accessibilityLabel={`View details for ${title}`}\n      >\n        <h3>\n          <TextStyle variation=\"strong\">{title}</TextStyle>\n        </h3>\n        <div><p>{body_html}</p></div>\n          {button}\n        </ResourceItem> \n    );\n  }\n  onSelectionChange(items){\n    const idsFromResources = items.map((item) => item);       \n    this.setState({ selectedItems: idsFromResources });\n  }\n  onSortChange(selected){\n      this.setState({ SortValue: selected });\n      console.log(`Sort option changed to ${selected}.`);  \n\n  }\n  handleQueryValueChange(value){\n    this.setState({queryValue:value})\n    console.log('handleQueryValueChange'+value)\n    console.log(accessToken);\n  }\n  handleQueryValueRemove(value){\n    this.setState({queryValue:null})\n    console.log('handleQueryValueRemove'+value)\n  }\n  addproduct(item){\n   const{title,product_type,body_html,variants,shop}=item;\n  const vendor=\"dropshipper\"\n  const product={\n    \"title\": title,\n      \"body_html\":body_html,\n      \"vendor\": vendor,\n      \"product_type\": product_type,\n      \"variants\":variants\n    }\n  \nconst url=\"http://localhost:5000/addto_shop\";\nconst dspshop=Cookies.get(\"shopOrigin\")\naxios.post(url,{\"product\":product,\"dropshipper_shop\":dspshop,\"seller_shop\":shop}).then( (response)=>{ \n console.log(\"response.data\") \n console.log(response.data)        \n} ).catch(function (error) {\n  console.log(\"error\");\n  console.log(error);\n})\n  \n  }\n  render() {\n    const {\n      selectedItems,\n      queryValue,\n      sortValue,\n      typeselected,\n      products,\n      showspinner\n    }=this.state;\n    const options = [\n      {label: 'Today', value: 'today'},\n      {label: 'Yesterday', value: 'yesterday'},\n      {label: 'Last 7 days', value: 'lastWeek'},\n    ];\n    const filters = [\n      {\n        key: 'taggedWith',\n        label: 'Tagged with',\n        filter: (\n          <Select\n          label=\"Date range\"\n          options={options}\n          onChange={()=>handleSelectChange()}\n          value={typeselected}\n        />\n        ),\n        shortcut: true,\n      }\n    ];\n   \n    const filterControl = (\n      <Filters\n        queryValue={queryValue}\n        filters={filters}   \n        onQueryChange={(value)=>this.handleQueryValueChange(value)}\n        onQueryClear={(value)=>this.handleQueryValueRemove(value)}\n      >\n        <div style={{paddingLeft: '8px'}}>\n          <Button onClick={() => console.log('New filter saved')}>Save</Button>\n        </div>\n      </Filters>\n    );\n  return (\n    <Page>\n       \n    <Card>\n   \n      <ResourceList\n        resourceName={{\n          singular: 'product',\n          plural: 'products',\n        }}\n        items={products}\n        renderItem={(item)=>this.renderItem(item)}\n        selectedItems={selectedItems}\n        onSelectionChange={(items)=>this.onSelectionChange(items)}\n        promotedBulkActions={ [\n          {\n            content: 'Import Products',\n            onAction: () => console.log('Todo: implement bulk edit'),\n          },\n        ]}\n       \n        sortOptions={[\n          {label: 'Newest update', value: 'DATE_MODIFIED_DESC'},\n          {label: 'Oldest update', value: 'DATE_MODIFIED_ASC'},\n        ]}\n        onSortChange={(selected) =>this.onSortChange(selected)}\n        filterControl={filterControl}\n        \n      />\n  \n    </Card>\n    </Page>\n  );\n\n \n}\n\n}\n"]},"metadata":{},"sourceType":"module"}