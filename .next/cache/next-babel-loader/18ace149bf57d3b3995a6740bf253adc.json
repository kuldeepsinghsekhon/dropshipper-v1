{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { Page, Avatar, Filters, Card, Button, ResourceItem, ResourceList, TextStyle, TextField, Layout, Select, Thumbnail } from '@shopify/polaris';\nimport { CirclePlusMinor } from '@shopify/polaris-icons';\n\nvar axios = require('axios');\n\nvar store = require('store-js');\n\nvar stripHtml = require('string-strip-html');\n\nvar product = {\n  title: \"\"\n};\nimport Cookies from 'js-cookie';\nvar accessToken = Cookies.get(\"accessToken\");\n\nvar ResourceListWithProducts = /*#__PURE__*/function (_React$Component) {\n  _inherits(ResourceListWithProducts, _React$Component);\n\n  var _super = _createSuper(ResourceListWithProducts);\n\n  function ResourceListWithProducts() {\n    var _this;\n\n    _classCallCheck(this, ResourceListWithProducts);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      selectedItems: [],\n      products: [],\n      queryValue: '',\n      sortValue: '',\n      typeselected: '',\n      userRole: store.get('userRole')\n    });\n\n    return _this;\n  }\n\n  _createClass(ResourceListWithProducts, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var userRole = this.state.userRole;\n\n      if (userRole == 'dropshipper') {\n        var url = \"https://aladdin-dropshipper-server.herokuapp.com/products\";\n        axios.post(url).then(function (response) {\n          console.log(response.data); // store.set('user',response.data)\n\n          _this2.setState({\n            products: response.data\n          }); //redirect.dispatch(Redirect.Action.APP,'/')      \n\n        })[\"catch\"](function (error) {\n          console.log(error);\n        });\n      }\n    }\n  }, {\n    key: \"renderItem\",\n    value: function renderItem(item) {\n      var _this3 = this;\n\n      var body_html = stripHtml(item.body_html);\n      var id = item.id,\n          url = item.url,\n          title = item.title,\n          avatarSource = item.avatarSource;\n\n      var media = __jsx(Thumbnail, {\n        product: true,\n        size: \"large\",\n        name: name,\n        source: avatarSource\n      });\n\n      return __jsx(ResourceItem, {\n        id: id,\n        media: media,\n        accessibilityLabel: \"View details for \".concat(title)\n      }, __jsx(\"h3\", null, __jsx(TextStyle, {\n        variation: \"strong\"\n      }, title)), __jsx(\"div\", null, __jsx(\"p\", null, body_html)), __jsx(Button, {\n        onClick: function onClick() {\n          return _this3.addproduct(item);\n        },\n        icon: CirclePlusMinor\n      }, \"Add a product\"));\n    }\n  }, {\n    key: \"onSelectionChange\",\n    value: function onSelectionChange(items) {\n      var idsFromResources = items.map(function (item) {\n        return item;\n      });\n      this.setState({\n        selectedItems: idsFromResources\n      });\n    }\n  }, {\n    key: \"onSortChange\",\n    value: function onSortChange(selected) {\n      this.setState({\n        SortValue: selected\n      });\n      console.log(\"Sort option changed to \".concat(selected, \".\"));\n    }\n  }, {\n    key: \"handleQueryValueChange\",\n    value: function handleQueryValueChange(value) {\n      this.setState({\n        queryValue: value\n      });\n      console.log('handleQueryValueChange' + value);\n      console.log(accessToken);\n    }\n  }, {\n    key: \"handleQueryValueRemove\",\n    value: function handleQueryValueRemove(value) {\n      this.setState({\n        queryValue: null\n      });\n      console.log('handleQueryValueRemove' + value);\n    }\n  }, {\n    key: \"addproduct\",\n    value: function addproduct(item) {\n      console.log(item);\n      var shop = \"techardik.myshopify.com\";\n      var url = \"https://techardik.myshopify.com/admin/api/2020-04/products.json\";\n      axios.post(url, {\n        headers: {\n          \"X-Shopify-Access-Token\": \"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\"\n        }\n      }, item).then(function (response) {\n        //const ids =response.data.map((product) => product.shopifyProductId);\n        res.send(response.data);\n      })[\"catch\"](function (error) {\n        console.log(error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var _this$state = this.state,\n          selectedItems = _this$state.selectedItems,\n          queryValue = _this$state.queryValue,\n          sortValue = _this$state.sortValue,\n          typeselected = _this$state.typeselected,\n          products = _this$state.products;\n      var options = [{\n        label: 'Today',\n        value: 'today'\n      }, {\n        label: 'Yesterday',\n        value: 'yesterday'\n      }, {\n        label: 'Last 7 days',\n        value: 'lastWeek'\n      }];\n      var filters = [{\n        key: 'taggedWith',\n        label: 'Tagged with',\n        filter: __jsx(Select, {\n          label: \"Date range\",\n          options: options,\n          onChange: function onChange() {\n            return handleSelectChange();\n          },\n          value: typeselected\n        }),\n        shortcut: true\n      }];\n\n      var filterControl = __jsx(Filters, {\n        queryValue: queryValue,\n        filters: filters,\n        onQueryChange: function onQueryChange(value) {\n          return _this4.handleQueryValueChange(value);\n        },\n        onQueryClear: function onQueryClear(value) {\n          return _this4.handleQueryValueRemove(value);\n        }\n      }, __jsx(\"div\", {\n        style: {\n          paddingLeft: '8px'\n        }\n      }, __jsx(Button, {\n        onClick: function onClick() {\n          return console.log('New filter saved');\n        }\n      }, \"Save\")));\n\n      return __jsx(Page, null, __jsx(Card, null, __jsx(ResourceList, {\n        resourceName: {\n          singular: 'product',\n          plural: 'products'\n        },\n        items: products,\n        renderItem: function renderItem(item) {\n          return _this4.renderItem(item);\n        },\n        selectedItems: selectedItems,\n        onSelectionChange: function onSelectionChange(items) {\n          return _this4.onSelectionChange(items);\n        },\n        promotedBulkActions: [{\n          content: 'Import Products',\n          onAction: function onAction() {\n            return console.log('Todo: implement bulk edit');\n          }\n        }],\n        sortOptions: [{\n          label: 'Newest update',\n          value: 'DATE_MODIFIED_DESC'\n        }, {\n          label: 'Oldest update',\n          value: 'DATE_MODIFIED_ASC'\n        }],\n        onSortChange: function onSortChange(selected) {\n          return _this4.onSortChange(selected);\n        },\n        filterControl: filterControl\n      })));\n    }\n  }]);\n\n  return ResourceListWithProducts;\n}(React.Component);\n\nexport { ResourceListWithProducts as default };","map":{"version":3,"sources":["C:/Users/kuldeep/Downloads/aladdin-dropshiper-local/pages/search.js"],"names":["React","Page","Avatar","Filters","Card","Button","ResourceItem","ResourceList","TextStyle","TextField","Layout","Select","Thumbnail","CirclePlusMinor","axios","require","store","stripHtml","product","title","Cookies","accessToken","get","ResourceListWithProducts","selectedItems","products","queryValue","sortValue","typeselected","userRole","state","url","post","then","response","console","log","data","setState","error","item","body_html","id","avatarSource","media","name","addproduct","items","idsFromResources","map","selected","SortValue","value","shop","headers","res","send","options","label","filters","key","filter","handleSelectChange","shortcut","filterControl","handleQueryValueChange","handleQueryValueRemove","paddingLeft","singular","plural","renderItem","onSelectionChange","content","onAction","onSortChange","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Page,Avatar,Filters, Card,Button, ResourceItem, ResourceList, TextStyle, TextField, Layout, Select, Thumbnail} from '@shopify/polaris';\nimport {CirclePlusMinor} from '@shopify/polaris-icons';\nconst axios =require('axios');\nconst store= require('store-js')\nconst stripHtml =require('string-strip-html');\nvar product={title:\"\"};\nimport Cookies from 'js-cookie';\nconst accessToken=Cookies.get(\"accessToken\");\nexport default class ResourceListWithProducts extends React.Component {\n  state = {\n    selectedItems: [],\n    products:[],\n    queryValue:'',\n    sortValue:'',\n    typeselected:'',\n    userRole:store.get('userRole')\n  };\n  componentDidMount() {\n    const userRole=this.state.userRole;\n    if(userRole=='dropshipper'){\n    let url=\"https://aladdin-dropshipper-server.herokuapp.com/products\";\n \n    axios.post(url).then( (response)=>{ \n      console.log(response.data )\n     // store.set('user',response.data)\n      this.setState({products:response.data});\n        //redirect.dispatch(Redirect.Action.APP,'/')      \n    } ).catch(function (error) {\n      console.log(error);\n    })\n  }\n }\n  renderItem(item) {\n    const body_html=stripHtml( item.body_html);\n    const {id, url, title,avatarSource} = item;\n    const media = <Thumbnail product size=\"large\" name={name} source={avatarSource} />;\n    \n    return (\n      \n      <ResourceItem\n      \n        id={id}\n       \n        media={media}\n        accessibilityLabel={`View details for ${title}`}\n      >\n        <h3>\n          <TextStyle variation=\"strong\">{title}</TextStyle>\n        </h3>\n        <div><p>{body_html}</p></div>\n        <Button  onClick={()=>this.addproduct(item)}\n icon={CirclePlusMinor}>Add a product</Button>\n      </ResourceItem>\n      \n    );\n  }\n  onSelectionChange(items){\n    const idsFromResources = items.map((item) => item);       \n    this.setState({ selectedItems: idsFromResources });\n  }\n  onSortChange(selected){\n      this.setState({ SortValue: selected });\n      console.log(`Sort option changed to ${selected}.`);  \n\n  }\n  handleQueryValueChange(value){\n    this.setState({queryValue:value})\n    console.log('handleQueryValueChange'+value)\n    console.log(accessToken);\n  }\n  handleQueryValueRemove(value){\n    this.setState({queryValue:null})\n    console.log('handleQueryValueRemove'+value)\n  }\n  addproduct(item){\n    console.log(item)\n    let shop=\"techardik.myshopify.com\"\nconst url=\"https://techardik.myshopify.com/admin/api/2020-04/products.json\";\naxios.post(url,{headers:{\n  \"X-Shopify-Access-Token\": \"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\"\n}},item).then( (response)=>{ \n //const ids =response.data.map((product) => product.shopifyProductId);\n res.send(response.data)        \n} ).catch(function (error) {\n  console.log(error);\n})\n  \n  }\n  render() {\n    const {\n      selectedItems,\n      queryValue,\n      sortValue,\n      typeselected,\n      products\n    }=this.state;\n    const options = [\n      {label: 'Today', value: 'today'},\n      {label: 'Yesterday', value: 'yesterday'},\n      {label: 'Last 7 days', value: 'lastWeek'},\n    ];\n    const filters = [\n      {\n        key: 'taggedWith',\n        label: 'Tagged with',\n        filter: (\n          <Select\n          label=\"Date range\"\n          options={options}\n          onChange={()=>handleSelectChange()}\n          value={typeselected}\n        />\n        ),\n        shortcut: true,\n      }\n    ];\n   \n    const filterControl = (\n      <Filters\n        queryValue={queryValue}\n        filters={filters}   \n        onQueryChange={(value)=>this.handleQueryValueChange(value)}\n        onQueryClear={(value)=>this.handleQueryValueRemove(value)}\n      >\n        <div style={{paddingLeft: '8px'}}>\n          <Button onClick={() => console.log('New filter saved')}>Save</Button>\n        </div>\n      </Filters>\n    );\n  return (\n    <Page>\n    <Card>\n    \n      <ResourceList\n        resourceName={{\n          singular: 'product',\n          plural: 'products',\n        }}\n        items={products}\n        renderItem={(item)=>this.renderItem(item)}\n        selectedItems={selectedItems}\n        onSelectionChange={(items)=>this.onSelectionChange(items)}\n        promotedBulkActions={ [\n          {\n            content: 'Import Products',\n            onAction: () => console.log('Todo: implement bulk edit'),\n          },\n        ]}\n       \n        sortOptions={[\n          {label: 'Newest update', value: 'DATE_MODIFIED_DESC'},\n          {label: 'Oldest update', value: 'DATE_MODIFIED_ASC'},\n        ]}\n        onSortChange={(selected) =>this.onSortChange(selected)}\n        filterControl={filterControl}\n        \n      />\n  \n    </Card>\n    </Page>\n  );\n\n \n}\n\n}\n"]},"metadata":{},"sourceType":"module"}