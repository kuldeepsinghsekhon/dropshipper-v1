{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { Page, FormLayout, Form, Link, Button, InlineError, Select, Card, TextField, Layout, Toast } from '@shopify/polaris';\nimport { CirclePlusMinor } from '@shopify/polaris-icons';\nimport { Redirect, Loading } from '@shopify/app-bridge/actions';\nimport { Context } from '@shopify/app-bridge-react'; //import {loadStripe} from '@stripe/stripe-js';\n//import CardForm from '../components/CardForm';\n\nimport store from 'store-js';\n\nvar axios = require('axios'); //const stripePromise = loadStripe(\"pk_test_TYooMQauvdEDq54NiTphI7jx\");\n\n\nvar Singin = /*#__PURE__*/function (_React$Component) {\n  _inherits(Singin, _React$Component);\n\n  var _super = _createSuper(Singin);\n\n  function Singin() {\n    var _this;\n\n    _classCallCheck(this, Singin);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      email: '',\n      password: '',\n      roleselected: '',\n      emailisInvalid: false,\n      isInvalidPassword: false,\n      isInvalidRole: false,\n      errorMessageEmail: '',\n      errorMessagePassword: '',\n      errorMessageRole: '',\n      successMessageactive: false\n    });\n\n    return _this;\n  }\n\n  _createClass(Singin, [{\n    key: \"toggleSuccessActive\",\n    value: function toggleSuccessActive() {\n      this.setState({\n        successMessageactive: !this.state.successMessageactive\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          email = _this$state.email,\n          password = _this$state.password,\n          roleselected = _this$state.roleselected; //  if(roleselected==''){\n      //   this.setState({ isInvalidRole:true})\n      //   return\n      //  }\n\n      var user = {\n        email: email,\n        password: password,\n        role: roleselected\n      };\n      var app = this.context;\n      var redirect = Redirect.create(app);\n      var loading = Loading.create(app);\n      loading.dispatch(Loading.Action.START); //console.log([user])\n\n      axios.post('https://aladdin-dropshipper-server.herokuapp.com/signin', {\n        email: email,\n        password: password,\n        role: roleselected\n      }).then(function (response) {\n        _this2.setState({\n          email: '',\n          password: ''\n        });\n\n        store.set('token', response.data.token);\n        store.set('firstName', response.data.firstName);\n        store.set('lastName', response.data.lastName);\n        store.set('email', response.data.firstName);\n        store.set('username', response.data.username);\n        store.set('id', response.data._id);\n        store.set('userRole', response.data.role);\n        var url = '/selling_products';\n\n        if (response.data.role == 'seller') {\n          url = '/selling_products';\n        } else if (response.data.role == 'dropshipper') {\n          url = '/search';\n        } else {\n          url = '/';\n        }\n\n        redirect.dispatch(Redirect.Action.APP, url); //this.toggleSuccessActive();\n      })[\"catch\"](function (error) {\n        console.log(error);\n      });\n    }\n  }, {\n    key: \"handlePasswordChange\",\n    value: function handlePasswordChange(value) {\n      if (value.length < 3) {\n        this.setState({\n          passwordisInvalid: true\n        });\n      }\n\n      if (value.length > 3) {\n        this.setState({\n          passwordisInvalid: false\n        });\n      }\n\n      var errorMessage = this.state.passwordisInvalid ? 'Enter 3 or more characters' : '';\n      console.log(value);\n      this.setState({\n        password: value,\n        errorMessagePassword: errorMessage\n      });\n    }\n  }, {\n    key: \"handleEmailChange\",\n    value: function handleEmailChange(value) {\n      if (value.length < 3) {\n        this.setState({\n          emailisInvalid: true\n        });\n      }\n\n      if (value.length > 3) {\n        this.setState({\n          emailisInvalid: false\n        });\n      }\n\n      var errorMessage = this.state.emailisInvalid ? 'Enter 3 or more characters ' : '';\n      console.log(value);\n      this.setState({\n        email: value,\n        errorMessageEmail: errorMessage\n      });\n    }\n  }, {\n    key: \"handleRoleChange\",\n    value: function handleRoleChange(value) {\n      console.log(value);\n      this.setState({\n        roleselected: value\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state2 = this.state,\n          email = _this$state2.email,\n          password = _this$state2.password,\n          roleselected = _this$state2.roleselected,\n          errorMessageEmail = _this$state2.errorMessageEmail,\n          errorMessagePassword = _this$state2.errorMessagePassword,\n          errorMessageRole = _this$state2.errorMessageRole,\n          isInvalidPassword = _this$state2.isInvalidPassword,\n          emailisInvalid = _this$state2.emailisInvalid,\n          successMessageactive = _this$state2.successMessageactive,\n          isInvalidRole = _this$state2.isInvalidRole;\n      var toastMarkup = successMessageactive ? __jsx(Toast, {\n        content: \" Successfully Signin\",\n        onDismiss: function onDismiss() {\n          return _this3.toggleSuccessActive();\n        }\n      }) : null;\n      return __jsx(Page, {\n        title: \"Signin\",\n        separator: true\n      }, toastMarkup, __jsx(Form, {\n        onSubmit: function onSubmit() {\n          return _this3.handleSubmit();\n        }\n      }, __jsx(FormLayout, null, __jsx(TextField, {\n        value: email,\n        onChange: function onChange(value) {\n          return _this3.handleEmailChange(value);\n        },\n        label: \"Email\",\n        type: \"email\",\n        error: emailisInvalid,\n        id: \"email\",\n        helpText: __jsx(\"span\", null, \"Enter your email Address.\")\n      }), __jsx(\"div\", {\n        style: {\n          marginTop: '4px'\n        }\n      }, __jsx(InlineError, {\n        message: errorMessageEmail,\n        fieldID: 'email'\n      })), __jsx(TextField, {\n        value: password,\n        onChange: function onChange(value) {\n          return _this3.handlePasswordChange(value);\n        },\n        label: \"Password\",\n        type: \"password\",\n        error: isInvalidPassword,\n        id: \"password\",\n        helpText: __jsx(\"span\", null, \"Enter your Password.\")\n      }), __jsx(\"div\", {\n        style: {\n          marginTop: '4px'\n        }\n      }, __jsx(InlineError, {\n        message: errorMessagePassword,\n        fieldID: 'password'\n      })), __jsx(Button, {\n        submit: true\n      }, \"Sign In\"), __jsx(Link, {\n        url: \"/signup\"\n      }, \"Not Resgistered?\"))));\n    }\n  }]);\n\n  return Singin;\n}(React.Component);\n\n_defineProperty(Singin, \"contextType\", Context);\n\nexport { Singin as default };","map":{"version":3,"sources":["C:/Users/kuldeep/Downloads/aladdin-dropshiper-local/pages/index.js"],"names":["React","Page","FormLayout","Form","Link","Button","InlineError","Select","Card","TextField","Layout","Toast","CirclePlusMinor","Redirect","Loading","Context","store","axios","require","Singin","email","password","roleselected","emailisInvalid","isInvalidPassword","isInvalidRole","errorMessageEmail","errorMessagePassword","errorMessageRole","successMessageactive","setState","state","user","role","app","context","redirect","create","loading","dispatch","Action","START","post","then","response","set","data","token","firstName","lastName","username","_id","url","APP","error","console","log","value","length","passwordisInvalid","errorMessage","toastMarkup","toggleSuccessActive","handleSubmit","handleEmailChange","marginTop","handlePasswordChange","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Page,FormLayout,Form, Link,Button, InlineError ,Select, Card, TextField, Layout,Toast} from '@shopify/polaris';\nimport {CirclePlusMinor} from '@shopify/polaris-icons';\nimport { Redirect,Loading } from '@shopify/app-bridge/actions';\nimport { Context } from '@shopify/app-bridge-react';\n//import {loadStripe} from '@stripe/stripe-js';\n//import CardForm from '../components/CardForm';\nimport store from 'store-js';\nconst axios = require('axios')\n//const stripePromise = loadStripe(\"pk_test_TYooMQauvdEDq54NiTphI7jx\");\nexport default class Singin extends React.Component {\n  static contextType = Context;\n  state = {  \n      email:'',\n      password:'',\n      roleselected:'',\n      emailisInvalid:false,\n      isInvalidPassword:false,\n      isInvalidRole:false,\n      errorMessageEmail:'',\n      errorMessagePassword:'',\n      errorMessageRole:'',\n      successMessageactive:false\n    };\n    toggleSuccessActive(){\n      this.setState({successMessageactive:!this.state.successMessageactive})\n   }\n    handleSubmit(){  \n      const{email,password,roleselected}=this.state;\n    //  if(roleselected==''){\n    //   this.setState({ isInvalidRole:true})\n    //   return\n    //  }\n      const user={email:email,password:password,role:roleselected};\n      const app = this.context;\n      const redirect = Redirect.create(app);\n      const loading = Loading.create(app);\n      loading.dispatch(Loading.Action.START);\n      //console.log([user])\n      axios.post('https://aladdin-dropshipper-server.herokuapp.com/signin', {email:email,password:password,role:roleselected} )\n      .then( (response)=>{\n       \n        this.setState({email:'',  password:'' })\n        store.set('token',response.data.token)\n        store.set('firstName',response.data.firstName)\n        store.set('lastName',response.data.lastName)\n        store.set('email',response.data.firstName)\n        store.set('username',response.data.username)\n        store.set('id',response.data._id)\n        store.set('userRole',response.data.role)\n         let url='/selling_products';\n         if(response.data.role=='seller'){\n          url='/selling_products';\n         }else if(response.data.role=='dropshipper'){\n          url='/search';\n         }else{\n           url='/';\n         }\n          redirect.dispatch( Redirect.Action.APP,url);\n          //this.toggleSuccessActive();\n      })\n      .catch(function (error) {\n        console.log(error);\n      });   \n     }\n\n    handlePasswordChange(value){\n      if(value.length < 3){\n        this.setState({passwordisInvalid:true})\n      }\n      if(value.length > 3){\n        this.setState({passwordisInvalid:false})\n      }\n     let errorMessage = this.state.passwordisInvalid\n  ? 'Enter 3 or more characters'\n  : '';\n\n      console.log(value)\n      this.setState({password:value,errorMessagePassword:errorMessage})\n    }\n    handleEmailChange(value){\n      if(value.length < 3){\n        this.setState({emailisInvalid:true})\n      }\n      if(value.length > 3){\n        this.setState({emailisInvalid:false})\n      }\n     let errorMessage = this.state.emailisInvalid\n  ? 'Enter 3 or more characters '\n  : '';\n\n      console.log(value)\n      this.setState({email:value,errorMessageEmail:errorMessage})\n  }\n     \n  handleRoleChange(value){\n    console.log(value)\n    this.setState({roleselected:value})\n  }\n    render() {\n      const{email,password,roleselected,errorMessageEmail,errorMessagePassword,errorMessageRole,isInvalidPassword,emailisInvalid,successMessageactive,isInvalidRole }=this.state;\n      const toastMarkup = successMessageactive ? (\n        <Toast content=\" Successfully Signin\" onDismiss={()=>this.toggleSuccessActive()} />\n      ) : null;\n    return (\n      <Page title=\"Signin\" separator>  \n      {toastMarkup}   \n<Form onSubmit={()=>this.handleSubmit()}>\n    <FormLayout>\n    \n   \n   \n      <TextField\n        value={email}\n        onChange={(value) => this.handleEmailChange(value)}\n        label=\"Email\"\n        type=\"email\"\n        error={emailisInvalid}\n        id=\"email\"\n        helpText={\n          <span>\n            Enter your email Address.\n          </span>\n        }\n      />\n        <div style={{marginTop: '4px'}}>\n        <InlineError message={errorMessageEmail} fieldID={'email'} />\n      </div>\n           <TextField\n        value={password}\n        onChange={(value) => this.handlePasswordChange(value)}\n        label=\"Password\"\n        type=\"password\"\n        error={isInvalidPassword}\n        id=\"password\"\n        helpText={\n          <span>\n            Enter your Password.\n          </span>\n        }\n      />\n       <div style={{marginTop: '4px'}}>\n        <InlineError message={errorMessagePassword} fieldID={'password'} />\n      </div>\n      {/* <Select\n      label=\"Select Role\"\n      options={[\n        {label: 'Select Role', value: ''},\n        {label: 'Seller', value: 'seller'},\n        {label: 'DropShipper', value: 'dropshipper'},\n      ]}\n      id=\"role\"\n      error={isInvalidRole}\n      selected={roleselected}\n      onChange={(value)=>this.handleRoleChange(value)}\n    /> \n        <div style={{marginTop: '4px'}}>\n        <InlineError message={'Select Role '} fieldID={'role'} />\n      </div>*/}\n\n      <Button submit>Sign In</Button>\n      <Link url=\"/signup\">Not Resgistered?</Link>\n         </FormLayout>\n  </Form>\n      </Page>\n    );\n\n    }\n    \n}"]},"metadata":{},"sourceType":"module"}