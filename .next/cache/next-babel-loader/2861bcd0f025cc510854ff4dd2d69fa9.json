{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { Page, FormLayout, Form, Card, Button, InlineError, ChoiceList, TextStyle, TextField, Layout, Select, Thumbnail } from '@shopify/polaris';\nimport { CirclePlusMinor } from '@shopify/polaris-icons';\nimport { Elements } from '@stripe/react-stripe-js';\nimport { loadStripe } from '@stripe/stripe-js';\nimport CardForm from '../components/CardForm';\nconst stripePromise = loadStripe(\"pk_test_TYooMQauvdEDq54NiTphI7jx\");\nexport default class Singin extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      email: '',\n      newsletter: '',\n      isInvalid: false,\n      role: 'dropshipper',\n      errorMessage: ''\n    });\n  }\n\n  handleSubmit(_event) {\n    console.log(_event);\n    this.setState({\n      email: '',\n      newsletter: false\n    });\n  }\n\n  handleChoiceChange(value) {\n    console.log(value);\n    this.setState({\n      dropshipper: value\n    });\n  }\n\n  handleNewsLetterChange(value) {\n    console.log(value);\n    this.setState({\n      newsletter: value\n    });\n  }\n\n  handleEmailChange(value) {\n    if (value.length < 3) {\n      this.setState({\n        isInvalid: true\n      });\n    }\n\n    errorMessage = this.state.isInvalid ? 'Enter 3 or more characters for product type is equal to' : '';\n    console.log(value);\n    this.setState({\n      email: value,\n      errorMessage: errorMessage\n    });\n  }\n\n  render() {\n    const {\n      newsletter,\n      email,\n      errorMessage,\n      isInvalid,\n      password,\n      selected\n    } = this.state;\n    return __jsx(Page, {\n      title: \"SignIn\",\n      separator: true\n    }, __jsx(Form, {\n      onSubmit: _event => this.handleSubmit(_event)\n    }, __jsx(FormLayout, null, __jsx(TextField, {\n      value: email,\n      onChange: value => this.handleEmailChange(value),\n      label: \"Email\",\n      type: \"email\",\n      error: \"Email is required\",\n      id: \"email\",\n      helpText: __jsx(\"span\", null, \"Enter your email Address.\")\n    }), __jsx(\"div\", {\n      style: {\n        marginTop: '4px'\n      }\n    }, __jsx(InlineError, {\n      message: errorMessage,\n      fieldID: email\n    })), __jsx(TextField, {\n      value: password,\n      onChange: value => this.handleNewsLetterChange(value),\n      label: \"Password\",\n      type: \"password\",\n      error: isInvalid,\n      helpText: __jsx(\"span\", null, \"Enter your email Password.\")\n    }), __jsx(ChoiceList, {\n      title: \"Gift card auto-expiration\",\n      choices: [{\n        label: 'Gift cards never expire',\n        value: 'no'\n      }, {\n        label: 'Gift cards expire',\n        value: 'yes'\n      }],\n      selected: [selected],\n      onChange: value => this.handleChoiceChange(value)\n    }), __jsx(Button, {\n      submit: true\n    }, \"Sign In\"))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/kuldeep/Downloads/aladdin-dropshiper-local/pages/index.js"],"names":["React","Page","FormLayout","Form","Card","Button","InlineError","ChoiceList","TextStyle","TextField","Layout","Select","Thumbnail","CirclePlusMinor","Elements","loadStripe","CardForm","stripePromise","Singin","Component","email","newsletter","isInvalid","role","errorMessage","handleSubmit","_event","console","log","setState","handleChoiceChange","value","dropshipper","handleNewsLetterChange","handleEmailChange","length","state","render","password","selected","marginTop","label"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,EAAaC,UAAb,EAAwBC,IAAxB,EAA8BC,IAA9B,EAAmCC,MAAnC,EAA2CC,WAA3C,EAAyDC,UAAzD,EAAqEC,SAArE,EAAgFC,SAAhF,EAA2FC,MAA3F,EAAmGC,MAAnG,EAA2GC,SAA3G,QAA2H,kBAA3H;AACA,SAAQC,eAAR,QAA8B,wBAA9B;AACA,SAAQC,QAAR,QAAuB,yBAAvB;AACA,SAAQC,UAAR,QAAyB,mBAAzB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,MAAMC,aAAa,GAAGF,UAAU,CAAC,kCAAD,CAAhC;AAEA,eAAe,MAAMG,MAAN,SAAqBlB,KAAK,CAACmB,SAA3B,CAAqC;AAAA;AAAA;;AAAA,mCACxC;AACJC,MAAAA,KAAK,EAAC,EADF;AAEJC,MAAAA,UAAU,EAAC,EAFP;AAGJC,MAAAA,SAAS,EAAC,KAHN;AAIJC,MAAAA,IAAI,EAAC,aAJD;AAKJC,MAAAA,YAAY,EAAE;AALV,KADwC;AAAA;;AAS9CC,EAAAA,YAAY,CAACC,MAAD,EAAQ;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AAEA,SAAKG,QAAL,CAAc;AAACT,MAAAA,KAAK,EAAC,EAAP;AAAYC,MAAAA,UAAU,EAAC;AAAvB,KAAd;AAEH;;AAEDS,EAAAA,kBAAkB,CAACC,KAAD,EAAO;AACvBJ,IAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACA,SAAKF,QAAL,CAAc;AAACG,MAAAA,WAAW,EAACD;AAAb,KAAd;AACD;;AACDE,EAAAA,sBAAsB,CAACF,KAAD,EAAO;AAC3BJ,IAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACA,SAAKF,QAAL,CAAc;AAACR,MAAAA,UAAU,EAACU;AAAZ,KAAd;AACD;;AACDG,EAAAA,iBAAiB,CAACH,KAAD,EAAO;AACtB,QAAGA,KAAK,CAACI,MAAN,GAAe,CAAlB,EAAoB;AAClB,WAAKN,QAAL,CAAc;AAACP,QAAAA,SAAS,EAAC;AAAX,OAAd;AACD;;AACDE,IAAAA,YAAY,GAAG,KAAKY,KAAL,CAAWd,SAAX,GACjB,yDADiB,GAEjB,EAFE;AAIAK,IAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACA,SAAKF,QAAL,CAAc;AAACT,MAAAA,KAAK,EAACW,KAAP;AAAaP,MAAAA,YAAY,EAACA;AAA1B,KAAd;AACH;;AAEDa,EAAAA,MAAM,GAAG;AACL,UAAK;AAAChB,MAAAA,UAAD;AAAYD,MAAAA,KAAZ;AAAkBI,MAAAA,YAAlB;AAA+BF,MAAAA,SAA/B;AAAyCgB,MAAAA,QAAzC;AAAkDC,MAAAA;AAAlD,QAA4D,KAAKH,KAAtE;AAEJ,WACI,MAAC,IAAD;AAAM,MAAA,KAAK,EAAC,QAAZ;AAAqB,MAAA,SAAS;AAA9B,OACP,MAAC,IAAD;AAAM,MAAA,QAAQ,EAAGV,MAAD,IAAU,KAAKD,YAAL,CAAkBC,MAAlB;AAA1B,OACK,MAAC,UAAD,QAGE,MAAC,SAAD;AACE,MAAA,KAAK,EAAEN,KADT;AAEE,MAAA,QAAQ,EAAGW,KAAD,IAAW,KAAKG,iBAAL,CAAuBH,KAAvB,CAFvB;AAGE,MAAA,KAAK,EAAC,OAHR;AAIE,MAAA,IAAI,EAAC,OAJP;AAKE,MAAA,KAAK,EAAC,mBALR;AAME,MAAA,EAAE,EAAC,OANL;AAOE,MAAA,QAAQ,EACN;AARJ,MAHF,EAgBI;AAAK,MAAA,KAAK,EAAE;AAACS,QAAAA,SAAS,EAAE;AAAZ;AAAZ,OACA,MAAC,WAAD;AAAa,MAAA,OAAO,EAAEhB,YAAtB;AAAoC,MAAA,OAAO,EAAEJ;AAA7C,MADA,CAhBJ,EAmBO,MAAC,SAAD;AACH,MAAA,KAAK,EAAEkB,QADJ;AAEH,MAAA,QAAQ,EAAGP,KAAD,IAAW,KAAKE,sBAAL,CAA4BF,KAA5B,CAFlB;AAGH,MAAA,KAAK,EAAC,UAHH;AAIH,MAAA,IAAI,EAAC,UAJF;AAKH,MAAA,KAAK,EAAET,SALJ;AAMH,MAAA,QAAQ,EACN;AAPC,MAnBP,EA+BE,MAAC,UAAD;AACA,MAAA,KAAK,EAAC,2BADN;AAEA,MAAA,OAAO,EAAE,CACP;AAACmB,QAAAA,KAAK,EAAE,yBAAR;AAAmCV,QAAAA,KAAK,EAAE;AAA1C,OADO,EAEP;AAACU,QAAAA,KAAK,EAAE,mBAAR;AAA6BV,QAAAA,KAAK,EAAE;AAApC,OAFO,CAFT;AAMA,MAAA,QAAQ,EAAE,CAACQ,QAAD,CANV;AAOA,MAAA,QAAQ,EAAGR,KAAD,IAAS,KAAKD,kBAAL,CAAwBC,KAAxB;AAPnB,MA/BF,EAyCE,MAAC,MAAD;AAAQ,MAAA,MAAM;AAAd,iBAzCF,CADL,CADO,CADJ;AAmDC;;AA1F+C","sourcesContent":["import React from 'react';\nimport {Page,FormLayout,Form, Card,Button, InlineError , ChoiceList, TextStyle, TextField, Layout, Select, Thumbnail} from '@shopify/polaris';\nimport {CirclePlusMinor} from '@shopify/polaris-icons';\nimport {Elements} from '@stripe/react-stripe-js';\nimport {loadStripe} from '@stripe/stripe-js';\nimport CardForm from '../components/CardForm';\nconst stripePromise = loadStripe(\"pk_test_TYooMQauvdEDq54NiTphI7jx\");\n\nexport default class Singin extends React.Component {\n    state = {\n        email:'',\n        newsletter:'',\n        isInvalid:false,\n        role:'dropshipper',\n        errorMessage :''\n      };\n   \n      handleSubmit(_event){\n          console.log(_event)\n          \n          this.setState({email:'',  newsletter:false })\n        \n      }\n      \n      handleChoiceChange(value){\n        console.log(value)\n        this.setState({dropshipper:value})\n      }\n      handleNewsLetterChange(value){\n        console.log(value)\n        this.setState({newsletter:value})\n      }\n      handleEmailChange(value){\n        if(value.length < 3){\n          this.setState({isInvalid:true})\n        }\n        errorMessage = this.state.isInvalid\n    ? 'Enter 3 or more characters for product type is equal to'\n    : '';\n \n        console.log(value)\n        this.setState({email:value,errorMessage:errorMessage})\n    }\n       \n    render() {\n        const{newsletter,email,errorMessage,isInvalid,password,selected}=this.state;\n       \n    return (\n        <Page title=\"SignIn\" separator>     \n <Form onSubmit={(_event)=>this.handleSubmit(_event)}>\n      <FormLayout>\n       \n     \n        <TextField\n          value={email}\n          onChange={(value) => this.handleEmailChange(value)}\n          label=\"Email\"\n          type=\"email\"\n          error=\"Email is required\"\n          id=\"email\"\n          helpText={\n            <span>\n              Enter your email Address.\n            </span>\n          }\n        />\n          <div style={{marginTop: '4px'}}>\n          <InlineError message={errorMessage} fieldID={email} />\n        </div>\n             <TextField\n          value={password}\n          onChange={(value) => this.handleNewsLetterChange(value)}\n          label=\"Password\"\n          type=\"password\"\n          error={isInvalid}\n          helpText={\n            <span>\n              Enter your email Password.\n            </span>\n          }\n        />\n        <ChoiceList\n        title=\"Gift card auto-expiration\"\n        choices={[\n          {label: 'Gift cards never expire', value: 'no'},\n          {label: 'Gift cards expire', value: 'yes'},\n        ]}\n        selected={[selected]}\n        onChange={(value)=>this.handleChoiceChange(value)}\n      />\n        \n        <Button submit>Sign In</Button>\n           </FormLayout>\n    </Form>\n        </Page>\n\n    );\n\n    }\n    \n}"]},"metadata":{},"sourceType":"module"}