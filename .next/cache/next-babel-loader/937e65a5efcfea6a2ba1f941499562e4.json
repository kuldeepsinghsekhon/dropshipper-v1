{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { Page, EmptyState, Avatar, Filters, Card, Button, ResourceItem, ResourceList, TextStyle, TextField, Layout, Select, Thumbnail } from '@shopify/polaris';\nimport { CirclePlusMinor } from '@shopify/polaris-icons';\n\nvar axios = require('axios');\n\nimport store from 'store-js';\n\nvar stripHtml = require('string-strip-html');\n\nvar product = {\n  title: \"\"\n};\n\nvar ResourceListWithProducts = /*#__PURE__*/function (_React$Component) {\n  _inherits(ResourceListWithProducts, _React$Component);\n\n  var _super = _createSuper(ResourceListWithProducts);\n\n  function ResourceListWithProducts() {\n    var _this;\n\n    _classCallCheck(this, ResourceListWithProducts);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      selectedItems: [],\n      products: [],\n      queryValue: '',\n      sortValue: '',\n      typeselected: '',\n      userRole: store.get('userRole')\n    });\n\n    return _this;\n  }\n\n  _createClass(ResourceListWithProducts, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var url = \"https://aladdin-dropshipper-server.herokuapp.com/products\";\n      axios.post(url).then(function (response) {\n        console.log(response.data); // store.set('user',response.data)\n\n        _this2.setState({\n          products: response.data\n        }); //redirect.dispatch(Redirect.Action.APP,'/')      \n\n      })[\"catch\"](function (error) {\n        console.log(error);\n      });\n    }\n  }, {\n    key: \"renderItem\",\n    value: function renderItem(item) {\n      var body_html = stripHtml(item.body_html);\n      var id = item.id,\n          url = item.url,\n          title = item.title,\n          avatarSource = item.avatarSource;\n\n      var media = __jsx(Thumbnail, {\n        product: true,\n        size: \"large\",\n        name: name,\n        source: avatarSource\n      });\n\n      return __jsx(ResourceItem, {\n        id: id,\n        media: media,\n        accessibilityLabel: \"View details for \".concat(title)\n      }, __jsx(\"h3\", null, __jsx(TextStyle, {\n        variation: \"strong\"\n      }, title)), __jsx(\"div\", null, __jsx(\"p\", null, body_html)), __jsx(Button, {\n        onClick: function onClick(e) {\n          e.preventDefault();\n          alert(id);\n        },\n        icon: CirclePlusMinor\n      }, \"Add a product\"));\n    }\n  }, {\n    key: \"onSelectionChange\",\n    value: function onSelectionChange(items) {\n      var idsFromResources = items.map(function (item) {\n        return item;\n      });\n      this.setState({\n        selectedItems: idsFromResources\n      });\n    }\n  }, {\n    key: \"onSortChange\",\n    value: function onSortChange(selected) {\n      this.setState({\n        SortValue: selected\n      });\n      console.log(\"Sort option changed to \".concat(selected, \".\"));\n    }\n  }, {\n    key: \"handleQueryValueChange\",\n    value: function handleQueryValueChange(value) {\n      this.setState({\n        queryValue: value\n      });\n      console.log('handleQueryValueChange' + value);\n    }\n  }, {\n    key: \"handleQueryValueRemove\",\n    value: function handleQueryValueRemove(value) {\n      this.setState({\n        queryValue: null\n      });\n      console.log('handleQueryValueRemove' + value);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          selectedItems = _this$state.selectedItems,\n          queryValue = _this$state.queryValue,\n          sortValue = _this$state.sortValue,\n          typeselected = _this$state.typeselected,\n          products = _this$state.products,\n          userRole = _this$state.userRole;\n      var options = [{\n        label: 'Today',\n        value: 'today'\n      }, {\n        label: 'Yesterday',\n        value: 'yesterday'\n      }, {\n        label: 'Last 7 days',\n        value: 'lastWeek'\n      }];\n      var filters = [{\n        key: 'taggedWith',\n        label: 'Tagged with',\n        filter: __jsx(Select, {\n          label: \"Date range\",\n          options: options,\n          onChange: function onChange() {\n            return handleSelectChange();\n          },\n          value: typeselected\n        }),\n        shortcut: true\n      }];\n\n      var filterControl = __jsx(Filters, {\n        queryValue: queryValue,\n        filters: filters,\n        onQueryChange: function onQueryChange(value) {\n          return _this3.handleQueryValueChange(value);\n        },\n        onQueryClear: function onQueryClear(value) {\n          return _this3.handleQueryValueRemove(value);\n        }\n      }, __jsx(\"div\", {\n        style: {\n          paddingLeft: '8px'\n        }\n      }, __jsx(Button, {\n        onClick: function onClick() {\n          return console.log('New filter saved');\n        }\n      }, \"Save\")));\n\n      if (userRole == 'dropshipper') {\n        return __jsx(Page, null, __jsx(Card, null, __jsx(ResourceList, {\n          resourceName: {\n            singular: 'product',\n            plural: 'products'\n          },\n          items: products,\n          renderItem: function renderItem(item) {\n            return _this3.renderItem(item);\n          },\n          selectedItems: selectedItems,\n          onSelectionChange: function onSelectionChange(items) {\n            return _this3.onSelectionChange(items);\n          },\n          promotedBulkActions: [{\n            content: 'Import Products',\n            onAction: function onAction() {\n              return console.log('Todo: implement bulk edit');\n            }\n          }],\n          sortOptions: [{\n            label: 'Newest update',\n            value: 'DATE_MODIFIED_DESC'\n          }, {\n            label: 'Oldest update',\n            value: 'DATE_MODIFIED_ASC'\n          }],\n          onSortChange: function onSortChange(selected) {\n            return _this3.onSortChange(selected);\n          },\n          filterControl: filterControl\n        })));\n      } else {\n        return __jsx(Page, null, __jsx(EmptyState, {\n          heading: \"Only Dropshipper Can Search Products\",\n          action: {\n            content: 'Become Dropshipper',\n            onAction: function onAction() {}\n          },\n          image: img\n        }));\n      }\n    }\n  }]);\n\n  return ResourceListWithProducts;\n}(React.Component);\n\nexport { ResourceListWithProducts as default };","map":{"version":3,"sources":["C:/Users/kuldeep/Downloads/aladdin-dropshiper-local/pages/search.js"],"names":["React","Page","EmptyState","Avatar","Filters","Card","Button","ResourceItem","ResourceList","TextStyle","TextField","Layout","Select","Thumbnail","CirclePlusMinor","axios","require","store","stripHtml","product","title","ResourceListWithProducts","selectedItems","products","queryValue","sortValue","typeselected","userRole","get","url","post","then","response","console","log","data","setState","error","item","body_html","id","avatarSource","media","name","e","preventDefault","alert","items","idsFromResources","map","selected","SortValue","value","state","options","label","filters","key","filter","handleSelectChange","shortcut","filterControl","handleQueryValueChange","handleQueryValueRemove","paddingLeft","singular","plural","renderItem","onSelectionChange","content","onAction","onSortChange","img","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Page,EmptyState,Avatar,Filters, Card,Button, ResourceItem, ResourceList, TextStyle, TextField, Layout, Select, Thumbnail} from '@shopify/polaris';\nimport {CirclePlusMinor} from '@shopify/polaris-icons';\nconst axios =require('axios');\nimport store from 'store-js';\nconst stripHtml =require('string-strip-html');\nvar product={title:\"\"};\n\nexport default class ResourceListWithProducts extends React.Component {\n  state = {\n    selectedItems: [],\n    products:[],\n    queryValue:'',\n    sortValue:'',\n    typeselected:'',\n    userRole:store.get('userRole')\n  };\n  componentDidMount() {\n    let url=\"https://aladdin-dropshipper-server.herokuapp.com/products\";\n   \n    axios.post(url).then( (response)=>{ \n      console.log(response.data )\n     // store.set('user',response.data)\n      this.setState({products:response.data});\n        //redirect.dispatch(Redirect.Action.APP,'/')      \n    } ).catch(function (error) {\n      console.log(error);\n    })\n }\n  renderItem(item) {\n    const body_html=stripHtml( item.body_html);\n    const {id, url, title,avatarSource} = item;\n    const media = <Thumbnail product size=\"large\" name={name} source={avatarSource} />;\n  \n    return (\n     \n   \n     \n      <ResourceItem\n      \n        id={id}\n       \n        media={media}\n        accessibilityLabel={`View details for ${title}`}\n      >\n        <h3>\n          <TextStyle variation=\"strong\">{title}</TextStyle>\n        </h3>\n        <div><p>{body_html}</p></div>\n        <Button  onClick={(e) =>{\n          e.preventDefault();\n          alert(id)}}\n icon={CirclePlusMinor}>Add a product</Button>\n      </ResourceItem>\n      \n    );\n  }\n  onSelectionChange(items){\n    const idsFromResources = items.map((item) => item);       \n    this.setState({ selectedItems: idsFromResources });\n  }\n  onSortChange(selected){\n      this.setState({ SortValue: selected });\n      console.log(`Sort option changed to ${selected}.`);  \n  }\n  handleQueryValueChange(value){\n    this.setState({queryValue:value})\n    console.log('handleQueryValueChange'+value)\n  }\n  handleQueryValueRemove(value){\n    this.setState({queryValue:null})\n    console.log('handleQueryValueRemove'+value)\n  }\n  render() {\n    const {\n      selectedItems,\n      queryValue,\n      sortValue,\n      typeselected,\n      products,\n      userRole\n    }=this.state;\n    const options = [\n      {label: 'Today', value: 'today'},\n      {label: 'Yesterday', value: 'yesterday'},\n      {label: 'Last 7 days', value: 'lastWeek'},\n    ];\n    const filters = [\n      {\n        key: 'taggedWith',\n        label: 'Tagged with',\n        filter: (\n          <Select\n          label=\"Date range\"\n          options={options}\n          onChange={()=>handleSelectChange()}\n          value={typeselected}\n        />\n        ),\n        shortcut: true,\n      }\n    ];\n   \n    const filterControl = (\n      <Filters\n        queryValue={queryValue}\n        filters={filters}   \n        onQueryChange={(value)=>this.handleQueryValueChange(value)}\n        onQueryClear={(value)=>this.handleQueryValueRemove(value)}\n      >\n        <div style={{paddingLeft: '8px'}}>\n          <Button onClick={() => console.log('New filter saved')}>Save</Button>\n        </div>\n      </Filters>\n    );\n    if(userRole=='dropshipper'){\n  return (\n    <Page>\n    <Card>\n    \n      <ResourceList\n        resourceName={{\n          singular: 'product',\n          plural: 'products',\n        }}\n        items={products}\n        renderItem={(item)=>this.renderItem(item)}\n        selectedItems={selectedItems}\n        onSelectionChange={(items)=>this.onSelectionChange(items)}\n        promotedBulkActions={ [\n          {\n            content: 'Import Products',\n            onAction: () => console.log('Todo: implement bulk edit'),\n          },\n        ]}\n       \n        sortOptions={[\n          {label: 'Newest update', value: 'DATE_MODIFIED_DESC'},\n          {label: 'Oldest update', value: 'DATE_MODIFIED_ASC'},\n        ]}\n        onSortChange={(selected) =>this.onSortChange(selected)}\n        filterControl={filterControl}\n        \n      />\n  \n    </Card>\n    </Page>\n  );\n  }else{\n    return (\n      \n      <Page>\n  <EmptyState\n          heading=\"Only Dropshipper Can Search Products\"\n          action={{\n            content: 'Become Dropshipper',\n            onAction: () =>{},\n          }}\n          image={img}\n        ></EmptyState>\n        </Page>\n    )}\n  \n \n}\n\n}\n"]},"metadata":{},"sourceType":"module"}