{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { Page, FormLayout, Form, Link, Button, InlineError, Select, Card, TextField, Layout, Thumbnail } from '@shopify/polaris';\nimport { CirclePlusMinor } from '@shopify/polaris-icons';\nimport { Elements } from '@stripe/react-stripe-js';\nimport { loadStripe } from '@stripe/stripe-js';\nimport CardForm from '../components/CardForm';\nimport store from 'store-js';\nconst stripePromise = loadStripe(\"pk_test_TYooMQauvdEDq54NiTphI7jx\");\nexport default class Singin extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      email: '',\n      password: '',\n      roleselected: '',\n      isInvalid: false,\n      isInvalidPassword: false,\n      role: 'dropshipper',\n      errorMessage: '',\n      errorMessagePassword: '',\n      errorMessageRole: ''\n    });\n  }\n\n  handleSubmit(_event) {\n    console.log(_event);\n    this.setState({\n      email: '',\n      password: ''\n    });\n    store.set('userRole', this.state.roleselected);\n  }\n\n  handleChoiceChange(value) {\n    console.log(value);\n    this.setState({\n      dropshipper: value\n    });\n  }\n\n  handlePasswordChange(value) {\n    console.log(value);\n    this.setState({\n      password: value\n    });\n  }\n\n  handleEmailChange(value) {\n    if (value.length < 3) {\n      this.setState({\n        isInvalid: true\n      });\n    }\n\n    if (value.length > 3) {\n      this.setState({\n        isInvalid: false\n      });\n    }\n\n    let errorMessage = this.state.isInvalid ? 'Enter 3 or more characters for product type is equal to' : '';\n    console.log(value);\n    this.setState({\n      email: value,\n      errorMessage: errorMessage\n    });\n  }\n\n  handleRoleChange(value) {\n    console.log(value);\n    this.setState({\n      roleselected: value\n    });\n  }\n\n  render() {\n    const {\n      email,\n      password,\n      roleselected,\n      errorMessage,\n      errorMessagePassword,\n      errorMessageRole,\n      isInvalid,\n      isInvalidPassword\n    } = this.state;\n    return __jsx(Page, {\n      title: \"SignIn\",\n      separator: true\n    }, __jsx(Layout, null, __jsx(Layout.AnnotatedSection, {\n      title: \"Account details\",\n      description: \"Jaded Pixel will use this as your account information.\"\n    }, __jsx(Card, {\n      sectioned: true\n    }, __jsx(Form, {\n      onSubmit: _event => this.handleSubmit(_event)\n    }, __jsx(FormLayout, null, __jsx(TextField, {\n      value: email,\n      onChange: value => this.handleEmailChange(value),\n      label: \"Email\",\n      type: \"email\",\n      error: isInvalid,\n      id: \"email\",\n      helpText: __jsx(\"span\", null, \"Enter your email Address.\")\n    }), __jsx(\"div\", {\n      style: {\n        marginTop: '4px'\n      }\n    }, __jsx(InlineError, {\n      message: errorMessage,\n      fieldID: email\n    })), __jsx(TextField, {\n      value: password,\n      onChange: value => this.handlePasswordChange(value),\n      label: \"Password\",\n      type: \"password\",\n      error: isInvalidPassword,\n      id: \"password\",\n      helpText: __jsx(\"span\", null, \"Enter your email Password.\")\n    }), __jsx(\"div\", {\n      style: {\n        marginTop: '4px'\n      }\n    }, __jsx(InlineError, {\n      message: errorMessagePassword,\n      fieldID: 'password'\n    })), __jsx(Select, {\n      label: \"Select Role\",\n      options: [{\n        label: 'Seller',\n        value: 'seller'\n      }, {\n        label: 'DropShipper',\n        value: 'dropshipper'\n      }],\n      id: \"role\",\n      selected: [roleselected],\n      onChange: value => this.handleRoleChange(value)\n    }), __jsx(\"div\", {\n      style: {\n        marginTop: '4px'\n      }\n    }, __jsx(InlineError, {\n      message: errorMessageRole,\n      fieldID: 'role'\n    })), __jsx(Button, {\n      submit: true\n    }, \"Sign In\"), __jsx(Link, {\n      url: \"/signup\"\n    }, \"Not Resgistered?\")))))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/kuldeep/Downloads/aladdin-dropshiper-local/pages/index.js"],"names":["React","Page","FormLayout","Form","Link","Button","InlineError","Select","Card","TextField","Layout","Thumbnail","CirclePlusMinor","Elements","loadStripe","CardForm","store","stripePromise","Singin","Component","email","password","roleselected","isInvalid","isInvalidPassword","role","errorMessage","errorMessagePassword","errorMessageRole","handleSubmit","_event","console","log","setState","set","state","handleChoiceChange","value","dropshipper","handlePasswordChange","handleEmailChange","length","handleRoleChange","render","marginTop","label"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Page,FormLayout,Form, Link,Button, InlineError ,Select, Card, TextField, Layout,Thumbnail} from '@shopify/polaris';\nimport {CirclePlusMinor} from '@shopify/polaris-icons';\nimport {Elements} from '@stripe/react-stripe-js';\nimport {loadStripe} from '@stripe/stripe-js';\nimport CardForm from '../components/CardForm';\nimport store from 'store-js';\nconst stripePromise = loadStripe(\"pk_test_TYooMQauvdEDq54NiTphI7jx\");\n\nexport default class Singin extends React.Component {\n    state = {\n        email:'',\n        password:'',\n        roleselected:'',\n        isInvalid:false,\n        isInvalidPassword:false,\n        role:'dropshipper',\n        errorMessage :'',\n        errorMessagePassword:'',\n        errorMessageRole:''\n      };\n   \n      handleSubmit(_event){\n          console.log(_event)  \n          this.setState({email:'',  password:'' })\n          store.set('userRole', this.state.roleselected);\n      }\n      \n      handleChoiceChange(value){\n        console.log(value)\n        this.setState({dropshipper:value})\n      }\n      handlePasswordChange(value){\n        console.log(value)\n        this.setState({password:value})\n      }\n      handleEmailChange(value){\n        if(value.length < 3){\n          this.setState({isInvalid:true})\n        }\n        if(value.length > 3){\n          this.setState({isInvalid:false})\n        }\n       let errorMessage = this.state.isInvalid\n    ? 'Enter 3 or more characters for product type is equal to'\n    : '';\n \n        console.log(value)\n        this.setState({email:value,errorMessage:errorMessage})\n    }\n    handleRoleChange(value){\n      console.log(value)\n      this.setState({roleselected:value})\n    }\n       \n    render() {\n        const{email,password,roleselected,errorMessage,errorMessagePassword,errorMessageRole,isInvalid,isInvalidPassword}=this.state;\n       \n    return (\n        <Page title=\"SignIn\" separator>  \n          <Layout>\n       \n        <Layout.AnnotatedSection\n          title=\"Account details\"\n          description=\"Jaded Pixel will use this as your account information.\"\n        >\n        <Card sectioned>  \n <Form onSubmit={(_event)=>this.handleSubmit(_event)}>\n      <FormLayout>\n       \n     \n        <TextField\n          value={email}\n          onChange={(value) => this.handleEmailChange(value)}\n          label=\"Email\"\n          type=\"email\"\n          error={isInvalid}\n          id=\"email\"\n          helpText={\n            <span>\n              Enter your email Address.\n            </span>\n          }\n        />\n          <div style={{marginTop: '4px'}}>\n          <InlineError message={errorMessage} fieldID={email} />\n        </div>\n             <TextField\n          value={password}\n          onChange={(value) => this.handlePasswordChange(value)}\n          label=\"Password\"\n          type=\"password\"\n          error={isInvalidPassword}\n          id=\"password\"\n          helpText={\n            <span>\n              Enter your email Password.\n            </span>\n          }\n        />\n         <div style={{marginTop: '4px'}}>\n          <InlineError message={errorMessagePassword} fieldID={'password'} />\n        </div>\n        <Select\n        label=\"Select Role\"\n        options={[\n          {label: 'Seller', value: 'seller'},\n          {label: 'DropShipper', value: 'dropshipper'},\n        ]}\n        id=\"role\"\n        selected={[roleselected]}\n        onChange={(value)=>this.handleRoleChange(value)}\n      />\n          <div style={{marginTop: '4px'}}>\n          <InlineError message={errorMessageRole} fieldID={'role'} />\n        </div>\n\n        <Button submit>Sign In</Button>\n        <Link url=\"/signup\">Not Resgistered?</Link>\n           </FormLayout>\n    </Form>\n    </Card> \n    </Layout.AnnotatedSection>\n    </Layout>\n        </Page>\n\n    );\n\n    }\n    \n}"]},"metadata":{},"sourceType":"module"}