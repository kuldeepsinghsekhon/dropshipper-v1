{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Layout, Page, TextStyle, EmptyState } from '@shopify/polaris';\nimport { TitleBar, ResourcePicker } from '@shopify/app-bridge-react';\nimport ResourceListWithProducts from '../components/ResourceList';\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport { Context } from '@shopify/app-bridge-react';\nimport store from 'store-js';\n\nconst axios = require('axios');\n\nconst session = require('koa-session');\n\nimport Cookies from 'js-cookie';\nconst shop = Cookies.get(\"shopOrigin\");\nconst img = 'https://cdn.shopify.com/s/files/1/0757/9955/files/empty-state.svg';\n\nclass Index extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      open: false,\n      userRole: store.get('userRole')\n    });\n\n    _defineProperty(this, \"handleSelection\", resources => {\n      store.set('ids', []);\n      const url = \"https://aladdin-dropshipper-server.herokuapp.com/products/new\";\n      this.setState({\n        open: false\n      });\n      const productcontainer = resources.selection.map(product => {\n        const container = {};\n        container.title = product.title;\n        container.body_html = product.descriptionHtml;\n        container.tags = product.tags;\n        container.product_type = product.productType;\n        container.vendor = 'dropshipper';\n        container.shopifyProductId = product.id;\n        container.shop = shop;\n        axios.post(url, container).then(response => {\n          this.shop_products();\n        }).catch(function (error) {//console.log(error);\n        });\n      });\n    });\n  }\n\n  shop_products() {\n    let url = \"https://aladdin-dropshipper-server.herokuapp.com/shop_products\";\n    axios.post(url, {\n      \"shop\": shop\n    }).then(response => {\n      const ids = response.data.map(product => product.shopifyProductId);\n      store.set('ids', ids); //redirect.dispatch(Redirect.Action.APP,'/')      \n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  componentDidMount() {\n    const userRole = this.state.userRole;\n    this.shop_products();\n  }\n\n  render() {\n    //console.log()\n    const {\n      open,\n      userRole\n    } = this.state;\n    const emptyState = !store.get('ids');\n\n    if (userRole == 'seller') {\n      return __jsx(Page, null, __jsx(TitleBar, {\n        primaryAction: {\n          content: 'Select products',\n          onAction: () => this.setState({\n            open: true\n          })\n        }\n      }), __jsx(ResourcePicker, {\n        resourceType: \"Product\",\n        showVariants: false,\n        open: this.state.open,\n        onSelection: resources => this.handleSelection(resources),\n        onCancel: () => this.setState({\n          open: false\n        })\n      }), emptyState ? __jsx(Layout, null, __jsx(EmptyState, {\n        heading: \"Sell Your Products on Multiple Stores\",\n        action: {\n          content: 'Select products',\n          onAction: () => this.setState({\n            open: true\n          })\n        },\n        image: img\n      }, __jsx(\"p\", null, \"Select products to sale .\"))) : __jsx(ResourceListWithProducts, null));\n    } else {\n      return __jsx(Page, null, __jsx(EmptyState, {\n        heading: \"Only Seller Can Sell Products\",\n        action: {\n          content: 'Register As Seller',\n          onAction: () => {}\n        },\n        image: img\n      }));\n    }\n  }\n\n}\n\nexport default Index;","map":{"version":3,"sources":["C:/Users/kuldeep/Downloads/aladdin-dropshiper-local/pages/selling_products.js"],"names":["Layout","Page","TextStyle","EmptyState","TitleBar","ResourcePicker","ResourceListWithProducts","Redirect","Context","store","axios","require","session","Cookies","shop","get","img","Index","React","Component","open","userRole","resources","set","url","setState","productcontainer","selection","map","product","container","title","body_html","descriptionHtml","tags","product_type","productType","vendor","shopifyProductId","id","post","then","response","shop_products","catch","error","ids","data","console","log","componentDidMount","state","render","emptyState","content","onAction","handleSelection"],"mappings":"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","sourcesContent":["import { Layout, Page, TextStyle,EmptyState} from '@shopify/polaris';\nimport { TitleBar,ResourcePicker } from '@shopify/app-bridge-react';\nimport ResourceListWithProducts from '../components/ResourceList';\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport { Context } from '@shopify/app-bridge-react';\nimport store from 'store-js';\nconst axios =require('axios');\nconst session = require('koa-session');\nimport Cookies from 'js-cookie';\nconst shop=Cookies.get(\"shopOrigin\");\nconst img = 'https://cdn.shopify.com/s/files/1/0757/9955/files/empty-state.svg';\nclass Index extends React.Component {\n  state = { open: false,userRole:store.get('userRole') };\n   handleSelection = (resources) => {\n    store.set('ids',[]);\n    const url=\"https://aladdin-dropshipper-server.herokuapp.com/products/new\";\n    this.setState({ open: false })\n     const productcontainer = resources.selection.map((product) =>{\n      const container = {};\n      container.title = product.title;\n      container.body_html = product.descriptionHtml;\n      container.tags=product.tags;\n      container.product_type=product.productType;\n      container.vendor='dropshipper';\n      container.shopifyProductId=product.id;\n      container.shop=shop;\n      axios.post(url,container).then( ( response ) => {\n        this.shop_products()             \n      } ).catch(function (error) {\n        //console.log(error);\n      })\n     });\n  }\n  shop_products(){\n    let url=\"https://aladdin-dropshipper-server.herokuapp.com/shop_products\";\n    axios.post(url,{\"shop\":shop}).then( (response)=>{ \n      const ids =response.data.map((product) => product.shopifyProductId);\n      store.set('ids', ids);\n        //redirect.dispatch(Redirect.Action.APP,'/')      \n    } ).catch(function (error) {\n      console.log(error);\n    })\n  }\n  componentDidMount() {\n    const userRole=this.state.userRole;\n    this.shop_products();\n }\n  render() {\n \n    //console.log()\n    const { open,userRole }=this.state;\n    const emptyState = !store.get('ids');\n    if(userRole=='seller'){\n    return (\n     \n  <Page>\n    <TitleBar\n      primaryAction={{\n        content: 'Select products',\n        onAction: () => this.setState({ open: true }),\n      }}\n    />\n    <ResourcePicker\n          resourceType=\"Product\"\n          showVariants={false}\n          open={this.state.open}\n          onSelection={(resources) => this.handleSelection(resources)}\n          onCancel={() => this.setState({ open: false })}\n        />\n         {emptyState ? (\n    <Layout>   \n      <EmptyState\n        heading=\"Sell Your Products on Multiple Stores\"\n        action={{\n          content: 'Select products',\n          onAction: () => this.setState({ open: true }),\n        }}\n        image={img}\n      >\n        <p>Select products to sale .</p>\n      </EmptyState>\n      </Layout>\n       ) : (\n        <ResourceListWithProducts />\n        )}\n    </Page>\n \n);\n}else{\n  return (\n     \n    <Page>\n <EmptyState\n        heading=\"Only Seller Can Sell Products\"\n        action={{\n          content: 'Register As Seller',\n          onAction: () =>{},\n        }}\n        image={img}\n      ></EmptyState>\n      </Page>\n  )}\n}\n}\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}