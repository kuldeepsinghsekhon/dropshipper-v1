{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport App from 'next/app';\nimport Head from 'next/head';\nimport { AppProvider, Frame } from '@shopify/polaris';\nimport translations from '@shopify/polaris/locales/en.json';\nimport '@shopify/polaris/styles.css';\nimport { Provider } from '@shopify/app-bridge-react';\nimport Cookies from 'js-cookie';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\nvar client = new ApolloClient({\n  fetchOptions: {\n    credentials: 'include'\n  }\n});\n\nvar MyApp = /*#__PURE__*/function (_App) {\n  _inherits(MyApp, _App);\n\n  var _super = _createSuper(MyApp);\n\n  function MyApp() {\n    _classCallCheck(this, MyApp);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(MyApp, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          Component = _this$props.Component,\n          pageProps = _this$props.pageProps;\n      var config = {\n        apiKey: API_KEY,\n        shopOrigin: Cookies.get(\"shopOrigin\"),\n        forceRedirect: true\n      };\n      return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"Sample App\"), __jsx(\"meta\", {\n        charSet: \"utf-8\"\n      })), __jsx(Provider, {\n        config: config\n      }, __jsx(AppProvider, {\n        i18n: translations\n      }, __jsx(Frame, null, __jsx(ApolloProvider, {\n        client: client\n      }, __jsx(Component, pageProps))))));\n    }\n  }]);\n\n  return MyApp;\n}(App);\n\nexport default MyApp;","map":{"version":3,"sources":["C:/Users/kuldeep/Downloads/aladdin-dropshiper-local/pages/_app.js"],"names":["App","Head","AppProvider","Frame","translations","Provider","Cookies","ApolloClient","ApolloProvider","client","fetchOptions","credentials","MyApp","props","Component","pageProps","config","apiKey","API_KEY","shopOrigin","get","forceRedirect"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,UAAhB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,WAAT,EAAqBC,KAArB,QAAiC,kBAAjC;AACA,OAAOC,YAAP,MAAyB,kCAAzB;AACA,OAAO,6BAAP;AACA,SAASC,QAAT,QAAyB,2BAAzB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,YAAP,MAAyB,cAAzB;AACA,SAASC,cAAT,QAA+B,cAA/B;AACA,IAAMC,MAAM,GAAG,IAAIF,YAAJ,CAAiB;AAC9BG,EAAAA,YAAY,EAAE;AACZC,IAAAA,WAAW,EAAE;AADD;AADgB,CAAjB,CAAf;;IAKMC,K;;;;;;;;;;;;;6BACK;AAAA,wBAC0B,KAAKC,KAD/B;AAAA,UACCC,SADD,eACCA,SADD;AAAA,UACYC,SADZ,eACYA,SADZ;AAEP,UAAMC,MAAM,GAAG;AAAEC,QAAAA,MAAM,EAAEC,OAAV;AAAmBC,QAAAA,UAAU,EAAEb,OAAO,CAACc,GAAR,CAAY,YAAZ,CAA/B;AAA0DC,QAAAA,aAAa,EAAE;AAAzE,OAAf;AACA,aACE,MAAC,KAAD,CAAO,QAAP,QACE,MAAC,IAAD,QACE,kCADF,EAEE;AAAM,QAAA,OAAO,EAAC;AAAd,QAFF,CADF,EAKE,MAAC,QAAD;AAAU,QAAA,MAAM,EAAEL;AAAlB,SACA,MAAC,WAAD;AAAc,QAAA,IAAI,EAAEZ;AAApB,SACA,MAAC,KAAD,QACA,MAAC,cAAD;AAAgB,QAAA,MAAM,EAAEK;AAAxB,SACI,MAAC,SAAD,EAAeM,SAAf,CADJ,CADA,CADA,CADA,CALF,CADF;AAiBD;;;;EArBiBf,G;;AAuBpB,eAAeY,KAAf","sourcesContent":["import App from 'next/app';\nimport Head from 'next/head';\nimport { AppProvider,Frame} from '@shopify/polaris';\nimport translations from '@shopify/polaris/locales/en.json';\nimport '@shopify/polaris/styles.css';\nimport { Provider } from '@shopify/app-bridge-react';\nimport Cookies from 'js-cookie';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\nconst client = new ApolloClient({\n  fetchOptions: {\n    credentials: 'include'\n  },\n});\nclass MyApp extends App {  \n  render() {\n    const { Component, pageProps } = this.props;\n    const config = { apiKey: API_KEY, shopOrigin: Cookies.get(\"shopOrigin\"), forceRedirect: true };\n    return (\n      <React.Fragment>\n        <Head>\n          <title>Sample App</title>\n          <meta charSet=\"utf-8\" />\n        </Head> \n        <Provider config={config}>     \n        <AppProvider  i18n={translations}>\n        <Frame>\n        <ApolloProvider client={client}>\n            <Component {...pageProps} />\n          </ApolloProvider>\n         </Frame>\n          </AppProvider> \n          </Provider>       \n      </React.Fragment>\n    );\n  }\n}\nexport default MyApp;"]},"metadata":{},"sourceType":"module"}