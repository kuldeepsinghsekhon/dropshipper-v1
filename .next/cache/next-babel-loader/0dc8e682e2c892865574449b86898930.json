{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport App from 'next/app';\nimport Head from 'next/head';\nimport { AppProvider, Frame, FooterHelp, Link, TopBar, Navigation } from '@shopify/polaris';\nimport { ArrowLeftMinor, CustomersMinor, SettingsMajorMonotone, DraftOrdersMajorMonotone, OnlineStoreMajorMonotone, ProductsMajorTwotone, SearchMajorMonotone, ConversationMinor, HomeMajorMonotone, OrdersMajorTwotone } from '@shopify/polaris-icons';\nimport translations from '@shopify/polaris/locales/en.json';\nimport '@shopify/polaris/styles.css';\nimport { Provider } from '@shopify/app-bridge-react';\nimport Cookies from 'js-cookie';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\nimport store from 'store-js';\nimport { createApp } from '@shopify/app-bridge';\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport { Context } from '@shopify/app-bridge-react';\nconst client = new ApolloClient({\n  fetchOptions: {\n    credentials: 'include'\n  }\n});\nconst app = createApp({\n  apiKey: 'e4414e65bcc81be4c7eb5e153132934e',\n  shopOrigin: Cookies.get(\"shopOrigin\")\n});\n\nclass MyApp extends App {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      isUserMenuOpen: false,\n      toggleIsUserMenuOpen: false,\n      mobileNavigationActive: false,\n      userRole: store.get('userRole'),\n      firstName: store.get('firstName') ? store.get('firstName') : 'Guest',\n      lastName: store.get('lastName') ? store.get('lastName') : ''\n    });\n  }\n\n  handleNavigationToggle() {\n    this.setState({\n      mobileNavigationActive: !this.state.mobileNavigationActive\n    });\n    console.log('toggle navigation visibility ' + this.state.mobileNavigationActive);\n  }\n\n  toggleIsUserMenuOpen() {\n    this.setState({\n      isUserMenuOpen: !this.state.isUserMenuOpen\n    });\n    console.log(this.state.isUserMenuOpen);\n  }\n\n  render() {\n    const shop = Cookies.get(\"shopOrigin\");\n    const redirect = Redirect.create(app);\n    const {\n      Component,\n      pageProps\n    } = this.props;\n    const {\n      isUserMenuOpen,\n      mobileNavigationActive,\n      firstName,\n      lastName\n    } = this.state;\n\n    const userMenuMarkup = __jsx(TopBar.UserMenu, {\n      actions: [{\n        items: [{\n          content: 'Back to Shopify',\n          icon: ArrowLeftMinor\n        }]\n      }, {\n        items: [{\n          content: 'Signout',\n          onClick: () => {\n            alert('sds');\n            store.set('userRole', '');\n            redirect.dispatch(Redirect.Action.APP, '/');\n          }\n        }]\n      }],\n      name: firstName,\n      detail: firstName + ' ' + lastName,\n      initials: firstName.charAt(0).toUpperCase(),\n      open: isUserMenuOpen,\n      onToggle: () => this.toggleIsUserMenuOpen()\n    });\n\n    let menuitems = [];\n\n    if (this.state.userRole == 'dropshipper') {\n      menuitems = [{\n        label: 'DropShipper Dashboard',\n        icon: HomeMajorMonotone,\n        onClick: () => {}\n      }, {\n        label: 'Search Products',\n        icon: SearchMajorMonotone,\n        onClick: () => {\n          redirect.dispatch(Redirect.Action.APP, '/search');\n        }\n      }, {\n        label: 'My Products',\n        icon: ProductsMajorTwotone,\n        onClick: () => {\n          redirect.dispatch(Redirect.Action.APP, '/my-products');\n        }\n      }, {\n        label: 'Manage Orders',\n        icon: DraftOrdersMajorMonotone,\n        onClick: () => {\n          redirect.dispatch(Redirect.Action.APP, '/manage-orders');\n        }\n      }, {\n        label: 'Pricing',\n        icon: SettingsMajorMonotone,\n        onClick: () => {\n          redirect.dispatch(Redirect.Action.APP, '/choose_plan');\n        }\n      }, {\n        label: 'Settings',\n        icon: SettingsMajorMonotone,\n        onClick: () => {\n          redirect.dispatch(Redirect.Action.APP, '/settings');\n        }\n      }, {\n        label: 'Signout',\n        icon: CustomersMinor,\n        onClick: () => {\n          store.set('userRole', '');\n          redirect.dispatch(Redirect.Action.APP, '/');\n        }\n      }];\n    } else if (this.state.userRole == 'seller') {\n      menuitems = [{\n        label: 'Seller Dashboard',\n        icon: HomeMajorMonotone,\n        url: '/'\n      }, {\n        label: 'Selling Products',\n        icon: OrdersMajorTwotone,\n        onClick: () => {\n          redirect.dispatch(Redirect.Action.APP, '/selling_products');\n        }\n      },, {\n        label: 'Settings',\n        icon: SettingsMajorMonotone,\n        onClick: () => {\n          redirect.dispatch(Redirect.Action.APP, '/settings');\n        }\n      }, {\n        label: 'Signout',\n        icon: CustomersMinor,\n        onClick: () => {\n          store.set('userRole', '');\n          redirect.dispatch(Redirect.Action.APP, '/');\n        }\n      }];\n    } else {\n      menuitems = [{\n        label: 'SignIn',\n        icon: CustomersMinor,\n        onClick: () => {\n          redirect.dispatch(Redirect.Action.APP, '/');\n        }\n      }, {\n        label: 'Signup',\n        icon: CustomersMinor,\n        onClick: () => {\n          redirect.dispatch(Redirect.Action.APP, '/signup');\n        }\n      }];\n    }\n\n    const navigationMarkup = __jsx(Navigation, {\n      location: \"/\"\n    }, __jsx(Navigation.Section, {\n      items: [{\n        label: 'Back to Shopify',\n        icon: ArrowLeftMinor\n      }]\n    }), __jsx(Navigation.Section, {\n      separator: true,\n      title: \"Dropshipper App\",\n      items: menuitems,\n      action: {\n        icon: ConversationMinor,\n        accessibilityLabel: 'Signout',\n        onClick: () => {\n          store.set('userRole', '');\n          store.set('firstName', 'Guest');\n          store.set('lastName', '');\n          store.set('email', '');\n          store.set('username', '');\n          store.set('id', '');\n          redirect.dispatch(Redirect.Action.APP, '/');\n        }\n      }\n    }));\n\n    const topBarMarkup = __jsx(TopBar, {\n      showNavigationToggle: true,\n      userMenu: userMenuMarkup,\n      onNavigationToggle: () => this.handleNavigationToggle()\n    });\n\n    const config = {\n      apiKey: API_KEY,\n      shopOrigin: Cookies.get(\"shopOrigin\"),\n      forceRedirect: true\n    };\n    return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"dropshipper\"), __jsx(\"meta\", {\n      charSet: \"utf-8\"\n    })), __jsx(Provider, {\n      config: config\n    }, __jsx(AppProvider, {\n      i18n: translations\n    }, __jsx(Frame, {\n      topBar: topBarMarkup,\n      navigation: navigationMarkup,\n      showMobileNavigation: mobileNavigationActive,\n      onNavigationDismiss: () => this.handleNavigationToggle()\n    }, __jsx(ApolloProvider, {\n      client: client\n    }, __jsx(Component, pageProps))))));\n  }\n\n}\n\nexport default MyApp;","map":{"version":3,"sources":["C:/Users/kuldeep/Downloads/aladdin-dropshiper-local/pages/_app.js"],"names":["App","Head","AppProvider","Frame","FooterHelp","Link","TopBar","Navigation","ArrowLeftMinor","CustomersMinor","SettingsMajorMonotone","DraftOrdersMajorMonotone","OnlineStoreMajorMonotone","ProductsMajorTwotone","SearchMajorMonotone","ConversationMinor","HomeMajorMonotone","OrdersMajorTwotone","translations","Provider","Cookies","ApolloClient","ApolloProvider","store","createApp","Redirect","Context","client","fetchOptions","credentials","app","apiKey","shopOrigin","get","MyApp","isUserMenuOpen","toggleIsUserMenuOpen","mobileNavigationActive","userRole","firstName","lastName","handleNavigationToggle","setState","state","console","log","render","shop","redirect","create","Component","pageProps","props","userMenuMarkup","items","content","icon","onClick","alert","set","dispatch","Action","APP","charAt","toUpperCase","menuitems","label","url","navigationMarkup","accessibilityLabel","topBarMarkup","config","API_KEY","forceRedirect"],"mappings":"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","sourcesContent":["import App from 'next/app';\nimport Head from 'next/head';\nimport { AppProvider,Frame,FooterHelp,Link,TopBar,Navigation} from '@shopify/polaris';\nimport {ArrowLeftMinor,CustomersMinor,SettingsMajorMonotone,DraftOrdersMajorMonotone,OnlineStoreMajorMonotone,ProductsMajorTwotone,SearchMajorMonotone, ConversationMinor, HomeMajorMonotone, OrdersMajorTwotone} from '@shopify/polaris-icons';\nimport translations from '@shopify/polaris/locales/en.json';\nimport '@shopify/polaris/styles.css';\nimport { Provider } from '@shopify/app-bridge-react';\nimport Cookies from 'js-cookie';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\nimport store from 'store-js';\nimport { createApp } from '@shopify/app-bridge';\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport { Context } from '@shopify/app-bridge-react';\nconst client = new ApolloClient({\n  fetchOptions: {\n    credentials: 'include'\n  },\n});\nconst app = createApp({\n  apiKey: 'e4414e65bcc81be4c7eb5e153132934e',\n  shopOrigin: Cookies.get(\"shopOrigin\"),\n});\nclass MyApp extends App {  \n\n  state={\n    isUserMenuOpen:false,\n    toggleIsUserMenuOpen:false,\n    mobileNavigationActive:false,\n    userRole:store.get('userRole'),\n    firstName:store.get('firstName')?store.get('firstName'):'Guest',\n    lastName:store.get('lastName')?store.get('lastName'):''\n  };\n  handleNavigationToggle(){\n    this.setState({mobileNavigationActive:!this.state.mobileNavigationActive})\n    console.log('toggle navigation visibility '+this.state.mobileNavigationActive);\n  }\n  toggleIsUserMenuOpen(){\n    \n    this.setState({isUserMenuOpen:!this.state.isUserMenuOpen})\n    console.log(this.state.isUserMenuOpen)\n  }\n  render() {\n    const shop=Cookies.get(\"shopOrigin\");\n    const redirect = Redirect.create(app);\n    const { Component, pageProps } = this.props;\n    const{isUserMenuOpen,mobileNavigationActive,firstName,lastName}=this.state;\n    const userMenuMarkup = (\n      <TopBar.UserMenu\n        actions={[\n          {\n            items: [{content: 'Back to Shopify', icon: ArrowLeftMinor}],\n          },\n          {\n            items: [{content: 'Signout', \n            onClick: ()=>{\n              alert('sds')\n              store.set('userRole','')\n              redirect.dispatch(\n                Redirect.Action.APP,'/'\n              );\n            },\n          }],\n          },\n        ]}\n        name={firstName}\n        detail={firstName+' '+lastName}\n        initials={firstName.charAt(0).toUpperCase()}\n        open={isUserMenuOpen}\n        onToggle={()=>this.toggleIsUserMenuOpen()}\n      />\n    );\n    let  menuitems=[];\n    if(this.state.userRole=='dropshipper'){\n      menuitems=[\n        {\n          label: 'DropShipper Dashboard',\n          icon: HomeMajorMonotone,\n          onClick: ()=>{},\n        },\n        {\n          label: 'Search Products',\n          icon: SearchMajorMonotone,\n          onClick: ()=>{\n            redirect.dispatch(\n              Redirect.Action.APP,'/search'\n            );\n          },\n        },\n        {\n          label: 'My Products',\n          icon: ProductsMajorTwotone,\n          onClick: ()=>{\n            redirect.dispatch(\n              Redirect.Action.APP,'/my-products'\n            );\n          },\n         \n        },\n        {\n          label:'Manage Orders',\n          icon:DraftOrdersMajorMonotone,\n          onClick: ()=>{\n            redirect.dispatch(\n              Redirect.Action.APP,'/manage-orders'\n            );\n          },\n        },\n        {\n          label:'Pricing',\n          icon:SettingsMajorMonotone,\n          onClick: ()=>{\n            redirect.dispatch(\n              Redirect.Action.APP,'/choose_plan'\n            );\n          },\n        },\n        {\n          label:'Settings',\n          icon:SettingsMajorMonotone,\n          onClick: ()=>{\n            redirect.dispatch(\n              Redirect.Action.APP,'/settings'\n            );\n          },\n        },\n        {\n          label:'Signout',\n          icon: CustomersMinor,\n          onClick: ()=>{\n            store.set('userRole','')\n            redirect.dispatch(Redirect.Action.APP,'/');\n          }\n        }\n      ];\n       }else if(this.state.userRole=='seller'){\n        menuitems=[\n          {\n            label: 'Seller Dashboard',\n            icon: HomeMajorMonotone,\n            url:'/',\n          },\n          {\n            label: 'Selling Products',\n            icon: OrdersMajorTwotone,\n            onClick: ()=>{\n              redirect.dispatch(\n                Redirect.Action.APP,'/selling_products'\n              );\n            },\n          },\n          ,\n        {\n          label:'Settings',\n          icon:SettingsMajorMonotone,\n          onClick: ()=>{\n            redirect.dispatch(\n              Redirect.Action.APP,'/settings'\n            );\n          },\n        },\n        {\n          label:'Signout',\n          icon: CustomersMinor,\n          onClick: ()=>{\n            store.set('userRole','')\n            redirect.dispatch(Redirect.Action.APP,'/');\n          },\n        }\n        ]\n    }else{\n      menuitems=[\n       \n        {\n          label: 'SignIn',\n          icon: CustomersMinor,\n          onClick: ()=>{\n            redirect.dispatch(\n              Redirect.Action.APP,'/'\n            );\n          },\n        },\n        {\n          label: 'Signup',\n          icon: CustomersMinor,\n          onClick: ()=>{\n            redirect.dispatch(\n              Redirect.Action.APP,'/signup'\n            );\n          },\n        }\n      \n      ]\n\n    }\n      const navigationMarkup = (\n        <Navigation location=\"/\">\n          <Navigation.Section\n            items={[\n              {\n                label: 'Back to Shopify',\n                icon: ArrowLeftMinor,\n              },\n            ]}\n          />\n          <Navigation.Section\n            separator\n            title=\"Dropshipper App\"\n           \n            items={menuitems}\n            action={{\n              icon: ConversationMinor,\n              accessibilityLabel: 'Signout',\n              onClick: ()=>{\n                store.set('userRole','')\n                store.set('firstName','Guest')\n                store.set('lastName','')\n                store.set('email','')\n                store.set('username','')\n                store.set('id','')\n                redirect.dispatch(\n                  Redirect.Action.APP,'/'\n                );\n              },\n            }}\n          />\n        </Navigation>\n      );\n   \n   \n  \n    const topBarMarkup = (\n      <TopBar\n        showNavigationToggle\n        userMenu={userMenuMarkup}\n        onNavigationToggle={()=>this.handleNavigationToggle()}\n        \n      />\n    );\n    const config = { apiKey: API_KEY, shopOrigin: Cookies.get(\"shopOrigin\"), forceRedirect: true };\n\n    return (\n      <React.Fragment>\n        <Head>\n          <title>dropshipper</title>\n          <meta charSet=\"utf-8\" />\n        </Head> \n        <Provider config={config}>     \n        <AppProvider  i18n={translations}>\n        <Frame topBar={topBarMarkup} \n        navigation={navigationMarkup}\n        showMobileNavigation={mobileNavigationActive}\n        onNavigationDismiss={()=>this.handleNavigationToggle()}\n        >\n        <ApolloProvider client={client}>\n            <Component {...pageProps} />\n\n          </ApolloProvider>\n         </Frame>\n          </AppProvider> \n          </Provider>       \n      </React.Fragment>\n    );\n  }\n}\nexport default MyApp;"]},"metadata":{},"sourceType":"module"}