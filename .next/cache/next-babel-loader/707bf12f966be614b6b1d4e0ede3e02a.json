{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport App from 'next/app';\nimport Head from 'next/head';\nimport { AppProvider, Frame, FooterHelp, Link, TopBar, Navigation } from '@shopify/polaris';\nimport { ArrowLeftMinor, CustomersMinor, SettingsMajorMonotone, DraftOrdersMajorMonotone, OnlineStoreMajorMonotone, ProductsMajorTwotone, SearchMajorMonotone, ConversationMinor, HomeMajorMonotone, OrdersMajorTwotone } from '@shopify/polaris-icons';\nimport translations from '@shopify/polaris/locales/en.json';\nimport '@shopify/polaris/styles.css';\nimport { Provider } from '@shopify/app-bridge-react';\nimport Cookies from 'js-cookie';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\nimport store from 'store-js';\nimport { createApp } from '@shopify/app-bridge';\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport { Context } from '@shopify/app-bridge-react';\nvar client = new ApolloClient({\n  fetchOptions: {\n    credentials: 'include'\n  }\n}); // const app = createApp({\n//   apiKey: 'e4414e65bcc81be4c7eb5e153132934e',\n//   shopOrigin: Cookies.get(\"shopOrigin\"),\n// });\n\nvar MyApp = /*#__PURE__*/function (_App) {\n  _inherits(MyApp, _App);\n\n  var _super = _createSuper(MyApp);\n\n  function MyApp() {\n    var _this;\n\n    _classCallCheck(this, MyApp);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isUserMenuOpen: false,\n      toggleIsUserMenuOpen: false,\n      mobileNavigationActive: false,\n      userRole: store.get('userRole'),\n      firstName: store.get('firstName') ? store.get('firstName') : 'Guest',\n      lastName: store.get('lastName') ? store.get('lastName') : ''\n    });\n\n    return _this;\n  }\n\n  _createClass(MyApp, [{\n    key: \"handleNavigationToggle\",\n    value: function handleNavigationToggle() {\n      this.setState({\n        mobileNavigationActive: !this.state.mobileNavigationActive\n      });\n      console.log('toggle navigation visibility ' + this.state.mobileNavigationActive);\n    }\n  }, {\n    key: \"toggleIsUserMenuOpen\",\n    value: function toggleIsUserMenuOpen() {\n      this.setState({\n        isUserMenuOpen: !this.state.isUserMenuOpen\n      });\n      console.log(this.state.isUserMenuOpen);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var shop = Cookies.get(\"shopOrigin\");\n      var redirect = Redirect.create(this.context);\n      var _this$props = this.props,\n          Component = _this$props.Component,\n          pageProps = _this$props.pageProps;\n      var _this$state = this.state,\n          isUserMenuOpen = _this$state.isUserMenuOpen,\n          mobileNavigationActive = _this$state.mobileNavigationActive,\n          firstName = _this$state.firstName,\n          lastName = _this$state.lastName;\n\n      var userMenuMarkup = __jsx(TopBar.UserMenu, {\n        actions: [{\n          items: [{\n            content: 'Back to Shopify',\n            icon: ArrowLeftMinor\n          }]\n        }, {\n          items: [{\n            content: 'Signout',\n            onClick: function onClick() {\n              alert('sds');\n              store.set('userRole', '');\n              redirect.dispatch(Redirect.Action.APP, '/');\n            }\n          }]\n        }],\n        name: firstName,\n        detail: firstName + ' ' + lastName,\n        initials: firstName.charAt(0).toUpperCase(),\n        open: isUserMenuOpen,\n        onToggle: function onToggle() {\n          return _this2.toggleIsUserMenuOpen();\n        }\n      });\n\n      var menuitems = [];\n\n      if (this.state.userRole == 'dropshipper') {\n        menuitems = [{\n          label: 'DropShipper Dashboard',\n          icon: HomeMajorMonotone,\n          onClick: function onClick() {}\n        }, {\n          label: 'Search Products',\n          icon: SearchMajorMonotone,\n          onClick: function onClick() {\n            redirect.dispatch(Redirect.Action.APP, '/search');\n          }\n        }, {\n          label: 'My Products',\n          icon: ProductsMajorTwotone,\n          onClick: function onClick() {\n            redirect.dispatch(Redirect.Action.APP, '/my-products');\n          }\n        }, {\n          label: 'Manage Orders',\n          icon: DraftOrdersMajorMonotone,\n          onClick: function onClick() {\n            redirect.dispatch(Redirect.Action.APP, '/manage-orders');\n          }\n        }, {\n          label: 'Pricing',\n          icon: SettingsMajorMonotone,\n          onClick: function onClick() {\n            redirect.dispatch(Redirect.Action.APP, '/choose_plan');\n          }\n        }, {\n          label: 'Settings',\n          icon: SettingsMajorMonotone,\n          onClick: function onClick() {\n            redirect.dispatch(Redirect.Action.APP, '/settings');\n          }\n        }, {\n          label: 'Signout',\n          icon: CustomersMinor,\n          onClick: function onClick() {\n            store.set('userRole', '');\n            redirect.dispatch(Redirect.Action.APP, '/');\n          }\n        }];\n      } else if (this.state.userRole == 'seller') {\n        menuitems = [{\n          label: 'Seller Dashboard',\n          icon: HomeMajorMonotone,\n          url: '/'\n        }, {\n          label: 'Selling Products',\n          icon: OrdersMajorTwotone,\n          onClick: function onClick() {\n            redirect.dispatch(Redirect.Action.APP, '/selling_products');\n          }\n        },, {\n          label: 'Settings',\n          icon: SettingsMajorMonotone,\n          onClick: function onClick() {\n            redirect.dispatch(Redirect.Action.APP, '/settings');\n          }\n        }, {\n          label: 'Signout',\n          icon: CustomersMinor,\n          onClick: function onClick() {\n            store.set('userRole', '');\n            redirect.dispatch(Redirect.Action.APP, '/');\n          }\n        }];\n      } else {\n        menuitems = [{\n          label: 'SignIn',\n          icon: CustomersMinor,\n          onClick: function onClick() {\n            redirect.dispatch(Redirect.Action.APP, '/');\n          }\n        }, {\n          label: 'Signup',\n          icon: CustomersMinor,\n          onClick: function onClick() {\n            redirect.dispatch(Redirect.Action.APP, '/signup');\n          }\n        }];\n      }\n\n      var navigationMarkup = __jsx(Navigation, {\n        location: \"/\"\n      }, __jsx(Navigation.Section, {\n        items: [{\n          label: 'Back to Shopify',\n          icon: ArrowLeftMinor\n        }]\n      }), __jsx(Navigation.Section, {\n        separator: true,\n        title: \"Dropshipper App\",\n        items: menuitems,\n        action: {\n          icon: ConversationMinor,\n          accessibilityLabel: 'Signout',\n          onClick: function onClick() {\n            store.set('userRole', '');\n            store.set('firstName', 'Guest');\n            store.set('lastName', '');\n            store.set('email', '');\n            store.set('username', '');\n            store.set('id', '');\n            redirect.dispatch(Redirect.Action.APP, '/');\n          }\n        }\n      }));\n\n      var topBarMarkup = __jsx(TopBar, {\n        showNavigationToggle: true,\n        userMenu: userMenuMarkup,\n        onNavigationToggle: function onNavigationToggle() {\n          return _this2.handleNavigationToggle();\n        }\n      });\n\n      var config = {\n        apiKey: API_KEY,\n        shopOrigin: Cookies.get(\"shopOrigin\"),\n        forceRedirect: true\n      };\n      return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"dropshipper\"), __jsx(\"meta\", {\n        charSet: \"utf-8\"\n      })), __jsx(Provider, {\n        config: config\n      }, __jsx(AppProvider, {\n        i18n: translations\n      }, __jsx(Frame, {\n        topBar: topBarMarkup,\n        navigation: navigationMarkup,\n        showMobileNavigation: mobileNavigationActive,\n        onNavigationDismiss: function onNavigationDismiss() {\n          return _this2.handleNavigationToggle();\n        }\n      }, __jsx(ApolloProvider, {\n        client: client\n      }, __jsx(Component, pageProps))))));\n    }\n  }]);\n\n  return MyApp;\n}(App);\n\nexport default MyApp;","map":{"version":3,"sources":["C:/Users/kuldeep/Downloads/aladdin-dropshiper-local/pages/_app.js"],"names":["App","Head","AppProvider","Frame","FooterHelp","Link","TopBar","Navigation","ArrowLeftMinor","CustomersMinor","SettingsMajorMonotone","DraftOrdersMajorMonotone","OnlineStoreMajorMonotone","ProductsMajorTwotone","SearchMajorMonotone","ConversationMinor","HomeMajorMonotone","OrdersMajorTwotone","translations","Provider","Cookies","ApolloClient","ApolloProvider","store","createApp","Redirect","Context","client","fetchOptions","credentials","MyApp","isUserMenuOpen","toggleIsUserMenuOpen","mobileNavigationActive","userRole","get","firstName","lastName","setState","state","console","log","shop","redirect","create","context","props","Component","pageProps","userMenuMarkup","items","content","icon","onClick","alert","set","dispatch","Action","APP","charAt","toUpperCase","menuitems","label","url","navigationMarkup","accessibilityLabel","topBarMarkup","handleNavigationToggle","config","apiKey","API_KEY","shopOrigin","forceRedirect"],"mappings":"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","sourcesContent":["import App from 'next/app';\nimport Head from 'next/head';\nimport { AppProvider,Frame,FooterHelp,Link,TopBar,Navigation} from '@shopify/polaris';\nimport {ArrowLeftMinor,CustomersMinor,SettingsMajorMonotone,DraftOrdersMajorMonotone,OnlineStoreMajorMonotone,ProductsMajorTwotone,SearchMajorMonotone, ConversationMinor, HomeMajorMonotone, OrdersMajorTwotone} from '@shopify/polaris-icons';\nimport translations from '@shopify/polaris/locales/en.json';\nimport '@shopify/polaris/styles.css';\nimport { Provider } from '@shopify/app-bridge-react';\nimport Cookies from 'js-cookie';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\nimport store from 'store-js';\nimport { createApp } from '@shopify/app-bridge';\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport { Context } from '@shopify/app-bridge-react';\nconst client = new ApolloClient({\n  fetchOptions: {\n    credentials: 'include'\n  },\n});\n// const app = createApp({\n//   apiKey: 'e4414e65bcc81be4c7eb5e153132934e',\n//   shopOrigin: Cookies.get(\"shopOrigin\"),\n// });\nclass MyApp extends App {  \n\n  state={\n    isUserMenuOpen:false,\n    toggleIsUserMenuOpen:false,\n    mobileNavigationActive:false,\n    userRole:store.get('userRole'),\n    firstName:store.get('firstName')?store.get('firstName'):'Guest',\n    lastName:store.get('lastName')?store.get('lastName'):''\n  };\n  handleNavigationToggle(){\n    this.setState({mobileNavigationActive:!this.state.mobileNavigationActive})\n    console.log('toggle navigation visibility '+this.state.mobileNavigationActive);\n  }\n  toggleIsUserMenuOpen(){\n    \n    this.setState({isUserMenuOpen:!this.state.isUserMenuOpen})\n    console.log(this.state.isUserMenuOpen)\n  }\n  render() {\n    const shop=Cookies.get(\"shopOrigin\");\n    const redirect = Redirect.create(this.context);\n    const { Component, pageProps } = this.props;\n    const{isUserMenuOpen,mobileNavigationActive,firstName,lastName}=this.state;\n    const userMenuMarkup = (\n      <TopBar.UserMenu\n        actions={[\n          {\n            items: [{content: 'Back to Shopify', icon: ArrowLeftMinor}],\n          },\n          {\n            items: [{content: 'Signout', \n            onClick: ()=>{\n              alert('sds')\n              store.set('userRole','')\n              redirect.dispatch(\n                Redirect.Action.APP,'/'\n              );\n            },\n          }],\n          },\n        ]}\n        name={firstName}\n        detail={firstName+' '+lastName}\n        initials={firstName.charAt(0).toUpperCase()}\n        open={isUserMenuOpen}\n        onToggle={()=>this.toggleIsUserMenuOpen()}\n      />\n    );\n    let  menuitems=[];\n    if(this.state.userRole=='dropshipper'){\n      menuitems=[\n        {\n          label: 'DropShipper Dashboard',\n          icon: HomeMajorMonotone,\n          onClick: ()=>{},\n        },\n        {\n          label: 'Search Products',\n          icon: SearchMajorMonotone,\n          onClick: ()=>{\n            redirect.dispatch(\n              Redirect.Action.APP,'/search'\n            );\n          },\n        },\n        {\n          label: 'My Products',\n          icon: ProductsMajorTwotone,\n          onClick: ()=>{\n            redirect.dispatch(\n              Redirect.Action.APP,'/my-products'\n            );\n          },\n         \n        },\n        {\n          label:'Manage Orders',\n          icon:DraftOrdersMajorMonotone,\n          onClick: ()=>{\n            redirect.dispatch(\n              Redirect.Action.APP,'/manage-orders'\n            );\n          },\n        },\n        {\n          label:'Pricing',\n          icon:SettingsMajorMonotone,\n          onClick: ()=>{\n            redirect.dispatch(\n              Redirect.Action.APP,'/choose_plan'\n            );\n          },\n        },\n        {\n          label:'Settings',\n          icon:SettingsMajorMonotone,\n          onClick: ()=>{\n            redirect.dispatch(\n              Redirect.Action.APP,'/settings'\n            );\n          },\n        },\n        {\n          label:'Signout',\n          icon: CustomersMinor,\n          onClick: ()=>{\n            store.set('userRole','')\n            redirect.dispatch(Redirect.Action.APP,'/');\n          }\n        }\n      ];\n       }else if(this.state.userRole=='seller'){\n        menuitems=[\n          {\n            label: 'Seller Dashboard',\n            icon: HomeMajorMonotone,\n            url:'/',\n          },\n          {\n            label: 'Selling Products',\n            icon: OrdersMajorTwotone,\n            onClick: ()=>{\n              redirect.dispatch(\n                Redirect.Action.APP,'/selling_products'\n              );\n            },\n          },\n          ,\n        {\n          label:'Settings',\n          icon:SettingsMajorMonotone,\n          onClick: ()=>{\n            redirect.dispatch(\n              Redirect.Action.APP,'/settings'\n            );\n          },\n        },\n        {\n          label:'Signout',\n          icon: CustomersMinor,\n          onClick: ()=>{\n            store.set('userRole','')\n            redirect.dispatch(Redirect.Action.APP,'/');\n          },\n        }\n        ]\n    }else{\n      menuitems=[\n       \n        {\n          label: 'SignIn',\n          icon: CustomersMinor,\n          onClick: ()=>{\n            redirect.dispatch(\n              Redirect.Action.APP,'/'\n            );\n          },\n        },\n        {\n          label: 'Signup',\n          icon: CustomersMinor,\n          onClick: ()=>{\n            redirect.dispatch(\n              Redirect.Action.APP,'/signup'\n            );\n          },\n        }\n      \n      ]\n\n    }\n      const navigationMarkup = (\n        <Navigation location=\"/\">\n          <Navigation.Section\n            items={[\n              {\n                label: 'Back to Shopify',\n                icon: ArrowLeftMinor,\n              },\n            ]}\n          />\n          <Navigation.Section\n            separator\n            title=\"Dropshipper App\"\n           \n            items={menuitems}\n            action={{\n              icon: ConversationMinor,\n              accessibilityLabel: 'Signout',\n              onClick: ()=>{\n                store.set('userRole','')\n                store.set('firstName','Guest')\n                store.set('lastName','')\n                store.set('email','')\n                store.set('username','')\n                store.set('id','')\n                redirect.dispatch(\n                  Redirect.Action.APP,'/'\n                );\n              },\n            }}\n          />\n        </Navigation>\n      );\n   \n   \n  \n    const topBarMarkup = (\n      <TopBar\n        showNavigationToggle\n        userMenu={userMenuMarkup}\n        onNavigationToggle={()=>this.handleNavigationToggle()}\n        \n      />\n    );\n    const config = { apiKey: API_KEY, shopOrigin: Cookies.get(\"shopOrigin\"), forceRedirect: true };\n\n    return (\n      <React.Fragment>\n        <Head>\n          <title>dropshipper</title>\n          <meta charSet=\"utf-8\" />\n        </Head> \n        <Provider config={config}>     \n        <AppProvider  i18n={translations}>\n        <Frame topBar={topBarMarkup} \n        navigation={navigationMarkup}\n        showMobileNavigation={mobileNavigationActive}\n        onNavigationDismiss={()=>this.handleNavigationToggle()}\n        >\n        <ApolloProvider client={client}>\n            <Component {...pageProps} />\n\n          </ApolloProvider>\n         </Frame>\n          </AppProvider> \n          </Provider>       \n      </React.Fragment>\n    );\n  }\n}\nexport default MyApp;"]},"metadata":{},"sourceType":"module"}